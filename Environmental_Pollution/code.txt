`app.py`

```python
import streamlit as st
import pandas as pd
import numpy as np
import joblib
import folium
from streamlit_folium import st_folium
from sklearn.preprocessing import StandardScaler
import plotly.express as px
import os

# --- 1. PAGE CONFIGURATION ---
st.set_page_config(
    page_title="EnviroScan: Pollution Source Identifier",
    page_icon="💨",
    layout="wide"
)

# --- 2. CACHED DATA LOADING ---
@st.cache_data
def load_data():
    """
    Loads all necessary data and models.
    Uses caching to prevent reloading on every interaction.
    """
    # Define paths relative to the app.py file
    script_dir = os.path.dirname(os.path.abspath(__file__))
    MODEL_PATH = os.path.join(script_dir, 'models', 'pollution_source_model.joblib')
    TRAIN_PATH = os.path.join(script_dir, 'data', 'train.csv')
    RAW_DATA_PATH = os.path.join(script_dir, 'data', 'consolidated_enviro_data.csv')

    # Load model, data, and create mappings/scaler
    model = joblib.load(MODEL_PATH)
    train_df = pd.read_csv(TRAIN_PATH)
    raw_df = pd.read_csv(RAW_DATA_PATH, parse_dates=['timestamp'])

    # Create class mapping
    unique_labels = sorted(np.unique(train_df['pollution_source']))
    class_mapping = {label: i for i, label in enumerate(unique_labels)}
    inverse_class_mapping = {i: label for label, i in class_mapping.items()}

    # Create and fit the scaler
    numerical_cols = [
        'co', 'no2', 'o3', 'pm10', 'pm25', 'so2', 'temperature', 'humidity',
        'wind_speed', 'wind_direction', 'distance_to_nearest_industrial_m',
        'distance_to_nearest_major_roads_m', 'distance_to_nearest_dump_site_m',
        'distance_to_nearest_agricultural_m'
    ]
    scaler = StandardScaler()
    scaler.fit(train_df[numerical_cols])
    
    # Get the correct column order for the model
    model_columns = train_df.drop('pollution_source', axis=1).columns

    return model, raw_df, scaler, inverse_class_mapping, model_columns, numerical_cols

# --- 3. MAP GENERATION FUNCTION ---
def create_map(df):
    """Creates a Folium map with markers and a heatmap based on the input dataframe."""
    if df.empty:
        return folium.Map(location=[20.5937, 78.9629], zoom_start=5) # Default to India center

    map_center = [df['latitude'].mean(), df['longitude'].mean()]
    m = folium.Map(location=map_center, zoom_start=8, tiles="CartoDB positron")

    source_styles = {
        'Vehicular': {'color': 'blue', 'icon': 'car'},
        'Industrial': {'color': 'gray', 'icon': 'industry'},
        'Agricultural_Burning': {'color': 'orange', 'icon': 'fire'},
        'Background_Mixed': {'color': 'green', 'icon': 'leaf'}
    }

    for _, row in df.iterrows():
        source = row['predicted_source']
        style = source_styles.get(source, {'color': 'black', 'icon': 'question-sign'})
        popup_html = f"""
        <b>Predicted Source:</b> {source}<br>
        <b>Confidence:</b> {row['confidence']:.2%}<br>
        <hr>
        <b>PM2.5:</b> {row['pm25']:.2f} µg/m³<br>
        <b>NO₂:</b> {row['no2']:.2f} µg/m³<br>
        <b>Timestamp:</b> {row['timestamp'].strftime('%Y-%m-%d %H:%M')}
        """
        folium.Marker(
            location=[row['latitude'], row['longitude']],
            popup=folium.Popup(popup_html, max_width=300),
            icon=folium.Icon(color=style['color'], icon=style['icon'], prefix='fa')
        ).add_to(m)

    return m

# --- 4. MAIN APPLICATION ---
# Load all data using the cached function
model, raw_df, scaler, inverse_class_mapping, model_columns, numerical_cols = load_data()

# --- SIDEBAR FILTERS ---
st.sidebar.title("Filters")
selected_city = st.sidebar.selectbox(
    "Select City",
    options=["All Cities", "Chennai_India", "Delhi_India", "Kolkata_India", "Mumbai_India"]
)

# Date range filter
# --- CORRECTED DATE RANGE FILTER ---
# Ensure the default range covers all available data.
min_date = raw_df['timestamp'].min().date()
max_date = raw_df['timestamp'].max().date()

# Set the default value to be the full range from min_date to max_date
date_range = st.sidebar.date_input(
    "Select Date Range",
    value=(min_date, max_date), # This ensures the default is the full 7-day range
    min_value=min_date,
    max_value=max_date,
    format="YYYY-MM-DD" # Added for clarity
)
# --- END OF CORRECTION ---

# --- DATA FILTERING LOGIC ---
filtered_df = raw_df.copy()
if selected_city != "All Cities":
    filtered_df = filtered_df[filtered_df['location_name'] == selected_city]

if len(date_range) == 2:
    # Convert the simple date objects from the date_input into timezone-aware datetime objects
    # We set the time to the beginning of the start day and the end of the end day.
    start_date = pd.to_datetime(date_range[0]).tz_localize('UTC')
    end_date = pd.to_datetime(date_range[1]) + pd.Timedelta(days=1) - pd.Timedelta(seconds=1)
    end_date = end_date.tz_localize('UTC')
    
    # Now the comparison will work because both sides are timezone-aware
    filtered_df = filtered_df[
        (filtered_df['timestamp'] >= start_date) & (filtered_df['timestamp'] <= end_date)
    ]

# --- MAIN PAGE LAYOUT ---
st.title("EnviroScan: AI-Powered Pollution Source Identifier")
st.markdown("This dashboard visualizes real-time pollution data and predicts the likely source using a machine learning model.")

# --- PREDICTIONS ---
if not filtered_df.empty:
    # Prepare data for prediction
    df_to_predict = pd.DataFrame()
    df_to_predict['latitude'] = filtered_df['latitude']
    df_to_predict['longitude'] = filtered_df['longitude']
    
    # Pivot the data
    pivoted = filtered_df.pivot_table(index=['latitude', 'longitude', 'timestamp'], columns='pollutant', values='value').reset_index()
    
    # Merge with other features
    other_features = filtered_df[['latitude', 'longitude', 'timestamp', 'temperature', 'humidity', 'wind_speed', 'wind_direction', 'distance_to_nearest_industrial_m', 'distance_to_nearest_major_roads_m', 'distance_to_nearest_dump_site_m', 'distance_to_nearest_agricultural_m', 'location_name']].drop_duplicates()
    df_to_predict = pd.merge(pivoted, other_features, on=['latitude', 'longitude', 'timestamp'])

    # Feature Engineering
    df_to_predict['is_weekend'] = (df_to_predict['timestamp'].dt.dayofweek >= 5).astype(int)
    df_to_predict['hour_sin'] = np.sin(2 * np.pi * df_to_predict['timestamp'].dt.hour / 24.0)
    df_to_predict['hour_cos'] = np.cos(2 * np.pi * df_to_predict['timestamp'].dt.hour / 24.0)
    df_to_predict['month_sin'] = np.sin(2 * np.pi * df_to_predict['timestamp'].dt.month / 12.0)
    df_to_predict['month_cos'] = np.cos(2 * np.pi * df_to_predict['timestamp'].dt.month / 12.0)
    df_to_predict = pd.get_dummies(df_to_predict, columns=['location_name'], prefix='location').reindex(columns=model_columns, fill_value=0)

    # Scaling
    df_to_predict[numerical_cols] = scaler.transform(df_to_predict[numerical_cols])

    # Make Predictions
    predictions = model.predict(df_to_predict)
    probabilities = model.predict_proba(df_to_predict)
    
    # Add predictions to the original (unscaled) filtered data
    pivoted['predicted_source'] = pd.Series(predictions).map(inverse_class_mapping).values
    pivoted['confidence'] = probabilities.max(axis=1)
    
    # --- DISPLAY METRICS AND ALERTS ---
    st.header(f"Analysis for: {selected_city}")
    latest_data = pivoted.sort_values('timestamp').iloc[-1]
    
    col1, col2, col3 = st.columns(3)
    col1.metric("Most Recent Predicted Source", latest_data['predicted_source'])
    col2.metric("Model Confidence", f"{latest_data['confidence']:.2%}")
    col3.metric("Latest PM2.5 Level", f"{latest_data['pm25']:.2f} µg/m³")

    # Alert
    SAFE_PM25_THRESHOLD = 60
    if latest_data['pm25'] > SAFE_PM25_THRESHOLD:
        st.error(f"🚨 CRITICAL ALERT: Latest PM2.5 level ({latest_data['pm25']:.2f} µg/m³) exceeds the safe threshold of {SAFE_PM25_THRESHOLD} µg/m³!", icon="🚨")

    # --- DISPLAY CHARTS AND MAP ---
    col1, col2 = st.columns([1, 2])
    
    with col1:
        st.subheader("Predicted Source Distribution")
        source_counts = pivoted['predicted_source'].value_counts()
        fig_pie = px.pie(values=source_counts.values, names=source_counts.index, title="Source Distribution")
        st.plotly_chart(fig_pie, use_container_width=True)

        # Download Button
        @st.cache_data
        def convert_df_to_csv(df):
            return df.to_csv(index=False).encode('utf-8')
        
        csv = convert_df_to_csv(pivoted)
        st.download_button(
            label="Download Report as CSV",
            data=csv,
            file_name=f"{selected_city}_pollution_report.csv",
            mime='text/csv',
        )

    with col2:
        st.subheader("Pollutant Trends Over Time")
        fig_line = px.line(pivoted, x='timestamp', y=['pm25', 'no2', 'so2'], title="Pollutant Levels")
        st.plotly_chart(fig_line, use_container_width=True)

    st.subheader("Geospatial Analysis Map")
    map_to_display = create_map(pivoted)
    st_folium(map_to_display, width='100%', height=500)

else:
    st.warning("No data available for the selected filters. Please select a different date range or city.")
```

`code.txt`

```

```

`notebooks/2_Data_Cleaning_and_Feature_Engineering.ipynb`

```
{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "4e339874-b17b-4624-91d5-a8f76a14b88b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import necessary libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Define file paths for clarity\n",
    "INPUT_DATA_PATH = '../data/consolidated_enviro_data.csv'\n",
    "OUTPUT_DATA_PATH = '../data/processed_enviro_data.csv'\n",
    "\n",
    "# Set pandas display options for better viewing\n",
    "pd.set_option('display.max_columns', None)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0080a064-cf5b-4cec-bee0-2bfb543f9d5b",
   "metadata": {},
   "source": [
    "## Step 1: Load and Explore the Raw Data\n",
    "First, we load the consolidated dataset collected in Module 1. We'll perform an initial exploration to understand its structure, data types, and identify any immediate issues like missing values or incorrect data formats."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "fc1b65c9-30bc-473c-b422-6c937fff84a9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset loaded successfully.\n",
      "\n",
      "First 5 rows of the raw dataset:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>location_name</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>pollutant</th>\n",
       "      <th>value</th>\n",
       "      <th>unit</th>\n",
       "      <th>aq_source_api</th>\n",
       "      <th>temperature</th>\n",
       "      <th>humidity</th>\n",
       "      <th>wind_speed</th>\n",
       "      <th>wind_direction</th>\n",
       "      <th>weather_source_api</th>\n",
       "      <th>geo_source_api</th>\n",
       "      <th>distance_to_nearest_industrial_m</th>\n",
       "      <th>distance_to_nearest_major_roads_m</th>\n",
       "      <th>distance_to_nearest_dump_site_m</th>\n",
       "      <th>distance_to_nearest_agricultural_m</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Delhi_India</td>\n",
       "      <td>28.7041</td>\n",
       "      <td>77.1025</td>\n",
       "      <td>2024-06-01 00:00:00+00:00</td>\n",
       "      <td>co</td>\n",
       "      <td>1428.60</td>\n",
       "      <td>µg/m³</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>35.06</td>\n",
       "      <td>38.0</td>\n",
       "      <td>3.09</td>\n",
       "      <td>280.0</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>OpenStreetMap</td>\n",
       "      <td>1496.422703</td>\n",
       "      <td>819.908574</td>\n",
       "      <td>4695.063356</td>\n",
       "      <td>3521.012126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Delhi_India</td>\n",
       "      <td>28.7041</td>\n",
       "      <td>77.1025</td>\n",
       "      <td>2024-06-01 00:00:00+00:00</td>\n",
       "      <td>no2</td>\n",
       "      <td>41.13</td>\n",
       "      <td>µg/m³</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>35.06</td>\n",
       "      <td>38.0</td>\n",
       "      <td>3.09</td>\n",
       "      <td>280.0</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>OpenStreetMap</td>\n",
       "      <td>1496.422703</td>\n",
       "      <td>819.908574</td>\n",
       "      <td>4695.063356</td>\n",
       "      <td>3521.012126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Delhi_India</td>\n",
       "      <td>28.7041</td>\n",
       "      <td>77.1025</td>\n",
       "      <td>2024-06-01 00:00:00+00:00</td>\n",
       "      <td>o3</td>\n",
       "      <td>22.35</td>\n",
       "      <td>µg/m³</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>35.06</td>\n",
       "      <td>38.0</td>\n",
       "      <td>3.09</td>\n",
       "      <td>280.0</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>OpenStreetMap</td>\n",
       "      <td>1496.422703</td>\n",
       "      <td>819.908574</td>\n",
       "      <td>4695.063356</td>\n",
       "      <td>3521.012126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Delhi_India</td>\n",
       "      <td>28.7041</td>\n",
       "      <td>77.1025</td>\n",
       "      <td>2024-06-01 00:00:00+00:00</td>\n",
       "      <td>so2</td>\n",
       "      <td>34.81</td>\n",
       "      <td>µg/m³</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>35.06</td>\n",
       "      <td>38.0</td>\n",
       "      <td>3.09</td>\n",
       "      <td>280.0</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>OpenStreetMap</td>\n",
       "      <td>1496.422703</td>\n",
       "      <td>819.908574</td>\n",
       "      <td>4695.063356</td>\n",
       "      <td>3521.012126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Delhi_India</td>\n",
       "      <td>28.7041</td>\n",
       "      <td>77.1025</td>\n",
       "      <td>2024-06-01 00:00:00+00:00</td>\n",
       "      <td>pm25</td>\n",
       "      <td>69.02</td>\n",
       "      <td>µg/m³</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>35.06</td>\n",
       "      <td>38.0</td>\n",
       "      <td>3.09</td>\n",
       "      <td>280.0</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>OpenStreetMap</td>\n",
       "      <td>1496.422703</td>\n",
       "      <td>819.908574</td>\n",
       "      <td>4695.063356</td>\n",
       "      <td>3521.012126</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  location_name  latitude  longitude                 timestamp pollutant  \\\n",
       "0   Delhi_India   28.7041    77.1025 2024-06-01 00:00:00+00:00        co   \n",
       "1   Delhi_India   28.7041    77.1025 2024-06-01 00:00:00+00:00       no2   \n",
       "2   Delhi_India   28.7041    77.1025 2024-06-01 00:00:00+00:00        o3   \n",
       "3   Delhi_India   28.7041    77.1025 2024-06-01 00:00:00+00:00       so2   \n",
       "4   Delhi_India   28.7041    77.1025 2024-06-01 00:00:00+00:00      pm25   \n",
       "\n",
       "     value   unit   aq_source_api  temperature  humidity  wind_speed  \\\n",
       "0  1428.60  µg/m³  OpenWeatherMap        35.06      38.0        3.09   \n",
       "1    41.13  µg/m³  OpenWeatherMap        35.06      38.0        3.09   \n",
       "2    22.35  µg/m³  OpenWeatherMap        35.06      38.0        3.09   \n",
       "3    34.81  µg/m³  OpenWeatherMap        35.06      38.0        3.09   \n",
       "4    69.02  µg/m³  OpenWeatherMap        35.06      38.0        3.09   \n",
       "\n",
       "   wind_direction weather_source_api geo_source_api  \\\n",
       "0           280.0     OpenWeatherMap  OpenStreetMap   \n",
       "1           280.0     OpenWeatherMap  OpenStreetMap   \n",
       "2           280.0     OpenWeatherMap  OpenStreetMap   \n",
       "3           280.0     OpenWeatherMap  OpenStreetMap   \n",
       "4           280.0     OpenWeatherMap  OpenStreetMap   \n",
       "\n",
       "   distance_to_nearest_industrial_m  distance_to_nearest_major_roads_m  \\\n",
       "0                       1496.422703                         819.908574   \n",
       "1                       1496.422703                         819.908574   \n",
       "2                       1496.422703                         819.908574   \n",
       "3                       1496.422703                         819.908574   \n",
       "4                       1496.422703                         819.908574   \n",
       "\n",
       "   distance_to_nearest_dump_site_m  distance_to_nearest_agricultural_m  \n",
       "0                      4695.063356                         3521.012126  \n",
       "1                      4695.063356                         3521.012126  \n",
       "2                      4695.063356                         3521.012126  \n",
       "3                      4695.063356                         3521.012126  \n",
       "4                      4695.063356                         3521.012126  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "DataFrame Info:\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 4056 entries, 0 to 4055\n",
      "Data columns (total 18 columns):\n",
      " #   Column                              Non-Null Count  Dtype              \n",
      "---  ------                              --------------  -----              \n",
      " 0   location_name                       4056 non-null   object             \n",
      " 1   latitude                            4056 non-null   float64            \n",
      " 2   longitude                           4056 non-null   float64            \n",
      " 3   timestamp                           4056 non-null   datetime64[ns, UTC]\n",
      " 4   pollutant                           4056 non-null   object             \n",
      " 5   value                               4056 non-null   float64            \n",
      " 6   unit                                4056 non-null   object             \n",
      " 7   aq_source_api                       4056 non-null   object             \n",
      " 8   temperature                         4050 non-null   float64            \n",
      " 9   humidity                            4050 non-null   float64            \n",
      " 10  wind_speed                          4050 non-null   float64            \n",
      " 11  wind_direction                      4050 non-null   float64            \n",
      " 12  weather_source_api                  4050 non-null   object             \n",
      " 13  geo_source_api                      4056 non-null   object             \n",
      " 14  distance_to_nearest_industrial_m    4056 non-null   float64            \n",
      " 15  distance_to_nearest_major_roads_m   4056 non-null   float64            \n",
      " 16  distance_to_nearest_dump_site_m     4056 non-null   float64            \n",
      " 17  distance_to_nearest_agricultural_m  4056 non-null   float64            \n",
      "dtypes: datetime64[ns, UTC](1), float64(11), object(6)\n",
      "memory usage: 570.5+ KB\n",
      "\n",
      "Missing values count per column:\n",
      "location_name                         0\n",
      "latitude                              0\n",
      "longitude                             0\n",
      "timestamp                             0\n",
      "pollutant                             0\n",
      "value                                 0\n",
      "unit                                  0\n",
      "aq_source_api                         0\n",
      "temperature                           6\n",
      "humidity                              6\n",
      "wind_speed                            6\n",
      "wind_direction                        6\n",
      "weather_source_api                    6\n",
      "geo_source_api                        0\n",
      "distance_to_nearest_industrial_m      0\n",
      "distance_to_nearest_major_roads_m     0\n",
      "distance_to_nearest_dump_site_m       0\n",
      "distance_to_nearest_agricultural_m    0\n",
      "dtype: int64\n",
      "\n",
      "Number of complete duplicate rows: 0\n"
     ]
    }
   ],
   "source": [
    "# --- CORRECTED FILE PATHS ---\n",
    "# We are using a direct path from the project root, which is more robust.\n",
    "INPUT_DATA_PATH = 'data/consolidated_enviro_data.csv'\n",
    "OUTPUT_DATA_PATH = 'data/processed_enviro_data.csv'\n",
    "\n",
    "# Load the dataset\n",
    "try:\n",
    "    df_raw = pd.read_csv(INPUT_DATA_PATH, parse_dates=['timestamp'])\n",
    "    print(\"Dataset loaded successfully.\")\n",
    "    \n",
    "    # Display the first few rows\n",
    "    print(\"\\nFirst 5 rows of the raw dataset:\")\n",
    "    display(df_raw.head())\n",
    "\n",
    "    # Get a concise summary of the dataframe\n",
    "    print(\"\\nDataFrame Info:\")\n",
    "    df_raw.info()\n",
    "\n",
    "    # Check for missing values\n",
    "    print(\"\\nMissing values count per column:\")\n",
    "    print(df_raw.isnull().sum())\n",
    "\n",
    "    # Check for duplicate rows\n",
    "    print(f\"\\nNumber of complete duplicate rows: {df_raw.duplicated().sum()}\")\n",
    "\n",
    "except FileNotFoundError:\n",
    "    print(f\"--- ERROR ---\")\n",
    "    print(f\"The file was not found at the path: {INPUT_DATA_PATH}\")\n",
    "    print(\"Please ensure that 'consolidated_enviro_data.csv' exists inside the 'data' folder in your main project directory.\")\n",
    "    df_raw = None # Ensure df_raw exists to prevent further errors"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e4add684-4fe5-4963-99dc-2340daffc61f",
   "metadata": {},
   "source": [
    "The current data is in a \"long\" format, with one pollutant measurement per row. For machine learning, we need a \"wide\" format where each row represents a unique point in time for a specific location, and each pollutant has its own column. We will pivot the table to achieve this."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "1d5a6499-bbb5-4aa5-a2ed-242e1ba60b7b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pivoted DataFrame (first 5 rows):\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>pollutant</th>\n",
       "      <th>location_name</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>co</th>\n",
       "      <th>no2</th>\n",
       "      <th>o3</th>\n",
       "      <th>pm10</th>\n",
       "      <th>pm25</th>\n",
       "      <th>so2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Chennai_India</td>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>2024-06-01 00:00:00+00:00</td>\n",
       "      <td>607.49</td>\n",
       "      <td>13.37</td>\n",
       "      <td>47.21</td>\n",
       "      <td>45.47</td>\n",
       "      <td>40.20</td>\n",
       "      <td>15.26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Chennai_India</td>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>2024-06-01 01:00:00+00:00</td>\n",
       "      <td>660.90</td>\n",
       "      <td>17.31</td>\n",
       "      <td>38.98</td>\n",
       "      <td>47.18</td>\n",
       "      <td>41.45</td>\n",
       "      <td>14.66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Chennai_India</td>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>2024-06-01 02:00:00+00:00</td>\n",
       "      <td>794.41</td>\n",
       "      <td>23.31</td>\n",
       "      <td>35.76</td>\n",
       "      <td>51.27</td>\n",
       "      <td>43.41</td>\n",
       "      <td>16.69</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Chennai_India</td>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>2024-06-01 03:00:00+00:00</td>\n",
       "      <td>854.49</td>\n",
       "      <td>26.39</td>\n",
       "      <td>47.92</td>\n",
       "      <td>49.96</td>\n",
       "      <td>40.78</td>\n",
       "      <td>19.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Chennai_India</td>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>2024-06-01 04:00:00+00:00</td>\n",
       "      <td>720.98</td>\n",
       "      <td>22.96</td>\n",
       "      <td>80.11</td>\n",
       "      <td>41.85</td>\n",
       "      <td>34.08</td>\n",
       "      <td>27.89</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "pollutant  location_name  latitude  longitude                 timestamp  \\\n",
       "0          Chennai_India   13.0827    80.2707 2024-06-01 00:00:00+00:00   \n",
       "1          Chennai_India   13.0827    80.2707 2024-06-01 01:00:00+00:00   \n",
       "2          Chennai_India   13.0827    80.2707 2024-06-01 02:00:00+00:00   \n",
       "3          Chennai_India   13.0827    80.2707 2024-06-01 03:00:00+00:00   \n",
       "4          Chennai_India   13.0827    80.2707 2024-06-01 04:00:00+00:00   \n",
       "\n",
       "pollutant      co    no2     o3   pm10   pm25    so2  \n",
       "0          607.49  13.37  47.21  45.47  40.20  15.26  \n",
       "1          660.90  17.31  38.98  47.18  41.45  14.66  \n",
       "2          794.41  23.31  35.76  51.27  43.41  16.69  \n",
       "3          854.49  26.39  47.92  49.96  40.78  19.55  \n",
       "4          720.98  22.96  80.11  41.85  34.08  27.89  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Merged DataFrame with all features (first 5 rows):\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>location_name</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>co</th>\n",
       "      <th>no2</th>\n",
       "      <th>o3</th>\n",
       "      <th>pm10</th>\n",
       "      <th>pm25</th>\n",
       "      <th>so2</th>\n",
       "      <th>aq_source_api</th>\n",
       "      <th>temperature</th>\n",
       "      <th>humidity</th>\n",
       "      <th>wind_speed</th>\n",
       "      <th>wind_direction</th>\n",
       "      <th>weather_source_api</th>\n",
       "      <th>geo_source_api</th>\n",
       "      <th>distance_to_nearest_industrial_m</th>\n",
       "      <th>distance_to_nearest_major_roads_m</th>\n",
       "      <th>distance_to_nearest_dump_site_m</th>\n",
       "      <th>distance_to_nearest_agricultural_m</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Chennai_India</td>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>2024-06-01 00:00:00+00:00</td>\n",
       "      <td>607.49</td>\n",
       "      <td>13.37</td>\n",
       "      <td>47.21</td>\n",
       "      <td>45.47</td>\n",
       "      <td>40.20</td>\n",
       "      <td>15.26</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>33.92</td>\n",
       "      <td>67.0</td>\n",
       "      <td>7.6</td>\n",
       "      <td>289.0</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>OpenStreetMap</td>\n",
       "      <td>419.467322</td>\n",
       "      <td>2.398934</td>\n",
       "      <td>1268.156916</td>\n",
       "      <td>5026.517794</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Chennai_India</td>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>2024-06-01 01:00:00+00:00</td>\n",
       "      <td>660.90</td>\n",
       "      <td>17.31</td>\n",
       "      <td>38.98</td>\n",
       "      <td>47.18</td>\n",
       "      <td>41.45</td>\n",
       "      <td>14.66</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>33.92</td>\n",
       "      <td>67.0</td>\n",
       "      <td>7.6</td>\n",
       "      <td>289.0</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>OpenStreetMap</td>\n",
       "      <td>419.467322</td>\n",
       "      <td>2.398934</td>\n",
       "      <td>1268.156916</td>\n",
       "      <td>5026.517794</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Chennai_India</td>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>2024-06-01 02:00:00+00:00</td>\n",
       "      <td>794.41</td>\n",
       "      <td>23.31</td>\n",
       "      <td>35.76</td>\n",
       "      <td>51.27</td>\n",
       "      <td>43.41</td>\n",
       "      <td>16.69</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>33.92</td>\n",
       "      <td>67.0</td>\n",
       "      <td>7.6</td>\n",
       "      <td>289.0</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>OpenStreetMap</td>\n",
       "      <td>419.467322</td>\n",
       "      <td>2.398934</td>\n",
       "      <td>1268.156916</td>\n",
       "      <td>5026.517794</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Chennai_India</td>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>2024-06-01 03:00:00+00:00</td>\n",
       "      <td>854.49</td>\n",
       "      <td>26.39</td>\n",
       "      <td>47.92</td>\n",
       "      <td>49.96</td>\n",
       "      <td>40.78</td>\n",
       "      <td>19.55</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>33.92</td>\n",
       "      <td>67.0</td>\n",
       "      <td>7.6</td>\n",
       "      <td>289.0</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>OpenStreetMap</td>\n",
       "      <td>419.467322</td>\n",
       "      <td>2.398934</td>\n",
       "      <td>1268.156916</td>\n",
       "      <td>5026.517794</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Chennai_India</td>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>2024-06-01 04:00:00+00:00</td>\n",
       "      <td>720.98</td>\n",
       "      <td>22.96</td>\n",
       "      <td>80.11</td>\n",
       "      <td>41.85</td>\n",
       "      <td>34.08</td>\n",
       "      <td>27.89</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>33.92</td>\n",
       "      <td>67.0</td>\n",
       "      <td>7.6</td>\n",
       "      <td>289.0</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>OpenStreetMap</td>\n",
       "      <td>419.467322</td>\n",
       "      <td>2.398934</td>\n",
       "      <td>1268.156916</td>\n",
       "      <td>5026.517794</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   location_name  latitude  longitude                 timestamp      co  \\\n",
       "0  Chennai_India   13.0827    80.2707 2024-06-01 00:00:00+00:00  607.49   \n",
       "1  Chennai_India   13.0827    80.2707 2024-06-01 01:00:00+00:00  660.90   \n",
       "2  Chennai_India   13.0827    80.2707 2024-06-01 02:00:00+00:00  794.41   \n",
       "3  Chennai_India   13.0827    80.2707 2024-06-01 03:00:00+00:00  854.49   \n",
       "4  Chennai_India   13.0827    80.2707 2024-06-01 04:00:00+00:00  720.98   \n",
       "\n",
       "     no2     o3   pm10   pm25    so2   aq_source_api  temperature  humidity  \\\n",
       "0  13.37  47.21  45.47  40.20  15.26  OpenWeatherMap        33.92      67.0   \n",
       "1  17.31  38.98  47.18  41.45  14.66  OpenWeatherMap        33.92      67.0   \n",
       "2  23.31  35.76  51.27  43.41  16.69  OpenWeatherMap        33.92      67.0   \n",
       "3  26.39  47.92  49.96  40.78  19.55  OpenWeatherMap        33.92      67.0   \n",
       "4  22.96  80.11  41.85  34.08  27.89  OpenWeatherMap        33.92      67.0   \n",
       "\n",
       "   wind_speed  wind_direction weather_source_api geo_source_api  \\\n",
       "0         7.6           289.0     OpenWeatherMap  OpenStreetMap   \n",
       "1         7.6           289.0     OpenWeatherMap  OpenStreetMap   \n",
       "2         7.6           289.0     OpenWeatherMap  OpenStreetMap   \n",
       "3         7.6           289.0     OpenWeatherMap  OpenStreetMap   \n",
       "4         7.6           289.0     OpenWeatherMap  OpenStreetMap   \n",
       "\n",
       "   distance_to_nearest_industrial_m  distance_to_nearest_major_roads_m  \\\n",
       "0                        419.467322                           2.398934   \n",
       "1                        419.467322                           2.398934   \n",
       "2                        419.467322                           2.398934   \n",
       "3                        419.467322                           2.398934   \n",
       "4                        419.467322                           2.398934   \n",
       "\n",
       "   distance_to_nearest_dump_site_m  distance_to_nearest_agricultural_m  \n",
       "0                      1268.156916                         5026.517794  \n",
       "1                      1268.156916                         5026.517794  \n",
       "2                      1268.156916                         5026.517794  \n",
       "3                      1268.156916                         5026.517794  \n",
       "4                      1268.156916                         5026.517794  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Columns in the new DataFrame:\n",
      "['location_name', 'latitude', 'longitude', 'timestamp', 'co', 'no2', 'o3', 'pm10', 'pm25', 'so2', 'aq_source_api', 'temperature', 'humidity', 'wind_speed', 'wind_direction', 'weather_source_api', 'geo_source_api', 'distance_to_nearest_industrial_m', 'distance_to_nearest_major_roads_m', 'distance_to_nearest_dump_site_m', 'distance_to_nearest_agricultural_m']\n"
     ]
    }
   ],
   "source": [
    "# Define the columns that identify a unique record (excluding the pollutant itself)\n",
    "index_cols = ['location_name', 'latitude', 'longitude', 'timestamp']\n",
    "\n",
    "# Pivot the table to create a column for each pollutant\n",
    "df_pivoted = df_raw.pivot_table(\n",
    "    index=index_cols,\n",
    "    columns='pollutant',\n",
    "    values='value'\n",
    ").reset_index()\n",
    "\n",
    "print(\"Pivoted DataFrame (first 5 rows):\")\n",
    "display(df_pivoted.head())\n",
    "\n",
    "# --- CORRECTED METADATA MERGE LOGIC ---\n",
    "# Create a metadata dataframe by dropping the pivoted columns and any duplicates.\n",
    "# This is a cleaner and more robust way to get the unique metadata for each timestamp.\n",
    "metadata_cols_to_keep = [col for col in df_raw.columns if col not in ['pollutant', 'value', 'unit']]\n",
    "df_metadata = df_raw[metadata_cols_to_keep].drop_duplicates()\n",
    "\n",
    "# Merge the pivoted data with the metadata\n",
    "# This will now work because df_metadata has no duplicate columns.\n",
    "df = pd.merge(df_pivoted, df_metadata, on=index_cols, how='left')\n",
    "# --- END OF CORRECTION ---\n",
    "\n",
    "print(\"\\nMerged DataFrame with all features (first 5 rows):\")\n",
    "display(df.head())\n",
    "\n",
    "print(\"\\nColumns in the new DataFrame:\")\n",
    "print(df.columns.tolist())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "94e6a75f-3d11-4b69-b51e-b5e75c260b10",
   "metadata": {},
   "source": [
    "## Step 3: Handling Missing Values (Imputation)\n",
    "\n",
    "After pivoting, some rows might have missing values for certain pollutants or weather data, especially if a sensor was temporarily offline. We will use time-based linear interpolation to fill these gaps. This method is well-suited for time-series data as it estimates a missing value based on the values before and after it, which is often a reasonable assumption for environmental readings."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "db0feb82-38d3-4550-826b-0b09de84a480",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Missing values BEFORE interpolation:\n",
      "co                0\n",
      "no2               0\n",
      "o3                0\n",
      "pm10              0\n",
      "pm25              0\n",
      "so2               0\n",
      "temperature       1\n",
      "humidity          1\n",
      "wind_speed        1\n",
      "wind_direction    1\n",
      "dtype: int64\n",
      "\n",
      "Missing values AFTER interpolation:\n",
      "location_name                         0\n",
      "latitude                              0\n",
      "longitude                             0\n",
      "timestamp                             0\n",
      "co                                    0\n",
      "no2                                   0\n",
      "o3                                    0\n",
      "pm10                                  0\n",
      "pm25                                  0\n",
      "so2                                   0\n",
      "aq_source_api                         0\n",
      "temperature                           0\n",
      "humidity                              0\n",
      "wind_speed                            0\n",
      "wind_direction                        0\n",
      "weather_source_api                    1\n",
      "geo_source_api                        0\n",
      "distance_to_nearest_industrial_m      0\n",
      "distance_to_nearest_major_roads_m     0\n",
      "distance_to_nearest_dump_site_m       0\n",
      "distance_to_nearest_agricultural_m    0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "#handling missing values\n",
    "# Sort the data by location and time to ensure correct interpolation within each group\n",
    "df = df.sort_values(by=['location_name', 'timestamp']).reset_index(drop=True)\n",
    "\n",
    "# Identify columns that may need interpolation\n",
    "pollutant_cols = ['co', 'no2', 'o3', 'pm10', 'pm25', 'so2']\n",
    "weather_cols = ['temperature', 'humidity', 'wind_speed', 'wind_direction']\n",
    "cols_to_interpolate = pollutant_cols + weather_cols\n",
    "\n",
    "print(\"Missing values BEFORE interpolation:\")\n",
    "print(df[cols_to_interpolate].isnull().sum())\n",
    "\n",
    "# Apply interpolation within each location group\n",
    "# This ensures we don't interpolate values between different cities\n",
    "df[cols_to_interpolate] = df.groupby('location_name')[cols_to_interpolate].transform(\n",
    "    lambda x: x.interpolate(method='linear', limit_direction='both')\n",
    ")\n",
    "\n",
    "# Check if any missing values remain\n",
    "print(\"\\nMissing values AFTER interpolation:\")\n",
    "print(df.isnull().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "d88ed330-5c6f-4062-98b1-b7635550be9c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Missing values BEFORE interpolation:\n",
      "co                0\n",
      "no2               0\n",
      "o3                0\n",
      "pm10              0\n",
      "pm25              0\n",
      "so2               0\n",
      "temperature       0\n",
      "humidity          0\n",
      "wind_speed        0\n",
      "wind_direction    0\n",
      "dtype: int64\n",
      "\n",
      "Missing values AFTER interpolation:\n",
      "location_name                         0\n",
      "latitude                              0\n",
      "longitude                             0\n",
      "timestamp                             0\n",
      "co                                    0\n",
      "no2                                   0\n",
      "o3                                    0\n",
      "pm10                                  0\n",
      "pm25                                  0\n",
      "so2                                   0\n",
      "aq_source_api                         0\n",
      "temperature                           0\n",
      "humidity                              0\n",
      "wind_speed                            0\n",
      "wind_direction                        0\n",
      "weather_source_api                    1\n",
      "geo_source_api                        0\n",
      "distance_to_nearest_industrial_m      0\n",
      "distance_to_nearest_major_roads_m     0\n",
      "distance_to_nearest_dump_site_m       0\n",
      "distance_to_nearest_agricultural_m    0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "#impute missing values\n",
    "# Sort the data by location and time to ensure correct interpolation within each group\n",
    "df = df.sort_values(by=['location_name', 'timestamp']).reset_index(drop=True)\n",
    "\n",
    "# Identify columns that may need interpolation\n",
    "pollutant_cols = ['co', 'no2', 'o3', 'pm10', 'pm25', 'so2']\n",
    "weather_cols = ['temperature', 'humidity', 'wind_speed', 'wind_direction']\n",
    "cols_to_interpolate = pollutant_cols + weather_cols\n",
    "\n",
    "print(\"Missing values BEFORE interpolation:\")\n",
    "print(df[cols_to_interpolate].isnull().sum())\n",
    "\n",
    "# Apply interpolation within each location group\n",
    "# This ensures we don't interpolate values between different cities\n",
    "df[cols_to_interpolate] = df.groupby('location_name')[cols_to_interpolate].transform(\n",
    "    lambda x: x.interpolate(method='linear', limit_direction='both')\n",
    ")\n",
    "\n",
    "# Check if any missing values remain\n",
    "print(\"\\nMissing values AFTER interpolation:\")\n",
    "print(df.isnull().sum())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b3af44f-67ea-41ce-8e12-585c2ebbb1a7",
   "metadata": {},
   "source": [
    "## Step 4: Feature Engineering\n",
    "\n",
    "Raw data is often not enough. We will engineer new features from the `timestamp` to explicitly provide the model with temporal context. This helps the model learn patterns related to:\n",
    "- **Daily Cycles:** Morning/evening rush hours.\n",
    "- **Weekly Cycles:** Weekday vs. weekend behavior.\n",
    "- **Seasonal Cycles:** Summer vs. winter pollution patterns.\n",
    "\n",
    "We will also encode cyclical features (like the hour of the day) using sine and cosine transformations. This helps the model understand that hour 23 is as close to hour 0 as hour 1 is."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "406da277-8e4e-440a-8bff-7b6dbf57526e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "DataFrame with new temporal features (first 5 rows):\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>location_name</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>co</th>\n",
       "      <th>no2</th>\n",
       "      <th>o3</th>\n",
       "      <th>pm10</th>\n",
       "      <th>pm25</th>\n",
       "      <th>so2</th>\n",
       "      <th>aq_source_api</th>\n",
       "      <th>temperature</th>\n",
       "      <th>humidity</th>\n",
       "      <th>wind_speed</th>\n",
       "      <th>wind_direction</th>\n",
       "      <th>weather_source_api</th>\n",
       "      <th>geo_source_api</th>\n",
       "      <th>distance_to_nearest_industrial_m</th>\n",
       "      <th>distance_to_nearest_major_roads_m</th>\n",
       "      <th>distance_to_nearest_dump_site_m</th>\n",
       "      <th>distance_to_nearest_agricultural_m</th>\n",
       "      <th>hour</th>\n",
       "      <th>dayofweek</th>\n",
       "      <th>month</th>\n",
       "      <th>is_weekend</th>\n",
       "      <th>hour_sin</th>\n",
       "      <th>hour_cos</th>\n",
       "      <th>month_sin</th>\n",
       "      <th>month_cos</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Chennai_India</td>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>2024-06-01 00:00:00+00:00</td>\n",
       "      <td>607.49</td>\n",
       "      <td>13.37</td>\n",
       "      <td>47.21</td>\n",
       "      <td>45.47</td>\n",
       "      <td>40.20</td>\n",
       "      <td>15.26</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>33.92</td>\n",
       "      <td>67.0</td>\n",
       "      <td>7.6</td>\n",
       "      <td>289.0</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>OpenStreetMap</td>\n",
       "      <td>419.467322</td>\n",
       "      <td>2.398934</td>\n",
       "      <td>1268.156916</td>\n",
       "      <td>5026.517794</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Chennai_India</td>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>2024-06-01 01:00:00+00:00</td>\n",
       "      <td>660.90</td>\n",
       "      <td>17.31</td>\n",
       "      <td>38.98</td>\n",
       "      <td>47.18</td>\n",
       "      <td>41.45</td>\n",
       "      <td>14.66</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>33.92</td>\n",
       "      <td>67.0</td>\n",
       "      <td>7.6</td>\n",
       "      <td>289.0</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>OpenStreetMap</td>\n",
       "      <td>419.467322</td>\n",
       "      <td>2.398934</td>\n",
       "      <td>1268.156916</td>\n",
       "      <td>5026.517794</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0.258819</td>\n",
       "      <td>0.965926</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Chennai_India</td>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>2024-06-01 02:00:00+00:00</td>\n",
       "      <td>794.41</td>\n",
       "      <td>23.31</td>\n",
       "      <td>35.76</td>\n",
       "      <td>51.27</td>\n",
       "      <td>43.41</td>\n",
       "      <td>16.69</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>33.92</td>\n",
       "      <td>67.0</td>\n",
       "      <td>7.6</td>\n",
       "      <td>289.0</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>OpenStreetMap</td>\n",
       "      <td>419.467322</td>\n",
       "      <td>2.398934</td>\n",
       "      <td>1268.156916</td>\n",
       "      <td>5026.517794</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.866025</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Chennai_India</td>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>2024-06-01 03:00:00+00:00</td>\n",
       "      <td>854.49</td>\n",
       "      <td>26.39</td>\n",
       "      <td>47.92</td>\n",
       "      <td>49.96</td>\n",
       "      <td>40.78</td>\n",
       "      <td>19.55</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>33.92</td>\n",
       "      <td>67.0</td>\n",
       "      <td>7.6</td>\n",
       "      <td>289.0</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>OpenStreetMap</td>\n",
       "      <td>419.467322</td>\n",
       "      <td>2.398934</td>\n",
       "      <td>1268.156916</td>\n",
       "      <td>5026.517794</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0.707107</td>\n",
       "      <td>0.707107</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Chennai_India</td>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>2024-06-01 04:00:00+00:00</td>\n",
       "      <td>720.98</td>\n",
       "      <td>22.96</td>\n",
       "      <td>80.11</td>\n",
       "      <td>41.85</td>\n",
       "      <td>34.08</td>\n",
       "      <td>27.89</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>33.92</td>\n",
       "      <td>67.0</td>\n",
       "      <td>7.6</td>\n",
       "      <td>289.0</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>OpenStreetMap</td>\n",
       "      <td>419.467322</td>\n",
       "      <td>2.398934</td>\n",
       "      <td>1268.156916</td>\n",
       "      <td>5026.517794</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0.866025</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   location_name  latitude  longitude                 timestamp      co  \\\n",
       "0  Chennai_India   13.0827    80.2707 2024-06-01 00:00:00+00:00  607.49   \n",
       "1  Chennai_India   13.0827    80.2707 2024-06-01 01:00:00+00:00  660.90   \n",
       "2  Chennai_India   13.0827    80.2707 2024-06-01 02:00:00+00:00  794.41   \n",
       "3  Chennai_India   13.0827    80.2707 2024-06-01 03:00:00+00:00  854.49   \n",
       "4  Chennai_India   13.0827    80.2707 2024-06-01 04:00:00+00:00  720.98   \n",
       "\n",
       "     no2     o3   pm10   pm25    so2   aq_source_api  temperature  humidity  \\\n",
       "0  13.37  47.21  45.47  40.20  15.26  OpenWeatherMap        33.92      67.0   \n",
       "1  17.31  38.98  47.18  41.45  14.66  OpenWeatherMap        33.92      67.0   \n",
       "2  23.31  35.76  51.27  43.41  16.69  OpenWeatherMap        33.92      67.0   \n",
       "3  26.39  47.92  49.96  40.78  19.55  OpenWeatherMap        33.92      67.0   \n",
       "4  22.96  80.11  41.85  34.08  27.89  OpenWeatherMap        33.92      67.0   \n",
       "\n",
       "   wind_speed  wind_direction weather_source_api geo_source_api  \\\n",
       "0         7.6           289.0     OpenWeatherMap  OpenStreetMap   \n",
       "1         7.6           289.0     OpenWeatherMap  OpenStreetMap   \n",
       "2         7.6           289.0     OpenWeatherMap  OpenStreetMap   \n",
       "3         7.6           289.0     OpenWeatherMap  OpenStreetMap   \n",
       "4         7.6           289.0     OpenWeatherMap  OpenStreetMap   \n",
       "\n",
       "   distance_to_nearest_industrial_m  distance_to_nearest_major_roads_m  \\\n",
       "0                        419.467322                           2.398934   \n",
       "1                        419.467322                           2.398934   \n",
       "2                        419.467322                           2.398934   \n",
       "3                        419.467322                           2.398934   \n",
       "4                        419.467322                           2.398934   \n",
       "\n",
       "   distance_to_nearest_dump_site_m  distance_to_nearest_agricultural_m  hour  \\\n",
       "0                      1268.156916                         5026.517794     0   \n",
       "1                      1268.156916                         5026.517794     1   \n",
       "2                      1268.156916                         5026.517794     2   \n",
       "3                      1268.156916                         5026.517794     3   \n",
       "4                      1268.156916                         5026.517794     4   \n",
       "\n",
       "   dayofweek  month  is_weekend  hour_sin  hour_cos     month_sin  month_cos  \n",
       "0          5      6           1  0.000000  1.000000  1.224647e-16       -1.0  \n",
       "1          5      6           1  0.258819  0.965926  1.224647e-16       -1.0  \n",
       "2          5      6           1  0.500000  0.866025  1.224647e-16       -1.0  \n",
       "3          5      6           1  0.707107  0.707107  1.224647e-16       -1.0  \n",
       "4          5      6           1  0.866025  0.500000  1.224647e-16       -1.0  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Create Temporal Features\n",
    "# Extract time-based features from the timestamp\n",
    "df['hour'] = df['timestamp'].dt.hour\n",
    "df['dayofweek'] = df['timestamp'].dt.dayofweek  # Monday=0, Sunday=6\n",
    "df['month'] = df['timestamp'].dt.month\n",
    "df['is_weekend'] = (df['dayofweek'] >= 5).astype(int)\n",
    "\n",
    "# Create cyclical features for hour and month to capture their circular nature\n",
    "df['hour_sin'] = np.sin(2 * np.pi * df['hour'] / 24.0)\n",
    "df['hour_cos'] = np.cos(2 * np.pi * df['hour'] / 24.0)\n",
    "df['month_sin'] = np.sin(2 * np.pi * df['month'] / 12.0)\n",
    "df['month_cos'] = np.cos(2 * np.pi * df['month'] / 12.0)\n",
    "\n",
    "print(\"DataFrame with new temporal features (first 5 rows):\")\n",
    "display(df.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9714858b-8f73-4354-8dfd-6c178ae23e38",
   "metadata": {},
   "source": [
    "## Step 5: Feature Scaling and Encoding\n",
    "\n",
    "Machine learning models often require all input features to be numeric and on a similar scale.\n",
    "1.  **Scaling:** We will use `StandardScaler` to scale our numerical features (pollutants, weather, distances). This gives each feature a mean of 0 and a standard deviation of 1, preventing features with large values from dominating the model.\n",
    "2.  **Encoding:** We will convert the categorical `location_name` column into a numerical format using one-hot encoding. This creates new binary columns for each city, allowing the model to learn location-specific patterns without assuming any order between the cities."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "e0422b17-9c8b-475d-b6fb-1d6101c68f9c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Final processed DataFrame after scaling and encoding (first 5 rows):\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>co</th>\n",
       "      <th>no2</th>\n",
       "      <th>o3</th>\n",
       "      <th>pm10</th>\n",
       "      <th>pm25</th>\n",
       "      <th>so2</th>\n",
       "      <th>aq_source_api</th>\n",
       "      <th>temperature</th>\n",
       "      <th>humidity</th>\n",
       "      <th>wind_speed</th>\n",
       "      <th>wind_direction</th>\n",
       "      <th>weather_source_api</th>\n",
       "      <th>geo_source_api</th>\n",
       "      <th>distance_to_nearest_industrial_m</th>\n",
       "      <th>distance_to_nearest_major_roads_m</th>\n",
       "      <th>distance_to_nearest_dump_site_m</th>\n",
       "      <th>distance_to_nearest_agricultural_m</th>\n",
       "      <th>hour</th>\n",
       "      <th>dayofweek</th>\n",
       "      <th>month</th>\n",
       "      <th>is_weekend</th>\n",
       "      <th>hour_sin</th>\n",
       "      <th>hour_cos</th>\n",
       "      <th>month_sin</th>\n",
       "      <th>month_cos</th>\n",
       "      <th>location_Delhi_India</th>\n",
       "      <th>location_Kolkata_India</th>\n",
       "      <th>location_Mumbai_India</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>2024-06-01 00:00:00+00:00</td>\n",
       "      <td>-0.129261</td>\n",
       "      <td>-0.655505</td>\n",
       "      <td>-0.226470</td>\n",
       "      <td>-0.382446</td>\n",
       "      <td>0.097505</td>\n",
       "      <td>-0.659327</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>0.798021</td>\n",
       "      <td>-0.113906</td>\n",
       "      <td>1.702742</td>\n",
       "      <td>0.621172</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>OpenStreetMap</td>\n",
       "      <td>-0.627549</td>\n",
       "      <td>-0.719256</td>\n",
       "      <td>-1.701714</td>\n",
       "      <td>1.139477</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>2024-06-01 01:00:00+00:00</td>\n",
       "      <td>0.001594</td>\n",
       "      <td>-0.352787</td>\n",
       "      <td>-0.388317</td>\n",
       "      <td>-0.343856</td>\n",
       "      <td>0.142296</td>\n",
       "      <td>-0.691522</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>0.798021</td>\n",
       "      <td>-0.113906</td>\n",
       "      <td>1.702742</td>\n",
       "      <td>0.621172</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>OpenStreetMap</td>\n",
       "      <td>-0.627549</td>\n",
       "      <td>-0.719256</td>\n",
       "      <td>-1.701714</td>\n",
       "      <td>1.139477</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0.258819</td>\n",
       "      <td>0.965926</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>2024-06-01 02:00:00+00:00</td>\n",
       "      <td>0.328696</td>\n",
       "      <td>0.108205</td>\n",
       "      <td>-0.451640</td>\n",
       "      <td>-0.251555</td>\n",
       "      <td>0.212529</td>\n",
       "      <td>-0.582597</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>0.798021</td>\n",
       "      <td>-0.113906</td>\n",
       "      <td>1.702742</td>\n",
       "      <td>0.621172</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>OpenStreetMap</td>\n",
       "      <td>-0.627549</td>\n",
       "      <td>-0.719256</td>\n",
       "      <td>-1.701714</td>\n",
       "      <td>1.139477</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.866025</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>2024-06-01 03:00:00+00:00</td>\n",
       "      <td>0.475892</td>\n",
       "      <td>0.344847</td>\n",
       "      <td>-0.212507</td>\n",
       "      <td>-0.281119</td>\n",
       "      <td>0.118288</td>\n",
       "      <td>-0.429136</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>0.798021</td>\n",
       "      <td>-0.113906</td>\n",
       "      <td>1.702742</td>\n",
       "      <td>0.621172</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>OpenStreetMap</td>\n",
       "      <td>-0.627549</td>\n",
       "      <td>-0.719256</td>\n",
       "      <td>-1.701714</td>\n",
       "      <td>1.139477</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0.707107</td>\n",
       "      <td>0.707107</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>2024-06-01 04:00:00+00:00</td>\n",
       "      <td>0.148791</td>\n",
       "      <td>0.081313</td>\n",
       "      <td>0.420526</td>\n",
       "      <td>-0.464140</td>\n",
       "      <td>-0.121794</td>\n",
       "      <td>0.018369</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>0.798021</td>\n",
       "      <td>-0.113906</td>\n",
       "      <td>1.702742</td>\n",
       "      <td>0.621172</td>\n",
       "      <td>OpenWeatherMap</td>\n",
       "      <td>OpenStreetMap</td>\n",
       "      <td>-0.627549</td>\n",
       "      <td>-0.719256</td>\n",
       "      <td>-1.701714</td>\n",
       "      <td>1.139477</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0.866025</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   latitude  longitude                 timestamp        co       no2  \\\n",
       "0   13.0827    80.2707 2024-06-01 00:00:00+00:00 -0.129261 -0.655505   \n",
       "1   13.0827    80.2707 2024-06-01 01:00:00+00:00  0.001594 -0.352787   \n",
       "2   13.0827    80.2707 2024-06-01 02:00:00+00:00  0.328696  0.108205   \n",
       "3   13.0827    80.2707 2024-06-01 03:00:00+00:00  0.475892  0.344847   \n",
       "4   13.0827    80.2707 2024-06-01 04:00:00+00:00  0.148791  0.081313   \n",
       "\n",
       "         o3      pm10      pm25       so2   aq_source_api  temperature  \\\n",
       "0 -0.226470 -0.382446  0.097505 -0.659327  OpenWeatherMap     0.798021   \n",
       "1 -0.388317 -0.343856  0.142296 -0.691522  OpenWeatherMap     0.798021   \n",
       "2 -0.451640 -0.251555  0.212529 -0.582597  OpenWeatherMap     0.798021   \n",
       "3 -0.212507 -0.281119  0.118288 -0.429136  OpenWeatherMap     0.798021   \n",
       "4  0.420526 -0.464140 -0.121794  0.018369  OpenWeatherMap     0.798021   \n",
       "\n",
       "   humidity  wind_speed  wind_direction weather_source_api geo_source_api  \\\n",
       "0 -0.113906    1.702742        0.621172     OpenWeatherMap  OpenStreetMap   \n",
       "1 -0.113906    1.702742        0.621172     OpenWeatherMap  OpenStreetMap   \n",
       "2 -0.113906    1.702742        0.621172     OpenWeatherMap  OpenStreetMap   \n",
       "3 -0.113906    1.702742        0.621172     OpenWeatherMap  OpenStreetMap   \n",
       "4 -0.113906    1.702742        0.621172     OpenWeatherMap  OpenStreetMap   \n",
       "\n",
       "   distance_to_nearest_industrial_m  distance_to_nearest_major_roads_m  \\\n",
       "0                         -0.627549                          -0.719256   \n",
       "1                         -0.627549                          -0.719256   \n",
       "2                         -0.627549                          -0.719256   \n",
       "3                         -0.627549                          -0.719256   \n",
       "4                         -0.627549                          -0.719256   \n",
       "\n",
       "   distance_to_nearest_dump_site_m  distance_to_nearest_agricultural_m  hour  \\\n",
       "0                        -1.701714                            1.139477     0   \n",
       "1                        -1.701714                            1.139477     1   \n",
       "2                        -1.701714                            1.139477     2   \n",
       "3                        -1.701714                            1.139477     3   \n",
       "4                        -1.701714                            1.139477     4   \n",
       "\n",
       "   dayofweek  month  is_weekend  hour_sin  hour_cos     month_sin  month_cos  \\\n",
       "0          5      6           1  0.000000  1.000000  1.224647e-16       -1.0   \n",
       "1          5      6           1  0.258819  0.965926  1.224647e-16       -1.0   \n",
       "2          5      6           1  0.500000  0.866025  1.224647e-16       -1.0   \n",
       "3          5      6           1  0.707107  0.707107  1.224647e-16       -1.0   \n",
       "4          5      6           1  0.866025  0.500000  1.224647e-16       -1.0   \n",
       "\n",
       "   location_Delhi_India  location_Kolkata_India  location_Mumbai_India  \n",
       "0                 False                   False                  False  \n",
       "1                 False                   False                  False  \n",
       "2                 False                   False                  False  \n",
       "3                 False                   False                  False  \n",
       "4                 False                   False                  False  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Scale Numerical Features and Encode Categorical Features\n",
    "# Identify numerical columns for scaling\n",
    "# We exclude identifiers, binary flags, and already-scaled cyclical features\n",
    "numerical_cols = pollutant_cols + weather_cols + [col for col in df.columns if 'distance_to' in col]\n",
    "\n",
    "# Apply StandardScaler\n",
    "scaler = StandardScaler()\n",
    "df[numerical_cols] = scaler.fit_transform(df[numerical_cols])\n",
    "\n",
    "# One-hot encode the 'location_name' column\n",
    "# drop_first=True helps avoid multicollinearity by dropping one of the city columns\n",
    "df = pd.get_dummies(df, columns=['location_name'], prefix='location', drop_first=True)\n",
    "\n",
    "print(\"Final processed DataFrame after scaling and encoding (first 5 rows):\")\n",
    "display(df.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e87afdf6-ca21-46a1-9281-f372277c8aec",
   "metadata": {},
   "source": [
    "## Step 6: Finalization and Saving\n",
    "\n",
    "Finally, we will drop any columns that are now redundant (like the original timestamp and time unit columns) and save the fully processed, feature-rich dataset to a new CSV file. This file is now ready and will serve as the input for the next module: **Source Labeling and Simulation**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "6baaf23f-a4a0-44ae-a1d1-ee34658af422",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Final DataFrame Info:\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 676 entries, 0 to 675\n",
      "Data columns (total 24 columns):\n",
      " #   Column                              Non-Null Count  Dtype  \n",
      "---  ------                              --------------  -----  \n",
      " 0   latitude                            676 non-null    float64\n",
      " 1   longitude                           676 non-null    float64\n",
      " 2   co                                  676 non-null    float64\n",
      " 3   no2                                 676 non-null    float64\n",
      " 4   o3                                  676 non-null    float64\n",
      " 5   pm10                                676 non-null    float64\n",
      " 6   pm25                                676 non-null    float64\n",
      " 7   so2                                 676 non-null    float64\n",
      " 8   temperature                         676 non-null    float64\n",
      " 9   humidity                            676 non-null    float64\n",
      " 10  wind_speed                          676 non-null    float64\n",
      " 11  wind_direction                      676 non-null    float64\n",
      " 12  distance_to_nearest_industrial_m    676 non-null    float64\n",
      " 13  distance_to_nearest_major_roads_m   676 non-null    float64\n",
      " 14  distance_to_nearest_dump_site_m     676 non-null    float64\n",
      " 15  distance_to_nearest_agricultural_m  676 non-null    float64\n",
      " 16  is_weekend                          676 non-null    int32  \n",
      " 17  hour_sin                            676 non-null    float64\n",
      " 18  hour_cos                            676 non-null    float64\n",
      " 19  month_sin                           676 non-null    float64\n",
      " 20  month_cos                           676 non-null    float64\n",
      " 21  location_Delhi_India                676 non-null    bool   \n",
      " 22  location_Kolkata_India              676 non-null    bool   \n",
      " 23  location_Mumbai_India               676 non-null    bool   \n",
      "dtypes: bool(3), float64(20), int32(1)\n",
      "memory usage: 110.4 KB\n",
      "\n",
      "Processed data successfully saved to data/processed_enviro_data.csv\n"
     ]
    }
   ],
   "source": [
    "#Clean Up and Save\n",
    "# Drop original columns that are no longer needed for modeling\n",
    "cols_to_drop = [\n",
    "    'timestamp', 'hour', 'dayofweek', 'month', # Replaced by cyclical and binary features\n",
    "    'aq_source_api', 'weather_source_api', 'geo_source_api', # Metadata not needed for model training\n",
    "    'unit' # Unit is constant and not needed\n",
    "]\n",
    "# Ensure we only drop columns that actually exist to avoid errors\n",
    "cols_to_drop_existing = [col for col in cols_to_drop if col in df.columns]\n",
    "df_final = df.drop(columns=cols_to_drop_existing)\n",
    "\n",
    "# Display final dataframe info to confirm it's ready\n",
    "print(\"Final DataFrame Info:\")\n",
    "df_final.info()\n",
    "\n",
    "# Save the processed dataframe\n",
    "df_final.to_csv(OUTPUT_DATA_PATH, index=False)\n",
    "print(f\"\\nProcessed data successfully saved to {OUTPUT_DATA_PATH}\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

```

`notebooks/3_Source_Labeling_and_Simulation.ipynb`

```
{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "9b772fa7-d012-4c81-9e34-cc2e07c496e5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting imblearn\n",
      "  Downloading imblearn-0.0-py2.py3-none-any.whl.metadata (355 bytes)\n",
      "Collecting imbalanced-learn (from imblearn)\n",
      "  Downloading imbalanced_learn-0.14.0-py3-none-any.whl.metadata (8.8 kB)\n",
      "Requirement already satisfied: numpy<3,>=1.25.2 in c:\\users\\joshu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from imbalanced-learn->imblearn) (1.26.4)\n",
      "Requirement already satisfied: scipy<2,>=1.11.4 in c:\\users\\joshu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from imbalanced-learn->imblearn) (1.14.1)\n",
      "Requirement already satisfied: scikit-learn<2,>=1.4.2 in c:\\users\\joshu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from imbalanced-learn->imblearn) (1.5.2)\n",
      "Requirement already satisfied: joblib<2,>=1.2.0 in c:\\users\\joshu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from imbalanced-learn->imblearn) (1.4.2)\n",
      "Requirement already satisfied: threadpoolctl<4,>=2.0.0 in c:\\users\\joshu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from imbalanced-learn->imblearn) (3.5.0)\n",
      "Downloading imblearn-0.0-py2.py3-none-any.whl (1.9 kB)\n",
      "Downloading imbalanced_learn-0.14.0-py3-none-any.whl (239 kB)\n",
      "Installing collected packages: imbalanced-learn, imblearn\n",
      "\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   ---------------------------------------- 0/2 [imbalanced-learn]\n",
      "   -------------------- ------------------- 1/2 [imblearn]\n",
      "   ---------------------------------------- 2/2 [imblearn]\n",
      "\n",
      "Successfully installed imbalanced-learn-0.14.0 imblearn-0.0\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install imblearn"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "40cc8ee6-4ce4-4a7d-85b2-d885391ed878",
   "metadata": {},
   "source": [
    "## Step 1: Load Data and Inverse Transform\n",
    "\n",
    "Our processed data is currently scaled, which is great for model training but not for applying human-readable rules. To create our labels, we first need to convert the pollutant and weather data back to their original, real-world values.\n",
    "\n",
    "We will do this by:\n",
    "1. Loading both the raw and processed datasets.\n",
    "2. Fitting a `StandardScaler` on the raw data to learn the original mean and standard deviation of each feature.\n",
    "3. Using this fitted scaler to `inverse_transform` the scaled data in our processed dataset."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6a970f0b-3940-435a-bbbd-381db1386feb",
   "metadata": {},
   "source": [
    "## Step 1: Load Data and Inverse Transform\n",
    "\n",
    "Our processed data is currently scaled, which is great for model training but not for applying human-readable rules. To create our labels, we first need to convert the pollutant and weather data back to their original, real-world values.\n",
    "\n",
    "We will do this by:\n",
    "1. Loading both the raw and processed datasets.\n",
    "2. Fitting a `StandardScaler` on the raw data to learn the original mean and standard deviation of each feature.\n",
    "3. Using this fitted scaler to `inverse_transform` the scaled data in our processed dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "70a5ff65-0f65-48a4-a37c-015ae5f2e03c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Numerical columns have been successfully inverse-transformed to their original scale.\n",
      "\n",
      "Unscaled DataFrame for Labeling (first 5 rows):\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>co</th>\n",
       "      <th>no2</th>\n",
       "      <th>o3</th>\n",
       "      <th>pm10</th>\n",
       "      <th>pm25</th>\n",
       "      <th>so2</th>\n",
       "      <th>temperature</th>\n",
       "      <th>humidity</th>\n",
       "      <th>...</th>\n",
       "      <th>distance_to_nearest_dump_site_m</th>\n",
       "      <th>distance_to_nearest_agricultural_m</th>\n",
       "      <th>is_weekend</th>\n",
       "      <th>hour_sin</th>\n",
       "      <th>hour_cos</th>\n",
       "      <th>month_sin</th>\n",
       "      <th>month_cos</th>\n",
       "      <th>location_Delhi_India</th>\n",
       "      <th>location_Kolkata_India</th>\n",
       "      <th>location_Mumbai_India</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>-0.129261</td>\n",
       "      <td>-0.655505</td>\n",
       "      <td>-0.226470</td>\n",
       "      <td>-0.382446</td>\n",
       "      <td>0.097505</td>\n",
       "      <td>-0.659327</td>\n",
       "      <td>33.914032</td>\n",
       "      <td>67.048809</td>\n",
       "      <td>...</td>\n",
       "      <td>1268.156916</td>\n",
       "      <td>5026.517794</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>0.001594</td>\n",
       "      <td>-0.352787</td>\n",
       "      <td>-0.388317</td>\n",
       "      <td>-0.343856</td>\n",
       "      <td>0.142296</td>\n",
       "      <td>-0.691522</td>\n",
       "      <td>33.914032</td>\n",
       "      <td>67.048809</td>\n",
       "      <td>...</td>\n",
       "      <td>1268.156916</td>\n",
       "      <td>5026.517794</td>\n",
       "      <td>1</td>\n",
       "      <td>0.258819</td>\n",
       "      <td>0.965926</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>0.328696</td>\n",
       "      <td>0.108205</td>\n",
       "      <td>-0.451640</td>\n",
       "      <td>-0.251555</td>\n",
       "      <td>0.212529</td>\n",
       "      <td>-0.582597</td>\n",
       "      <td>33.914032</td>\n",
       "      <td>67.048809</td>\n",
       "      <td>...</td>\n",
       "      <td>1268.156916</td>\n",
       "      <td>5026.517794</td>\n",
       "      <td>1</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.866025</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>0.475892</td>\n",
       "      <td>0.344847</td>\n",
       "      <td>-0.212507</td>\n",
       "      <td>-0.281119</td>\n",
       "      <td>0.118288</td>\n",
       "      <td>-0.429136</td>\n",
       "      <td>33.914032</td>\n",
       "      <td>67.048809</td>\n",
       "      <td>...</td>\n",
       "      <td>1268.156916</td>\n",
       "      <td>5026.517794</td>\n",
       "      <td>1</td>\n",
       "      <td>0.707107</td>\n",
       "      <td>0.707107</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>0.148791</td>\n",
       "      <td>0.081313</td>\n",
       "      <td>0.420526</td>\n",
       "      <td>-0.464140</td>\n",
       "      <td>-0.121794</td>\n",
       "      <td>0.018369</td>\n",
       "      <td>33.914032</td>\n",
       "      <td>67.048809</td>\n",
       "      <td>...</td>\n",
       "      <td>1268.156916</td>\n",
       "      <td>5026.517794</td>\n",
       "      <td>1</td>\n",
       "      <td>0.866025</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 24 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   latitude  longitude        co       no2        o3      pm10      pm25  \\\n",
       "0   13.0827    80.2707 -0.129261 -0.655505 -0.226470 -0.382446  0.097505   \n",
       "1   13.0827    80.2707  0.001594 -0.352787 -0.388317 -0.343856  0.142296   \n",
       "2   13.0827    80.2707  0.328696  0.108205 -0.451640 -0.251555  0.212529   \n",
       "3   13.0827    80.2707  0.475892  0.344847 -0.212507 -0.281119  0.118288   \n",
       "4   13.0827    80.2707  0.148791  0.081313  0.420526 -0.464140 -0.121794   \n",
       "\n",
       "        so2  temperature   humidity  ...  distance_to_nearest_dump_site_m  \\\n",
       "0 -0.659327    33.914032  67.048809  ...                      1268.156916   \n",
       "1 -0.691522    33.914032  67.048809  ...                      1268.156916   \n",
       "2 -0.582597    33.914032  67.048809  ...                      1268.156916   \n",
       "3 -0.429136    33.914032  67.048809  ...                      1268.156916   \n",
       "4  0.018369    33.914032  67.048809  ...                      1268.156916   \n",
       "\n",
       "   distance_to_nearest_agricultural_m  is_weekend  hour_sin  hour_cos  \\\n",
       "0                         5026.517794           1  0.000000  1.000000   \n",
       "1                         5026.517794           1  0.258819  0.965926   \n",
       "2                         5026.517794           1  0.500000  0.866025   \n",
       "3                         5026.517794           1  0.707107  0.707107   \n",
       "4                         5026.517794           1  0.866025  0.500000   \n",
       "\n",
       "      month_sin  month_cos  location_Delhi_India  location_Kolkata_India  \\\n",
       "0  1.224647e-16       -1.0                 False                   False   \n",
       "1  1.224647e-16       -1.0                 False                   False   \n",
       "2  1.224647e-16       -1.0                 False                   False   \n",
       "3  1.224647e-16       -1.0                 False                   False   \n",
       "4  1.224647e-16       -1.0                 False                   False   \n",
       "\n",
       "   location_Mumbai_India  \n",
       "0                  False  \n",
       "1                  False  \n",
       "2                  False  \n",
       "3                  False  \n",
       "4                  False  \n",
       "\n",
       "[5 rows x 24 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Load the processed data (input for this module)\n",
    "df_processed = pd.read_csv(PROCESSED_DATA_PATH)\n",
    "\n",
    "# Load the raw data to get the original scale for inverse transformation\n",
    "df_raw = pd.read_csv(RAW_DATA_PATH)\n",
    "\n",
    "# Identify the numerical columns that were scaled in the previous module\n",
    "numerical_cols = [\n",
    "    'co', 'no2', 'o3', 'pm10', 'pm25', 'so2',\n",
    "    'temperature', 'humidity', 'wind_speed', 'wind_direction',\n",
    "    'distance_to_nearest_industrial_m', 'distance_to_nearest_major_roads_m',\n",
    "    'distance_to_nearest_dump_site_m', 'distance_to_nearest_agricultural_m'\n",
    "]\n",
    "\n",
    "# Create a new DataFrame for labeling with unscaled data\n",
    "df_unscaled = df_processed.copy()\n",
    "\n",
    "# Fit the scaler on the raw data and inverse transform the processed data\n",
    "# We need to handle potential missing columns in the raw data if any exist\n",
    "valid_numerical_cols = [col for col in numerical_cols if col in df_raw.columns]\n",
    "\n",
    "if valid_numerical_cols:\n",
    "    scaler = StandardScaler()\n",
    "    scaler.fit(df_raw[valid_numerical_cols])\n",
    "    \n",
    "    # Create a temporary dataframe with only the valid columns for transformation\n",
    "    temp_processed_for_scaling = df_processed[valid_numerical_cols]\n",
    "    inversed_data = scaler.inverse_transform(temp_processed_for_scaling)\n",
    "    \n",
    "    # Place the unscaled data back into our unscaled dataframe\n",
    "    df_unscaled[valid_numerical_cols] = inversed_data\n",
    "    print(\"Numerical columns have been successfully inverse-transformed to their original scale.\")\n",
    "else:\n",
    "    print(\"Error: No numerical columns found in the raw data file.\")\n",
    "\n",
    "print(\"\\nUnscaled DataFrame for Labeling (first 5 rows):\")\n",
    "display(df_unscaled.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c25c98ac-63cf-4162-956c-577a4eb03170",
   "metadata": {},
   "source": [
    "## Step 2: Define and Apply Labeling Rules (Heuristics)\n",
    "\n",
    "This is the core of our simulation. We will create a function to assign a `pollution_source` label to each row. The initial rules were too strict and resulted in only one class. We will now use an **adaptive approach** by defining \"high\" pollution levels based on the **percentiles** of our specific dataset. This guarantees a distribution across multiple classes.\n",
    "\n",
    "**Our Revised Labeling Logic:**\n",
    "1.  **Industrial:** SO₂ in the top 15% of readings and near an industrial zone.\n",
    "2.  **Vehicular:** NO₂ in the top 15% of readings and near a major road.\n",
    "3.  **Agricultural/Burning:** PM2.5 in the top 15% of readings, near farmland, and in dry conditions.\n",
    "4.  **Background:** All other cases."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "333664a3-865f-45cd-b315-d2798b7713d1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adaptive Thresholds Calculated:\n",
      "  - SO2 > 0.94 (85th percentile)\n",
      "  - NO2 > 0.94 (85th percentile)\n",
      "  - PM2.5 > 0.81 (85th percentile)\n",
      "------------------------------\n",
      "\n",
      "DataFrame with new 'pollution_source' label (first 5 rows):\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>co</th>\n",
       "      <th>no2</th>\n",
       "      <th>o3</th>\n",
       "      <th>pm10</th>\n",
       "      <th>pm25</th>\n",
       "      <th>so2</th>\n",
       "      <th>temperature</th>\n",
       "      <th>humidity</th>\n",
       "      <th>...</th>\n",
       "      <th>distance_to_nearest_agricultural_m</th>\n",
       "      <th>is_weekend</th>\n",
       "      <th>hour_sin</th>\n",
       "      <th>hour_cos</th>\n",
       "      <th>month_sin</th>\n",
       "      <th>month_cos</th>\n",
       "      <th>location_Delhi_India</th>\n",
       "      <th>location_Kolkata_India</th>\n",
       "      <th>location_Mumbai_India</th>\n",
       "      <th>pollution_source</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>-0.129261</td>\n",
       "      <td>-0.655505</td>\n",
       "      <td>-0.226470</td>\n",
       "      <td>-0.382446</td>\n",
       "      <td>0.097505</td>\n",
       "      <td>-0.659327</td>\n",
       "      <td>0.798021</td>\n",
       "      <td>-0.113906</td>\n",
       "      <td>...</td>\n",
       "      <td>1.139477</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Background_Mixed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>0.001594</td>\n",
       "      <td>-0.352787</td>\n",
       "      <td>-0.388317</td>\n",
       "      <td>-0.343856</td>\n",
       "      <td>0.142296</td>\n",
       "      <td>-0.691522</td>\n",
       "      <td>0.798021</td>\n",
       "      <td>-0.113906</td>\n",
       "      <td>...</td>\n",
       "      <td>1.139477</td>\n",
       "      <td>1</td>\n",
       "      <td>0.258819</td>\n",
       "      <td>0.965926</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Background_Mixed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>0.328696</td>\n",
       "      <td>0.108205</td>\n",
       "      <td>-0.451640</td>\n",
       "      <td>-0.251555</td>\n",
       "      <td>0.212529</td>\n",
       "      <td>-0.582597</td>\n",
       "      <td>0.798021</td>\n",
       "      <td>-0.113906</td>\n",
       "      <td>...</td>\n",
       "      <td>1.139477</td>\n",
       "      <td>1</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.866025</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Background_Mixed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>0.475892</td>\n",
       "      <td>0.344847</td>\n",
       "      <td>-0.212507</td>\n",
       "      <td>-0.281119</td>\n",
       "      <td>0.118288</td>\n",
       "      <td>-0.429136</td>\n",
       "      <td>0.798021</td>\n",
       "      <td>-0.113906</td>\n",
       "      <td>...</td>\n",
       "      <td>1.139477</td>\n",
       "      <td>1</td>\n",
       "      <td>0.707107</td>\n",
       "      <td>0.707107</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Background_Mixed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>0.148791</td>\n",
       "      <td>0.081313</td>\n",
       "      <td>0.420526</td>\n",
       "      <td>-0.464140</td>\n",
       "      <td>-0.121794</td>\n",
       "      <td>0.018369</td>\n",
       "      <td>0.798021</td>\n",
       "      <td>-0.113906</td>\n",
       "      <td>...</td>\n",
       "      <td>1.139477</td>\n",
       "      <td>1</td>\n",
       "      <td>0.866025</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Background_Mixed</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   latitude  longitude        co       no2        o3      pm10      pm25  \\\n",
       "0   13.0827    80.2707 -0.129261 -0.655505 -0.226470 -0.382446  0.097505   \n",
       "1   13.0827    80.2707  0.001594 -0.352787 -0.388317 -0.343856  0.142296   \n",
       "2   13.0827    80.2707  0.328696  0.108205 -0.451640 -0.251555  0.212529   \n",
       "3   13.0827    80.2707  0.475892  0.344847 -0.212507 -0.281119  0.118288   \n",
       "4   13.0827    80.2707  0.148791  0.081313  0.420526 -0.464140 -0.121794   \n",
       "\n",
       "        so2  temperature  humidity  ...  distance_to_nearest_agricultural_m  \\\n",
       "0 -0.659327     0.798021 -0.113906  ...                            1.139477   \n",
       "1 -0.691522     0.798021 -0.113906  ...                            1.139477   \n",
       "2 -0.582597     0.798021 -0.113906  ...                            1.139477   \n",
       "3 -0.429136     0.798021 -0.113906  ...                            1.139477   \n",
       "4  0.018369     0.798021 -0.113906  ...                            1.139477   \n",
       "\n",
       "   is_weekend  hour_sin  hour_cos     month_sin  month_cos  \\\n",
       "0           1  0.000000  1.000000  1.224647e-16       -1.0   \n",
       "1           1  0.258819  0.965926  1.224647e-16       -1.0   \n",
       "2           1  0.500000  0.866025  1.224647e-16       -1.0   \n",
       "3           1  0.707107  0.707107  1.224647e-16       -1.0   \n",
       "4           1  0.866025  0.500000  1.224647e-16       -1.0   \n",
       "\n",
       "   location_Delhi_India  location_Kolkata_India  location_Mumbai_India  \\\n",
       "0                 False                   False                  False   \n",
       "1                 False                   False                  False   \n",
       "2                 False                   False                  False   \n",
       "3                 False                   False                  False   \n",
       "4                 False                   False                  False   \n",
       "\n",
       "   pollution_source  \n",
       "0  Background_Mixed  \n",
       "1  Background_Mixed  \n",
       "2  Background_Mixed  \n",
       "3  Background_Mixed  \n",
       "4  Background_Mixed  \n",
       "\n",
       "[5 rows x 25 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Value counts of new labels:\n",
      "pollution_source\n",
      "Background_Mixed    530\n",
      "Industrial          102\n",
      "Vehicular            44\n",
      "Name: count, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Calculate percentile thresholds from the unscaled data to make our rules adaptive.\n",
    "# This ensures that we will get labels for each class.\n",
    "so2_threshold = df_unscaled['so2'].quantile(0.85)      # Top 15% of SO2 readings\n",
    "no2_threshold = df_unscaled['no2'].quantile(0.85)      # Top 15% of NO2 readings\n",
    "pm25_threshold = df_unscaled['pm25'].quantile(0.85)     # Top 15% of PM2.5 readings\n",
    "\n",
    "print(f\"Adaptive Thresholds Calculated:\")\n",
    "print(f\"  - SO2 > {so2_threshold:.2f} (85th percentile)\")\n",
    "print(f\"  - NO2 > {no2_threshold:.2f} (85th percentile)\")\n",
    "print(f\"  - PM2.5 > {pm25_threshold:.2f} (85th percentile)\")\n",
    "print(\"-\" * 30)\n",
    "\n",
    "\n",
    "def assign_source_label(row):\n",
    "    \"\"\"\n",
    "    Assigns a pollution source label based on adaptive heuristic rules.\n",
    "    The function expects a row with unscaled data.\n",
    "    \"\"\"\n",
    "    # Rule 1: Industrial Source (High SO2 near industrial area)\n",
    "    if row['so2'] > so2_threshold and row['distance_to_nearest_industrial_m'] < 1500:\n",
    "        return 'Industrial'\n",
    "\n",
    "    # Rule 2: Vehicular Source (High NO2 near major roads)\n",
    "    if row['no2'] > no2_threshold and row['distance_to_nearest_major_roads_m'] < 1000:\n",
    "        return 'Vehicular'\n",
    "\n",
    "    # Rule 3: Agricultural/Burning Source (High PM2.5 near farmland in dry conditions)\n",
    "    if (row['pm25'] > pm25_threshold and row['distance_to_nearest_agricultural_m'] < 2000 and\n",
    "        row['humidity'] < 50): # Relaxed humidity threshold\n",
    "        return 'Agricultural_Burning'\n",
    "\n",
    "    # Default Rule: Background/Mixed\n",
    "    return 'Background_Mixed'\n",
    "\n",
    "# Apply the labeling function to create our target variable\n",
    "df_unscaled['pollution_source'] = df_unscaled.apply(assign_source_label, axis=1)\n",
    "\n",
    "# Add the new label column back to our main processed (scaled) dataframe\n",
    "df_labeled = df_processed.copy()\n",
    "df_labeled['pollution_source'] = df_unscaled['pollution_source']\n",
    "\n",
    "print(\"\\nDataFrame with new 'pollution_source' label (first 5 rows):\")\n",
    "display(df_labeled.head())\n",
    "\n",
    "print(\"\\nValue counts of new labels:\")\n",
    "print(df_labeled['pollution_source'].value_counts())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0a7fbc1c-ffca-47e0-bbc0-eda51374f4f2",
   "metadata": {},
   "source": [
    "## Step 3: Analyze and Balance the Labeled Dataset\n",
    "\n",
    "Machine learning models train best on balanced datasets. After applying our rules, it's very likely that some source categories will have far more samples than others. We will first visualize the distribution, and if it's imbalanced, we will use the **SMOTE (Synthetic Minority Over-sampling Technique)** to balance it. SMOTE creates new, synthetic samples for the minority classes, leading to a more robust model."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f0873b93-5f25-4614-918c-27cba9aa9b76",
   "metadata": {},
   "source": [
    "## Step 3: Analyze and Balance the Labeled Dataset\n",
    "\n",
    "Machine learning models train best on balanced datasets. After applying our rules, it's very likely that some source categories will have far more samples than others. We will first visualize the distribution, and if it's imbalanced, we will use the **SMOTE (Synthetic Minority Over-sampling Technique)** to balance it. SMOTE creates new, synthetic samples for the minority classes, leading to a more robust model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "f8fda39c-0a38-4086-b364-ecd2e27d3eec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "SMOTE applied successfully with k_neighbors=5.\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Visualize the initial class distribution\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.countplot(x='pollution_source', data=df_labeled, order=df_labeled['pollution_source'].value_counts().index)\n",
    "plt.title('Class Distribution Before Balancing')\n",
    "plt.xlabel('Pollution Source')\n",
    "plt.ylabel('Count')\n",
    "plt.show()\n",
    "\n",
    "# Separate features (X) and target (y)\n",
    "X = df_labeled.drop('pollution_source', axis=1)\n",
    "y = df_labeled['pollution_source']\n",
    "\n",
    "# Apply SMOTE\n",
    "# k_neighbors must be less than the number of samples in the smallest class.\n",
    "min_class_count = y.value_counts().min()\n",
    "if min_class_count > 1:\n",
    "    # Ensure k_neighbors is at most min_class_count - 1\n",
    "    k_neighbors = min(5, min_class_count - 1)\n",
    "    smote = SMOTE(random_state=42, k_neighbors=k_neighbors)\n",
    "    X_resampled, y_resampled = smote.fit_resample(X, y)\n",
    "    print(f\"SMOTE applied successfully with k_neighbors={k_neighbors}.\")\n",
    "else:\n",
    "    print(\"Smallest class has only 1 sample. Cannot apply SMOTE. Using original data.\")\n",
    "    X_resampled, y_resampled = X, y\n",
    "\n",
    "\n",
    "# Visualize the class distribution after balancing\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.countplot(x=y_resampled, order=y_resampled.value_counts().index)\n",
    "plt.title('Class Distribution After Balancing with SMOTE')\n",
    "plt.xlabel('Pollution Source')\n",
    "plt.ylabel('Count')\n",
    "plt.show()\n",
    "\n",
    "# Combine the resampled data back into a single dataframe\n",
    "df_balanced = pd.DataFrame(X_resampled, columns=X.columns)\n",
    "df_balanced['pollution_source'] = y_resampled"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "31061c2f-a0e3-4d70-ae20-e922e631c636",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Original balanced dataset shape: (1590, 25)\n",
      "Training set shape:   (1112, 25)\n",
      "Validation set shape: (239, 25)\n",
      "Test set shape:       (239, 25)\n"
     ]
    }
   ],
   "source": [
    "# First split: Separate the test set (15%)\n",
    "train_val_df, test_df = train_test_split(\n",
    "    df_balanced,\n",
    "    test_size=0.15,\n",
    "    random_state=42,\n",
    "    stratify=df_balanced['pollution_source']\n",
    ")\n",
    "\n",
    "# Second split: Separate the training and validation sets from the remaining data\n",
    "# Validation size should be 15% of the original data, so we calculate the proportion accordingly\n",
    "val_proportion = 0.15 / (1 - 0.15) # 0.15 / 0.85\n",
    "train_df, val_df = train_test_split(\n",
    "    train_val_df,\n",
    "    test_size=val_proportion,\n",
    "    random_state=42,\n",
    "    stratify=train_val_df['pollution_source']\n",
    ")\n",
    "\n",
    "# Print the shapes of the final datasets\n",
    "print(f\"Original balanced dataset shape: {df_balanced.shape}\")\n",
    "print(f\"Training set shape:   {train_df.shape}\")\n",
    "print(f\"Validation set shape: {val_df.shape}\")\n",
    "print(f\"Test set shape:       {test_df.shape}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f12dec05-d3f6-4c20-ab00-50a74e5e942d",
   "metadata": {},
   "source": [
    "## Step 5: Finalization and Saving\n",
    "\n",
    "The data is now labeled, balanced, and split. We will save the three sets to separate CSV files. These files are the final deliverables for this module and will be used directly for model training and evaluation in the next stage."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "f465beaa-e4f6-4ed4-adbd-b8aff16c4a02",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training data saved to: data/train.csv\n",
      "Validation data saved to: data/validation.csv\n",
      "Test data saved to: data/test.csv\n"
     ]
    }
   ],
   "source": [
    "# Save the datasets to CSV files\n",
    "train_df.to_csv(TRAIN_PATH, index=False)\n",
    "val_df.to_csv(VALIDATION_PATH, index=False)\n",
    "test_df.to_csv(TEST_PATH, index=False)\n",
    "\n",
    "print(f\"Training data saved to: {TRAIN_PATH}\")\n",
    "print(f\"Validation data saved to: {VALIDATION_PATH}\")\n",
    "print(f\"Test data saved to: {TEST_PATH}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b05fc604-a5df-449e-aa1f-37d01c92199d",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

```

`notebooks/4_Model_Training_and_Prediction.ipynb`

```
{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "4823982b-01df-4c6e-8c95-932cdbf725ce",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Basic data handling and visualization libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import joblib\n",
    "\n",
    "# Scikit-learn for modeling and evaluation\n",
    "from sklearn.model_selection import RandomizedSearchCV\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.metrics import classification_report, confusion_matrix, accuracy_score\n",
    "\n",
    "# XGBoost for a powerful gradient boosting model\n",
    "import xgboost as xgb\n",
    "\n",
    "# --- CORRECTED FILE PATHS ---\n",
    "# We need to go up one directory ('../') from the notebooks folder to find the data and models folders.\n",
    "TRAIN_PATH = '../data/train.csv'\n",
    "VALIDATION_PATH = '../data/validation.csv'\n",
    "TEST_PATH = '../data/test.csv'\n",
    "MODEL_SAVE_PATH = '../models/pollution_source_model.joblib'\n",
    "# --- END OF CORRECTION ---\n",
    "\n",
    "# Set plotting style\n",
    "sns.set_style('whitegrid')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fc39363f-29f6-456a-8428-8322283330aa",
   "metadata": {},
   "source": [
    "## Step 1: Load and Prepare Datasets\n",
    "\n",
    "First, we load the training, validation, and test sets that we created in the previous module. Then, for each set, we'll separate the features (X) from the target variable (y), which is `pollution_source`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "2a76a5bb-6587-497f-98cb-c2dfa3943fa0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Datasets loaded successfully.\n",
      "\n",
      "Training set shape: X_train=(1112, 24), y_train=(1112,)\n",
      "Validation set shape: X_val=(239, 24), y_val=(239,)\n",
      "Test set shape: X_test=(239, 24), y_test=(239,)\n"
     ]
    }
   ],
   "source": [
    "# Load the datasets\n",
    "try:\n",
    "    train_df = pd.read_csv(TRAIN_PATH)\n",
    "    val_df = pd.read_csv(VALIDATION_PATH)\n",
    "    test_df = pd.read_csv(TEST_PATH)\n",
    "    print(\"Datasets loaded successfully.\")\n",
    "except FileNotFoundError as e:\n",
    "    print(f\"Error loading data: {e}\")\n",
    "\n",
    "# Separate features (X) and target (y) for each set\n",
    "X_train = train_df.drop('pollution_source', axis=1)\n",
    "y_train = train_df['pollution_source']\n",
    "\n",
    "X_val = val_df.drop('pollution_source', axis=1)\n",
    "y_val = val_df['pollution_source']\n",
    "\n",
    "X_test = test_df.drop('pollution_source', axis=1)\n",
    "y_test = test_df['pollution_source']\n",
    "\n",
    "print(f\"\\nTraining set shape: X_train={X_train.shape}, y_train={y_train.shape}\")\n",
    "print(f\"Validation set shape: X_val={X_val.shape}, y_val={y_val.shape}\")\n",
    "print(f\"Test set shape: X_test={X_test.shape}, y_test={y_test.shape}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b21e7151-fe13-4f57-be9c-0453ef7c7a3a",
   "metadata": {},
   "source": [
    "## Step 2: Baseline Model Training and Evaluation\n",
    "\n",
    "We will now train three different classification models with their default settings to establish a performance baseline. This helps us understand which type of model is most promising for our data before we invest time in tuning. We will evaluate each model on the **validation set**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "d343e7dd-1034-4a3b-be8f-e42f3608df4f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Class to Integer Mapping:\n",
      "{'Background_Mixed': 0, 'Industrial': 1, 'Vehicular': 2}\n",
      "\n",
      "Target variables have been successfully encoded.\n"
     ]
    }
   ],
   "source": [
    "# --- NEW CELL TO ENCODE TARGET VARIABLE ---\n",
    "\n",
    "# The XGBoost model requires target labels to be integers starting from 0.\n",
    "# We will create a mapping and apply it to our y sets.\n",
    "\n",
    "# Create the mapping from the unique values in y_train\n",
    "class_mapping = {label: i for i, label in enumerate(np.unique(y_train))}\n",
    "inverse_class_mapping = {i: label for label, i in class_mapping.items()}\n",
    "\n",
    "print(\"Class to Integer Mapping:\")\n",
    "print(class_mapping)\n",
    "\n",
    "# Apply the mapping to all target sets\n",
    "y_train = y_train.map(class_mapping)\n",
    "y_val = y_val.map(class_mapping)\n",
    "y_test = y_test.map(class_mapping)\n",
    "\n",
    "print(\"\\nTarget variables have been successfully encoded.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "615f400e-aee7-4a17-abe5-fbd6eb7e796a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--- Training Logistic Regression ---\n",
      "\n",
      "Validation Accuracy for Logistic Regression: 0.9791\n",
      "Classification Report for Logistic Regression:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       1.00      0.96      0.98        80\n",
      "           1       0.98      0.99      0.98        80\n",
      "           2       0.96      0.99      0.97        79\n",
      "\n",
      "    accuracy                           0.98       239\n",
      "   macro avg       0.98      0.98      0.98       239\n",
      "weighted avg       0.98      0.98      0.98       239\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------------------------------------\n",
      "--- Training Random Forest ---\n",
      "\n",
      "Validation Accuracy for Random Forest: 0.9958\n",
      "Classification Report for Random Forest:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.99      1.00      0.99        80\n",
      "           1       1.00      1.00      1.00        80\n",
      "           2       1.00      0.99      0.99        79\n",
      "\n",
      "    accuracy                           1.00       239\n",
      "   macro avg       1.00      1.00      1.00       239\n",
      "weighted avg       1.00      1.00      1.00       239\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------------------------------------\n",
      "--- Training XGBoost ---\n",
      "\n",
      "Validation Accuracy for XGBoost: 1.0000\n",
      "Classification Report for XGBoost:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       1.00      1.00      1.00        80\n",
      "           1       1.00      1.00      1.00        80\n",
      "           2       1.00      1.00      1.00        79\n",
      "\n",
      "    accuracy                           1.00       239\n",
      "   macro avg       1.00      1.00      1.00       239\n",
      "weighted avg       1.00      1.00      1.00       239\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "# Initialize the models\n",
    "models = {\n",
    "    \"Logistic Regression\": LogisticRegression(max_iter=1000, random_state=42),\n",
    "    \"Random Forest\": RandomForestClassifier(random_state=42),\n",
    "    \"XGBoost\": xgb.XGBClassifier(random_state=42, eval_metric='mlogloss')\n",
    "}\n",
    "\n",
    "# Train and evaluate each model\n",
    "for name, model in models.items():\n",
    "    print(f\"--- Training {name} ---\")\n",
    "    \n",
    "    # Train the model\n",
    "    model.fit(X_train, y_train)\n",
    "    \n",
    "    # Make predictions on the validation set\n",
    "    y_pred = model.predict(X_val)\n",
    "    \n",
    "    # Evaluate and print the results\n",
    "    print(f\"\\nValidation Accuracy for {name}: {accuracy_score(y_val, y_pred):.4f}\")\n",
    "    print(f\"Classification Report for {name}:\")\n",
    "    print(classification_report(y_val, y_pred))\n",
    "    \n",
    "    # Plot Confusion Matrix\n",
    "    cm = confusion_matrix(y_val, y_pred, labels=model.classes_)\n",
    "    plt.figure(figsize=(8, 6))\n",
    "    sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=model.classes_, yticklabels=model.classes_)\n",
    "    plt.title(f'Confusion Matrix for {name}')\n",
    "    plt.xlabel('Predicted Label')\n",
    "    plt.ylabel('True Label')\n",
    "    plt.show()\n",
    "    print(\"-\" * 50)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c34cb719-09d9-497d-9fe4-862ea4bfbee4",
   "metadata": {},
   "source": [
    "## Step 3: Hyperparameter Tuning for the Best Model\n",
    "\n",
    "Based on the baseline results, both Random Forest and XGBoost are strong candidates. We will choose **XGBoost** for tuning as it often provides a slight edge in performance. We'll use `RandomizedSearchCV` to efficiently search for the best combination of hyperparameters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "c0d154b2-61d8-41ce-81e6-cf6403766718",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Starting hyperparameter tuning with RandomizedSearchCV...\n",
      "Fitting 3 folds for each of 50 candidates, totalling 150 fits\n",
      "\n",
      "Best hyperparameters found:\n",
      "{'subsample': 0.9, 'n_estimators': 400, 'max_depth': 3, 'learning_rate': 0.01, 'gamma': 0, 'colsample_bytree': 0.7}\n"
     ]
    }
   ],
   "source": [
    "# Define the parameter grid for RandomizedSearchCV\n",
    "param_grid = {\n",
    "    'n_estimators': [100, 200, 300, 400],\n",
    "    'max_depth': [3, 4, 5, 6, 7],\n",
    "    'learning_rate': [0.01, 0.05, 0.1, 0.2],\n",
    "    'subsample': [0.7, 0.8, 0.9, 1.0],\n",
    "    'colsample_bytree': [0.7, 0.8, 0.9, 1.0],\n",
    "    'gamma': [0, 0.1, 0.2]\n",
    "}\n",
    "\n",
    "# Initialize the XGBoost classifier\n",
    "xgb_clf = xgb.XGBClassifier(random_state=42, eval_metric='mlogloss')\n",
    "\n",
    "# Initialize RandomizedSearchCV\n",
    "# n_iter controls how many different parameter combinations are tried.\n",
    "# cv is the number of cross-validation folds.\n",
    "random_search = RandomizedSearchCV(\n",
    "    estimator=xgb_clf,\n",
    "    param_distributions=param_grid,\n",
    "    n_iter=50,  # Try 50 different combinations\n",
    "    cv=3,       # Use 3-fold cross-validation\n",
    "    scoring='accuracy',\n",
    "    n_jobs=-1,  # Use all available CPU cores\n",
    "    verbose=2,\n",
    "    random_state=42\n",
    ")\n",
    "\n",
    "# Fit the random search to the training data\n",
    "print(\"Starting hyperparameter tuning with RandomizedSearchCV...\")\n",
    "random_search.fit(X_train, y_train)\n",
    "\n",
    "# Print the best parameters found\n",
    "print(\"\\nBest hyperparameters found:\")\n",
    "print(random_search.best_params_)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ade290a-bd35-417e-84ad-7b874073c50b",
   "metadata": {},
   "source": [
    "## Step 4: Final Model Evaluation on the Test Set\n",
    "\n",
    "Now we will use the best hyperparameters found by our search to train a final model. We will then evaluate this optimized model on the **test set**, which it has never seen before. This gives us the most honest and reliable measure of its real-world performance.```\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "186905a4-09e0-4185-8d2f-8c0cd1baf6e0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--- Final Model Evaluation on Test Set ---\n",
      "\n",
      "Test Accuracy: 1.0000\n",
      "\n",
      "Final Classification Report:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       1.00      1.00      1.00        79\n",
      "           1       1.00      1.00      1.00        80\n",
      "           2       1.00      1.00      1.00        80\n",
      "\n",
      "    accuracy                           1.00       239\n",
      "   macro avg       1.00      1.00      1.00       239\n",
      "weighted avg       1.00      1.00      1.00       239\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#### **Cell 9: Train and Evaluate the Final Optimized Model**\n",
    "#```python\n",
    "# Get the best model from the random search\n",
    "best_model = random_search.best_estimator_\n",
    "\n",
    "# Make predictions on the test set\n",
    "y_test_pred = best_model.predict(X_test)\n",
    "\n",
    "# Evaluate the final model\n",
    "print(f\"--- Final Model Evaluation on Test Set ---\")\n",
    "print(f\"\\nTest Accuracy: {accuracy_score(y_test, y_test_pred):.4f}\")\n",
    "print(\"\\nFinal Classification Report:\")\n",
    "print(classification_report(y_test, y_test_pred))\n",
    "\n",
    "# Plot the final confusion matrix\n",
    "cm_final = confusion_matrix(y_test, y_test_pred, labels=best_model.classes_)\n",
    "plt.figure(figsize=(8, 6))\n",
    "sns.heatmap(cm_final, annot=True, fmt='d', cmap='Greens', xticklabels=best_model.classes_, yticklabels=best_model.classes_)\n",
    "plt.title('Final Model Confusion Matrix on Test Data')\n",
    "plt.xlabel('Predicted Label')\n",
    "plt.ylabel('True Label')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "f4dee2e5-e55d-494b-b498-e5fc9b36bb45",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "#### **Cell 11: Plot Feature Importance**\n",
    "#```python\n",
    "# Get feature importances from the best model\n",
    "importances = best_model.feature_importances_\n",
    "feature_names = X_train.columns\n",
    "\n",
    "# Create a dataframe for visualization\n",
    "feature_importance_df = pd.DataFrame({'feature': feature_names, 'importance': importances})\n",
    "feature_importance_df = feature_importance_df.sort_values(by='importance', ascending=False)\n",
    "\n",
    "# Plot the feature importances\n",
    "plt.figure(figsize=(12, 8))\n",
    "sns.barplot(x='importance', y='feature', data=feature_importance_df.head(15)) # Show top 15\n",
    "plt.title('Top 15 Most Important Features')\n",
    "plt.xlabel('Importance Score')\n",
    "plt.ylabel('Feature')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eb2a9e92-a100-46f1-8bef-7bc80adb923d",
   "metadata": {},
   "source": [
    "## Step 5: Save the Trained Model\n",
    "\n",
    "Finally, we will save our trained and optimized model to a file using `joblib`. This allows us to easily load and use it in other applications, such as our real-time dashboard, without needing to retrain it."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "a539f68c-54e6-4c4b-a67c-ebefdf504d6f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Created directory: ../models\n",
      "\n",
      "Model successfully saved to: ../models/pollution_source_model.joblib\n"
     ]
    }
   ],
   "source": [
    "# --- CORRECTED SAVING LOGIC ---\n",
    "import os\n",
    "\n",
    "# Get the directory path from the full file path\n",
    "model_dir = os.path.dirname(MODEL_SAVE_PATH)\n",
    "\n",
    "# Create the directory if it doesn't already exist\n",
    "if not os.path.exists(model_dir):\n",
    "    os.makedirs(model_dir)\n",
    "    print(f\"Created directory: {model_dir}\")\n",
    "\n",
    "# Save the final model to the specified path\n",
    "joblib.dump(best_model, MODEL_SAVE_PATH)\n",
    "\n",
    "print(f\"\\nModel successfully saved to: {MODEL_SAVE_PATH}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "771216d8-7648-4b3d-a7b6-42196599e847",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

```

`notebooks/5_Geospatial_Visualization.ipynb`

```
{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "3a2313c1-9125-4031-b8a8-9f2e21742440",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting folium\n",
      "  Downloading folium-0.20.0-py2.py3-none-any.whl.metadata (4.2 kB)\n",
      "Collecting branca>=0.6.0 (from folium)\n",
      "  Downloading branca-0.8.1-py3-none-any.whl.metadata (1.5 kB)\n",
      "Requirement already satisfied: jinja2>=2.9 in c:\\users\\joshu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from folium) (3.1.4)\n",
      "Requirement already satisfied: numpy in c:\\users\\joshu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from folium) (1.26.4)\n",
      "Requirement already satisfied: requests in c:\\users\\joshu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from folium) (2.32.3)\n",
      "Collecting xyzservices (from folium)\n",
      "  Downloading xyzservices-2025.4.0-py3-none-any.whl.metadata (4.3 kB)\n",
      "Requirement already satisfied: MarkupSafe>=2.0 in c:\\users\\joshu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from jinja2>=2.9->folium) (2.1.5)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in c:\\users\\joshu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from requests->folium) (3.3.2)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\joshu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from requests->folium) (3.7)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in c:\\users\\joshu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from requests->folium) (2.2.2)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\joshu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from requests->folium) (2024.7.4)\n",
      "Downloading folium-0.20.0-py2.py3-none-any.whl (113 kB)\n",
      "Downloading branca-0.8.1-py3-none-any.whl (26 kB)\n",
      "Downloading xyzservices-2025.4.0-py3-none-any.whl (90 kB)\n",
      "Installing collected packages: xyzservices, branca, folium\n",
      "\n",
      "   ---------------------------------------- 0/3 [xyzservices]\n",
      "   ------------- -------------------------- 1/3 [branca]\n",
      "   -------------------------- ------------- 2/3 [folium]\n",
      "   -------------------------- ------------- 2/3 [folium]\n",
      "   -------------------------- ------------- 2/3 [folium]\n",
      "   ---------------------------------------- 3/3 [folium]\n",
      "\n",
      "Successfully installed branca-0.8.1 folium-0.20.0 xyzservices-2025.4.0\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install folium"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "57321988-fe07-41f2-a1a5-6c9dc77a55a0",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Core data handling libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import joblib\n",
    "\n",
    "# Geospatial and mapping libraries\n",
    "import folium\n",
    "from folium.plugins import HeatMap, MarkerCluster\n",
    "\n",
    "# Scikit-learn for the scaler\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "# Define file paths\n",
    "TRAIN_PATH = '../data/train.csv'\n",
    "TEST_PATH = '../data/test.csv'\n",
    "MODEL_PATH = '../models/pollution_source_model.joblib'\n",
    "OUTPUT_MAP_PATH = '../outputs/interactive_pollution_map.html'"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "842d7991-ef1a-41d8-897b-f8694aca40e3",
   "metadata": {},
   "source": [
    "## Step 1: Load Model and Prepare Data for Visualization\n",
    "\n",
    "To create meaningful visualizations, we need our data in its original, unscaled format. We will:\n",
    "1. Load the trained model.\n",
    "2. Load the scaled `test.csv` and `train.csv` datasets.\n",
    "3. Fit a `StandardScaler` on the training data to learn the original scaling parameters.\n",
    "4. Use this scaler to `inverse_transform` our test data, converting it back to real-world values.\n",
    "5. Add the model's predictions to this unscaled DataFrame."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "6c56503a-2c2f-4f36-9d2f-3015b9d54721",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model and datasets loaded successfully.\n",
      "\n",
      "Unscaled data with predictions (first 5 rows):\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>co</th>\n",
       "      <th>no2</th>\n",
       "      <th>o3</th>\n",
       "      <th>pm10</th>\n",
       "      <th>pm25</th>\n",
       "      <th>so2</th>\n",
       "      <th>temperature</th>\n",
       "      <th>humidity</th>\n",
       "      <th>...</th>\n",
       "      <th>distance_to_nearest_agricultural_m</th>\n",
       "      <th>is_weekend</th>\n",
       "      <th>hour_sin</th>\n",
       "      <th>hour_cos</th>\n",
       "      <th>month_sin</th>\n",
       "      <th>month_cos</th>\n",
       "      <th>location_Delhi_India</th>\n",
       "      <th>location_Kolkata_India</th>\n",
       "      <th>location_Mumbai_India</th>\n",
       "      <th>predicted_source</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>22.5726</td>\n",
       "      <td>88.3639</td>\n",
       "      <td>1.915160</td>\n",
       "      <td>3.155522</td>\n",
       "      <td>-0.454381</td>\n",
       "      <td>1.271370</td>\n",
       "      <td>1.764579</td>\n",
       "      <td>2.259856</td>\n",
       "      <td>-0.658759</td>\n",
       "      <td>0.955881</td>\n",
       "      <td>...</td>\n",
       "      <td>0.742447</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.258819</td>\n",
       "      <td>-0.965926</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>Industrial</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>28.7041</td>\n",
       "      <td>77.1025</td>\n",
       "      <td>3.746988</td>\n",
       "      <td>2.792178</td>\n",
       "      <td>-0.491605</td>\n",
       "      <td>3.321108</td>\n",
       "      <td>2.063069</td>\n",
       "      <td>1.423285</td>\n",
       "      <td>1.239977</td>\n",
       "      <td>-1.573099</td>\n",
       "      <td>...</td>\n",
       "      <td>0.132205</td>\n",
       "      <td>0</td>\n",
       "      <td>0.707107</td>\n",
       "      <td>0.707107</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Vehicular</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>0.270643</td>\n",
       "      <td>1.493132</td>\n",
       "      <td>-1.294945</td>\n",
       "      <td>-0.371792</td>\n",
       "      <td>0.126503</td>\n",
       "      <td>0.312695</td>\n",
       "      <td>0.885131</td>\n",
       "      <td>-0.135052</td>\n",
       "      <td>...</td>\n",
       "      <td>1.266151</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.500000</td>\n",
       "      <td>0.866025</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Background_Mixed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>13.0827</td>\n",
       "      <td>80.2707</td>\n",
       "      <td>0.887057</td>\n",
       "      <td>2.021857</td>\n",
       "      <td>-1.281111</td>\n",
       "      <td>-0.419618</td>\n",
       "      <td>0.093240</td>\n",
       "      <td>0.112517</td>\n",
       "      <td>0.885131</td>\n",
       "      <td>-0.135052</td>\n",
       "      <td>...</td>\n",
       "      <td>1.266151</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.965926</td>\n",
       "      <td>0.258819</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Vehicular</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>22.5726</td>\n",
       "      <td>88.3639</td>\n",
       "      <td>1.462377</td>\n",
       "      <td>0.868511</td>\n",
       "      <td>3.777529</td>\n",
       "      <td>2.940990</td>\n",
       "      <td>4.088105</td>\n",
       "      <td>3.035296</td>\n",
       "      <td>-0.658759</td>\n",
       "      <td>0.955881</td>\n",
       "      <td>...</td>\n",
       "      <td>0.742447</td>\n",
       "      <td>0</td>\n",
       "      <td>0.945659</td>\n",
       "      <td>-0.131191</td>\n",
       "      <td>1.224647e-16</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>Industrial</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   latitude  longitude        co       no2        o3      pm10      pm25  \\\n",
       "0   22.5726    88.3639  1.915160  3.155522 -0.454381  1.271370  1.764579   \n",
       "1   28.7041    77.1025  3.746988  2.792178 -0.491605  3.321108  2.063069   \n",
       "2   13.0827    80.2707  0.270643  1.493132 -1.294945 -0.371792  0.126503   \n",
       "3   13.0827    80.2707  0.887057  2.021857 -1.281111 -0.419618  0.093240   \n",
       "4   22.5726    88.3639  1.462377  0.868511  3.777529  2.940990  4.088105   \n",
       "\n",
       "        so2  temperature  humidity  ...  distance_to_nearest_agricultural_m  \\\n",
       "0  2.259856    -0.658759  0.955881  ...                            0.742447   \n",
       "1  1.423285     1.239977 -1.573099  ...                            0.132205   \n",
       "2  0.312695     0.885131 -0.135052  ...                            1.266151   \n",
       "3  0.112517     0.885131 -0.135052  ...                            1.266151   \n",
       "4  3.035296    -0.658759  0.955881  ...                            0.742447   \n",
       "\n",
       "   is_weekend  hour_sin  hour_cos     month_sin  month_cos  \\\n",
       "0           0 -0.258819 -0.965926  1.224647e-16       -1.0   \n",
       "1           0  0.707107  0.707107  1.224647e-16       -1.0   \n",
       "2           0 -0.500000  0.866025  1.224647e-16       -1.0   \n",
       "3           0 -0.965926  0.258819  1.224647e-16       -1.0   \n",
       "4           0  0.945659 -0.131191  1.224647e-16       -1.0   \n",
       "\n",
       "   location_Delhi_India  location_Kolkata_India  location_Mumbai_India  \\\n",
       "0                 False                    True                  False   \n",
       "1                  True                   False                  False   \n",
       "2                 False                   False                  False   \n",
       "3                 False                   False                  False   \n",
       "4                 False                    True                  False   \n",
       "\n",
       "   predicted_source  \n",
       "0        Industrial  \n",
       "1         Vehicular  \n",
       "2  Background_Mixed  \n",
       "3         Vehicular  \n",
       "4        Industrial  \n",
       "\n",
       "[5 rows x 25 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Load the model and datasets\n",
    "try:\n",
    "    model = joblib.load(MODEL_PATH)\n",
    "    train_df = pd.read_csv(TRAIN_PATH)\n",
    "    test_df = pd.read_csv(TEST_PATH)\n",
    "    print(\"Model and datasets loaded successfully.\")\n",
    "except FileNotFoundError as e:\n",
    "    print(f\"Error loading files: {e}\")\n",
    "\n",
    "# Separate features and target from the test set\n",
    "X_test = test_df.drop('pollution_source', axis=1)\n",
    "y_test = test_df['pollution_source']\n",
    "\n",
    "# --- Inverse Transform the Data ---\n",
    "# Identify the numerical columns that were scaled\n",
    "numerical_cols = [\n",
    "    'co', 'no2', 'o3', 'pm10', 'pm25', 'so2',\n",
    "    'temperature', 'humidity', 'wind_speed', 'wind_direction',\n",
    "    'distance_to_nearest_industrial_m', 'distance_to_nearest_major_roads_m',\n",
    "    'distance_to_nearest_dump_site_m', 'distance_to_nearest_agricultural_m'\n",
    "]\n",
    "\n",
    "# Fit the scaler on the TRAINING data to learn the correct scaling parameters\n",
    "scaler = StandardScaler()\n",
    "scaler.fit(train_df[numerical_cols])\n",
    "\n",
    "# Inverse transform the TEST data\n",
    "df_unscaled = X_test.copy()\n",
    "df_unscaled[numerical_cols] = scaler.inverse_transform(X_test[numerical_cols])\n",
    "\n",
    "# --- Add Predictions and Labels ---\n",
    "# Get model predictions\n",
    "predictions_encoded = model.predict(X_test)\n",
    "\n",
    "# Create the inverse mapping from integer to label\n",
    "unique_labels = sorted(np.unique(train_df['pollution_source']))\n",
    "inverse_class_mapping = {i: label for i, label in enumerate(unique_labels)}\n",
    "df_unscaled['predicted_source'] = pd.Series(predictions_encoded).map(inverse_class_mapping)\n",
    "\n",
    "print(\"\\nUnscaled data with predictions (first 5 rows):\")\n",
    "display(df_unscaled.head())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "5ab07d84-98e3-4381-b6bb-8504f583fac0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Folium map object created.\n"
     ]
    }
   ],
   "source": [
    "# Calculate the center of the map based on the average coordinates\n",
    "map_center = [df_unscaled['latitude'].mean(), df_unscaled['longitude'].mean()]\n",
    "\n",
    "# Create the Folium map object\n",
    "m = folium.Map(location=map_center, zoom_start=6, tiles=\"CartoDB positron\")\n",
    "\n",
    "print(\"Folium map object created.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d9c13427-f77d-4401-856e-be1fd2ae0503",
   "metadata": {},
   "source": [
    "## Step 3: Overlay Source-Specific Markers\n",
    "\n",
    "Now, we'll add markers for each data point. Each marker will be color-coded and have a specific icon based on the predicted pollution source. Clicking on a marker will show a popup with detailed information. We'll use `MarkerCluster` to avoid cluttering the map when zoomed out."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "0f07bb59-7dec-4904-b37c-fb988959bc43",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Source-specific markers have been added to the map.\n"
     ]
    }
   ],
   "source": [
    "# Create a feature group for the markers\n",
    "marker_cluster = MarkerCluster(name=\"Pollution Source Predictions\").add_to(m)\n",
    "\n",
    "# Define colors and icons for each source type\n",
    "source_styles = {\n",
    "    'Vehicular': {'color': 'blue', 'icon': 'car'},\n",
    "    'Industrial': {'color': 'gray', 'icon': 'industry'},\n",
    "    'Agricultural_Burning': {'color': 'orange', 'icon': 'fire'},\n",
    "    'Background_Mixed': {'color': 'green', 'icon': 'leaf'}\n",
    "}\n",
    "\n",
    "# Iterate through the dataframe and add a marker for each row\n",
    "for index, row in df_unscaled.iterrows():\n",
    "    source = row['predicted_source']\n",
    "    style = source_styles.get(source, {'color': 'black', 'icon': 'question-sign'}) # Default style\n",
    "\n",
    "    # Create the HTML for the popup\n",
    "    popup_html = f\"\"\"\n",
    "    <b>Predicted Source:</b> {source}<br>\n",
    "    <b>Coordinates:</b> ({row['latitude']:.4f}, {row['longitude']:.4f})<br>\n",
    "    <hr>\n",
    "    <b>PM2.5:</b> {row['pm25']:.2f} µg/m³<br>\n",
    "    <b>NO₂:</b> {row['no2']:.2f} µg/m³<br>\n",
    "    <b>SO₂:</b> {row['so2']:.2f} µg/m³<br>\n",
    "    \"\"\"\n",
    "    \n",
    "    # Create and add the marker\n",
    "    folium.Marker(\n",
    "        location=[row['latitude'], row['longitude']],\n",
    "        popup=folium.Popup(popup_html, max_width=300),\n",
    "        icon=folium.Icon(color=style['color'], icon=style['icon'], prefix='fa')\n",
    "    ).add_to(marker_cluster)\n",
    "\n",
    "print(\"Source-specific markers have been added to the map.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4b63055e-eaa8-40c2-8154-87a134b8efc5",
   "metadata": {},
   "source": [
    "## Step 4: Create a Dynamic Pollution Heatmap\n",
    "\n",
    "To visualize high-risk zones, we will create a heatmap layer. The intensity of the map will be based on the PM2.5 concentration, as it is a key indicator of air quality."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "361cad4f-ea9d-4ffb-a3c3-a5c22f46fd4a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PM2.5 heatmap layer has been added to the map.\n"
     ]
    }
   ],
   "source": [
    "# Prepare the data for the heatmap: a list of [lat, lon, weight]\n",
    "heat_data = df_unscaled[['latitude', 'longitude', 'pm25']].values.tolist()\n",
    "\n",
    "# Create and add the heatmap layer\n",
    "HeatMap(heat_data, name=\"PM2.5 Heatmap\", radius=15).add_to(m)\n",
    "\n",
    "print(\"PM2.5 heatmap layer has been added to the map.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d3d012e1-5d00-4782-ade5-9f888b914bc5",
   "metadata": {},
   "source": [
    "## Step 5: Add Layer Control\n",
    "\n",
    "To make the map truly interactive, we will add a layer control panel. This will allow the user to toggle the visibility of the source markers and the heatmap independently."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "bb224a7c-9cf1-41ff-a402-ab2f4fb3afe1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Displaying the final interactive map:\n"
     ]
    }
   ],
   "source": [
    "# Add the layer control to the map\n",
    "folium.LayerControl().add_to(m)\n",
    "\n",
    "# Display the map in the Jupyter Notebook\n",
    "print(\"Displaying the final interactive map:\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "415eb7f1-c73f-4c4b-bde3-b406e0f04d95",
   "metadata": {},
   "source": [
    "## Step 6: Save the Map to an HTML File\n",
    "\n",
    "Finally, we save the complete interactive map as a self-contained HTML file. This file can be opened in any browser or embedded directly into our Streamlit dashboard in the next module."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "00e25289-3091-4db4-92b4-f03507a3bdf4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Interactive map successfully saved to: ../outputs/interactive_pollution_map.html\n"
     ]
    }
   ],
   "source": [
    "# Save the map to an HTML file\n",
    "\n",
    "m.save(OUTPUT_MAP_PATH)\n",
    "\n",
    "print(f\"Interactive map successfully saved to: {OUTPUT_MAP_PATH}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c49b4083-e292-46f8-84a4-93431091e25a",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

```

`o.txt`

```

```

`outputs/interactive_pollution_map.html`

```html
<!DOCTYPE html>
<html>
<head>
    
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <script src="https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.js"></script>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.css"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css"/>
    <link rel="stylesheet" href="https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.2.0/css/all.min.css"/>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/python-visualization/folium/folium/templates/leaflet.awesome.rotate.min.css"/>
    
            <meta name="viewport" content="width=device-width,
                initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
            <style>
                #map_bc1c6fb8e56ad8fb3a3ad9158b452dfd {
                    position: relative;
                    width: 100.0%;
                    height: 100.0%;
                    left: 0.0%;
                    top: 0.0%;
                }
                .leaflet-container { font-size: 1rem; }
            </style>

            <style>html, body {
                width: 100%;
                height: 100%;
                margin: 0;
                padding: 0;
            }
            </style>

            <style>#map {
                position:absolute;
                top:0;
                bottom:0;
                right:0;
                left:0;
                }
            </style>

            <script>
                L_NO_TOUCH = false;
                L_DISABLE_3D = false;
            </script>

        
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/1.1.0/leaflet.markercluster.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/1.1.0/MarkerCluster.css"/>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/1.1.0/MarkerCluster.Default.css"/>
    <script src="https://cdn.jsdelivr.net/gh/python-visualization/folium@main/folium/templates/leaflet_heat.min.js"></script>
</head>
<body>
    
    
            <div class="folium-map" id="map_bc1c6fb8e56ad8fb3a3ad9158b452dfd" ></div>
        
</body>
<script>
    
    
            var map_bc1c6fb8e56ad8fb3a3ad9158b452dfd = L.map(
                "map_bc1c6fb8e56ad8fb3a3ad9158b452dfd",
                {
                    center: [20.6596954777663, 80.87403367227428],
                    crs: L.CRS.EPSG3857,
                    ...{
  "zoom": 6,
  "zoomControl": true,
  "preferCanvas": false,
}

                }
            );

            

        
    
            var tile_layer_ede8aa38bb0f7dc56111c0084a6fce0c = L.tileLayer(
                "https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png",
                {
  "minZoom": 0,
  "maxZoom": 20,
  "maxNativeZoom": 20,
  "noWrap": false,
  "attribution": "\u0026copy; \u003ca href=\"https://www.openstreetmap.org/copyright\"\u003eOpenStreetMap\u003c/a\u003e contributors \u0026copy; \u003ca href=\"https://carto.com/attributions\"\u003eCARTO\u003c/a\u003e",
  "subdomains": "abcd",
  "detectRetina": false,
  "tms": false,
  "opacity": 1,
}

            );
        
    
            tile_layer_ede8aa38bb0f7dc56111c0084a6fce0c.addTo(map_bc1c6fb8e56ad8fb3a3ad9158b452dfd);
        
    
            var marker_cluster_9b7d6938b36e29597c33f6ca42a737bf = L.markerClusterGroup(
                {
}
            );
        
    
            var marker_31db9410cde7ba394a19a9750c614735 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_a3a4b3de0272701d934b3489e355cd61 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_ad57d0d06be1b88beaab29f2f1eb37ab = L.popup({
  "maxWidth": 300,
});

        
            
                var html_975f957570e6b835f57ff2e94a1c8c99 = $(`<div id="html_975f957570e6b835f57ff2e94a1c8c99" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.76 µg/m³<br>     <b>NO₂:</b> 3.16 µg/m³<br>     <b>SO₂:</b> 2.26 µg/m³<br>     </div>`)[0];
                popup_ad57d0d06be1b88beaab29f2f1eb37ab.setContent(html_975f957570e6b835f57ff2e94a1c8c99);
            
        

        marker_31db9410cde7ba394a19a9750c614735.bindPopup(popup_ad57d0d06be1b88beaab29f2f1eb37ab)
        ;

        
    
    
                marker_31db9410cde7ba394a19a9750c614735.setIcon(icon_a3a4b3de0272701d934b3489e355cd61);
            
    
            var marker_92e4b76d27fd411d611a764597809d13 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_3a35ce98b6a3b3369708d2db0a18885e = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_97f173d6a88d85fd3b6cf22cc4f4a8c8 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_0d4abee9d26286eca710c1d609433bde = $(`<div id="html_0d4abee9d26286eca710c1d609433bde" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 2.06 µg/m³<br>     <b>NO₂:</b> 2.79 µg/m³<br>     <b>SO₂:</b> 1.42 µg/m³<br>     </div>`)[0];
                popup_97f173d6a88d85fd3b6cf22cc4f4a8c8.setContent(html_0d4abee9d26286eca710c1d609433bde);
            
        

        marker_92e4b76d27fd411d611a764597809d13.bindPopup(popup_97f173d6a88d85fd3b6cf22cc4f4a8c8)
        ;

        
    
    
                marker_92e4b76d27fd411d611a764597809d13.setIcon(icon_3a35ce98b6a3b3369708d2db0a18885e);
            
    
            var marker_ceceff022748bf9e678986cfa15079ff = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_40cd068f966ca3fd7522b9236f089d66 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_5fd4045a0e15275610cebdc092b9832a = L.popup({
  "maxWidth": 300,
});

        
            
                var html_f84e2b51ac3bc52cc9341cb111e975e4 = $(`<div id="html_f84e2b51ac3bc52cc9341cb111e975e4" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.13 µg/m³<br>     <b>NO₂:</b> 1.49 µg/m³<br>     <b>SO₂:</b> 0.31 µg/m³<br>     </div>`)[0];
                popup_5fd4045a0e15275610cebdc092b9832a.setContent(html_f84e2b51ac3bc52cc9341cb111e975e4);
            
        

        marker_ceceff022748bf9e678986cfa15079ff.bindPopup(popup_5fd4045a0e15275610cebdc092b9832a)
        ;

        
    
    
                marker_ceceff022748bf9e678986cfa15079ff.setIcon(icon_40cd068f966ca3fd7522b9236f089d66);
            
    
            var marker_e1b1b2d629d63dc2c6a31cb31810bb6f = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_a536241cf463da0df47d5bae55f22e91 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_dd6658fd9e4f8edb1505200802eea607 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_9fdf0a42b375e9a4bf5e063e12925496 = $(`<div id="html_9fdf0a42b375e9a4bf5e063e12925496" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.09 µg/m³<br>     <b>NO₂:</b> 2.02 µg/m³<br>     <b>SO₂:</b> 0.11 µg/m³<br>     </div>`)[0];
                popup_dd6658fd9e4f8edb1505200802eea607.setContent(html_9fdf0a42b375e9a4bf5e063e12925496);
            
        

        marker_e1b1b2d629d63dc2c6a31cb31810bb6f.bindPopup(popup_dd6658fd9e4f8edb1505200802eea607)
        ;

        
    
    
                marker_e1b1b2d629d63dc2c6a31cb31810bb6f.setIcon(icon_a536241cf463da0df47d5bae55f22e91);
            
    
            var marker_3045ebd9c702fd093c16b96b248392af = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_339a2dfaed3b0215df3e575b69732768 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_d32c790d2564f293bec890a6121bd644 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_1481470ae0d9491bad3bcdd1e1317302 = $(`<div id="html_1481470ae0d9491bad3bcdd1e1317302" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 4.09 µg/m³<br>     <b>NO₂:</b> 0.87 µg/m³<br>     <b>SO₂:</b> 3.04 µg/m³<br>     </div>`)[0];
                popup_d32c790d2564f293bec890a6121bd644.setContent(html_1481470ae0d9491bad3bcdd1e1317302);
            
        

        marker_3045ebd9c702fd093c16b96b248392af.bindPopup(popup_d32c790d2564f293bec890a6121bd644)
        ;

        
    
    
                marker_3045ebd9c702fd093c16b96b248392af.setIcon(icon_339a2dfaed3b0215df3e575b69732768);
            
    
            var marker_5aafc5d8eae6065c58218b89d8b62d7f = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_3a16016b5e3cec139dad65a64a067ac0 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_bfbf978c79cf09525662777dd0dbad38 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_15d3f98f69d6a3b13dd37c27bc6d8566 = $(`<div id="html_15d3f98f69d6a3b13dd37c27bc6d8566" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.35 µg/m³<br>     <b>NO₂:</b> 2.26 µg/m³<br>     <b>SO₂:</b> 1.98 µg/m³<br>     </div>`)[0];
                popup_bfbf978c79cf09525662777dd0dbad38.setContent(html_15d3f98f69d6a3b13dd37c27bc6d8566);
            
        

        marker_5aafc5d8eae6065c58218b89d8b62d7f.bindPopup(popup_bfbf978c79cf09525662777dd0dbad38)
        ;

        
    
    
                marker_5aafc5d8eae6065c58218b89d8b62d7f.setIcon(icon_3a16016b5e3cec139dad65a64a067ac0);
            
    
            var marker_3822e6c896953e609c9831076ff8ce4b = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_5e7ab2b9f2a4cb12c414951df9d5c0ff = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_5937df363ae4a5191a6131a8f16cd97c = L.popup({
  "maxWidth": 300,
});

        
            
                var html_91b5670808b644e73b12313565ba4b1d = $(`<div id="html_91b5670808b644e73b12313565ba4b1d" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.72 µg/m³<br>     <b>NO₂:</b> 0.51 µg/m³<br>     <b>SO₂:</b> -0.19 µg/m³<br>     </div>`)[0];
                popup_5937df363ae4a5191a6131a8f16cd97c.setContent(html_91b5670808b644e73b12313565ba4b1d);
            
        

        marker_3822e6c896953e609c9831076ff8ce4b.bindPopup(popup_5937df363ae4a5191a6131a8f16cd97c)
        ;

        
    
    
                marker_3822e6c896953e609c9831076ff8ce4b.setIcon(icon_5e7ab2b9f2a4cb12c414951df9d5c0ff);
            
    
            var marker_73913a64a98c6ef67f0e9ca8fb42409b = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_bd7cff9a3d0118007452a3706839147e = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_31ca575c74b489d4efa769494fb41809 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_27f9892eb023d31c145b8ef588372b87 = $(`<div id="html_27f9892eb023d31c145b8ef588372b87" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> 0.49 µg/m³<br>     <b>NO₂:</b> 1.02 µg/m³<br>     <b>SO₂:</b> 1.88 µg/m³<br>     </div>`)[0];
                popup_31ca575c74b489d4efa769494fb41809.setContent(html_27f9892eb023d31c145b8ef588372b87);
            
        

        marker_73913a64a98c6ef67f0e9ca8fb42409b.bindPopup(popup_31ca575c74b489d4efa769494fb41809)
        ;

        
    
    
                marker_73913a64a98c6ef67f0e9ca8fb42409b.setIcon(icon_bd7cff9a3d0118007452a3706839147e);
            
    
            var marker_11778035151876ab54cd277bfc07e9ce = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_990b3bb87c870fcd5ce2b178caa8fc83 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_8f4835c8bd1d44c00cf10b20daa157e7 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_928ec0ad3e6357a8ab22fcaddbbe8f2d = $(`<div id="html_928ec0ad3e6357a8ab22fcaddbbe8f2d" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 2.90 µg/m³<br>     <b>NO₂:</b> 1.95 µg/m³<br>     <b>SO₂:</b> 1.60 µg/m³<br>     </div>`)[0];
                popup_8f4835c8bd1d44c00cf10b20daa157e7.setContent(html_928ec0ad3e6357a8ab22fcaddbbe8f2d);
            
        

        marker_11778035151876ab54cd277bfc07e9ce.bindPopup(popup_8f4835c8bd1d44c00cf10b20daa157e7)
        ;

        
    
    
                marker_11778035151876ab54cd277bfc07e9ce.setIcon(icon_990b3bb87c870fcd5ce2b178caa8fc83);
            
    
            var marker_e22404642d95419088a646dfc7382fdc = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_f7f8ba19083da54766e95d38f70e2dff = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_0aa41a4ced1094630ee52a1afda99a76 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_b09dad1997c5e4f65020d6c6af589e6e = $(`<div id="html_b09dad1997c5e4f65020d6c6af589e6e" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> -0.21 µg/m³<br>     <b>NO₂:</b> -0.65 µg/m³<br>     <b>SO₂:</b> -0.79 µg/m³<br>     </div>`)[0];
                popup_0aa41a4ced1094630ee52a1afda99a76.setContent(html_b09dad1997c5e4f65020d6c6af589e6e);
            
        

        marker_e22404642d95419088a646dfc7382fdc.bindPopup(popup_0aa41a4ced1094630ee52a1afda99a76)
        ;

        
    
    
                marker_e22404642d95419088a646dfc7382fdc.setIcon(icon_f7f8ba19083da54766e95d38f70e2dff);
            
    
            var marker_abe9248379ecb023d7090bfcd51c9092 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_d338902e9415fd6dc8dee3ea1e2b7ea8 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_10915dd54029691217e51e2dfe93e228 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_4e8d9606c46c55345c0da249e9b559c3 = $(`<div id="html_4e8d9606c46c55345c0da249e9b559c3" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.13 µg/m³<br>     <b>NO₂:</b> 0.45 µg/m³<br>     <b>SO₂:</b> 1.28 µg/m³<br>     </div>`)[0];
                popup_10915dd54029691217e51e2dfe93e228.setContent(html_4e8d9606c46c55345c0da249e9b559c3);
            
        

        marker_abe9248379ecb023d7090bfcd51c9092.bindPopup(popup_10915dd54029691217e51e2dfe93e228)
        ;

        
    
    
                marker_abe9248379ecb023d7090bfcd51c9092.setIcon(icon_d338902e9415fd6dc8dee3ea1e2b7ea8);
            
    
            var marker_deacd5b5ecb6f1ee17a43190c32a48ca = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_11d73e7a3abe022c10bf8e0084f23b6b = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_969b21998a013650cb280b2fdf386294 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_3f71642dc65f684b620749213930ef40 = $(`<div id="html_3f71642dc65f684b620749213930ef40" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.92 µg/m³<br>     <b>NO₂:</b> 2.93 µg/m³<br>     <b>SO₂:</b> 0.23 µg/m³<br>     </div>`)[0];
                popup_969b21998a013650cb280b2fdf386294.setContent(html_3f71642dc65f684b620749213930ef40);
            
        

        marker_deacd5b5ecb6f1ee17a43190c32a48ca.bindPopup(popup_969b21998a013650cb280b2fdf386294)
        ;

        
    
    
                marker_deacd5b5ecb6f1ee17a43190c32a48ca.setIcon(icon_11d73e7a3abe022c10bf8e0084f23b6b);
            
    
            var marker_22bebb51a1b42fd65c9fa7c1a2d3aae4 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_a8c5ce6cdd99c93be94d16a11e350aa3 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_9c1f5dbc74870c08fc8b27971a9b443a = L.popup({
  "maxWidth": 300,
});

        
            
                var html_cadf706f0c00f66b6765f5312cf85b1c = $(`<div id="html_cadf706f0c00f66b6765f5312cf85b1c" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.91 µg/m³<br>     <b>NO₂:</b> 1.31 µg/m³<br>     <b>SO₂:</b> 1.13 µg/m³<br>     </div>`)[0];
                popup_9c1f5dbc74870c08fc8b27971a9b443a.setContent(html_cadf706f0c00f66b6765f5312cf85b1c);
            
        

        marker_22bebb51a1b42fd65c9fa7c1a2d3aae4.bindPopup(popup_9c1f5dbc74870c08fc8b27971a9b443a)
        ;

        
    
    
                marker_22bebb51a1b42fd65c9fa7c1a2d3aae4.setIcon(icon_a8c5ce6cdd99c93be94d16a11e350aa3);
            
    
            var marker_6d18c321378da2abeb3b270384b0f211 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_32f8ff1c09af7e967e5780f4ae06ebd3 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_199435ce109c5f34cea3e02e66319a81 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_1084f9c1f33d5b6190ad890d61e658be = $(`<div id="html_1084f9c1f33d5b6190ad890d61e658be" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.53 µg/m³<br>     <b>NO₂:</b> 0.89 µg/m³<br>     <b>SO₂:</b> 0.73 µg/m³<br>     </div>`)[0];
                popup_199435ce109c5f34cea3e02e66319a81.setContent(html_1084f9c1f33d5b6190ad890d61e658be);
            
        

        marker_6d18c321378da2abeb3b270384b0f211.bindPopup(popup_199435ce109c5f34cea3e02e66319a81)
        ;

        
    
    
                marker_6d18c321378da2abeb3b270384b0f211.setIcon(icon_32f8ff1c09af7e967e5780f4ae06ebd3);
            
    
            var marker_f14d56baad644a91ed5c1dd8dbfa9135 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_85ed912f02c2b4063b0dca7876d108f8 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_984ac0ac6a12bfc03c665fc3cdd756e7 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_448aa33ddc99ada0ae7c91e66596eb74 = $(`<div id="html_448aa33ddc99ada0ae7c91e66596eb74" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.73 µg/m³<br>     <b>NO₂:</b> 0.18 µg/m³<br>     <b>SO₂:</b> -0.47 µg/m³<br>     </div>`)[0];
                popup_984ac0ac6a12bfc03c665fc3cdd756e7.setContent(html_448aa33ddc99ada0ae7c91e66596eb74);
            
        

        marker_f14d56baad644a91ed5c1dd8dbfa9135.bindPopup(popup_984ac0ac6a12bfc03c665fc3cdd756e7)
        ;

        
    
    
                marker_f14d56baad644a91ed5c1dd8dbfa9135.setIcon(icon_85ed912f02c2b4063b0dca7876d108f8);
            
    
            var marker_5226b544b9712bd9a4a391100360f65a = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_692755cc8d3ade7170c27e9a541e0ebe = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_eba5a3724f31e4c196b8906f4fc18096 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_01070c49d6f923722f7f69492a70dda8 = $(`<div id="html_01070c49d6f923722f7f69492a70dda8" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.78 µg/m³<br>     <b>NO₂:</b> -0.28 µg/m³<br>     <b>SO₂:</b> -0.47 µg/m³<br>     </div>`)[0];
                popup_eba5a3724f31e4c196b8906f4fc18096.setContent(html_01070c49d6f923722f7f69492a70dda8);
            
        

        marker_5226b544b9712bd9a4a391100360f65a.bindPopup(popup_eba5a3724f31e4c196b8906f4fc18096)
        ;

        
    
    
                marker_5226b544b9712bd9a4a391100360f65a.setIcon(icon_692755cc8d3ade7170c27e9a541e0ebe);
            
    
            var marker_6bf64c06a31c10a14f6ec22981f8add7 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_d63697a9d6a2fa31ce9bc5ad7b15d17b = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_c8c6f1ad6bedccd5b7864e4cec87ff4c = L.popup({
  "maxWidth": 300,
});

        
            
                var html_20d17727e5fe981fb137368d323ebc9b = $(`<div id="html_20d17727e5fe981fb137368d323ebc9b" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.00 µg/m³<br>     <b>NO₂:</b> 0.86 µg/m³<br>     <b>SO₂:</b> 0.54 µg/m³<br>     </div>`)[0];
                popup_c8c6f1ad6bedccd5b7864e4cec87ff4c.setContent(html_20d17727e5fe981fb137368d323ebc9b);
            
        

        marker_6bf64c06a31c10a14f6ec22981f8add7.bindPopup(popup_c8c6f1ad6bedccd5b7864e4cec87ff4c)
        ;

        
    
    
                marker_6bf64c06a31c10a14f6ec22981f8add7.setIcon(icon_d63697a9d6a2fa31ce9bc5ad7b15d17b);
            
    
            var marker_d02e04678e0e1e2fae37fcfcd7fdc8dc = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_62f54ad952d00857282e9b7553f40761 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_85c53f3fc0c5b99eac14db7a2e3d214a = L.popup({
  "maxWidth": 300,
});

        
            
                var html_93b15ee2b1812b29d40faee034f68d2e = $(`<div id="html_93b15ee2b1812b29d40faee034f68d2e" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 0.69 µg/m³<br>     <b>NO₂:</b> 2.19 µg/m³<br>     <b>SO₂:</b> 0.15 µg/m³<br>     </div>`)[0];
                popup_85c53f3fc0c5b99eac14db7a2e3d214a.setContent(html_93b15ee2b1812b29d40faee034f68d2e);
            
        

        marker_d02e04678e0e1e2fae37fcfcd7fdc8dc.bindPopup(popup_85c53f3fc0c5b99eac14db7a2e3d214a)
        ;

        
    
    
                marker_d02e04678e0e1e2fae37fcfcd7fdc8dc.setIcon(icon_62f54ad952d00857282e9b7553f40761);
            
    
            var marker_999a205180770f8617232a170a2daa71 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_a36be90ab41ca9a3b645ce3fb0917cd6 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_b0e1ed95d99e44588ef83ac6a8b0f207 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_811a4c258d5ce84f71acfb3f8f4e4d12 = $(`<div id="html_811a4c258d5ce84f71acfb3f8f4e4d12" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.60 µg/m³<br>     <b>NO₂:</b> 2.08 µg/m³<br>     <b>SO₂:</b> 1.94 µg/m³<br>     </div>`)[0];
                popup_b0e1ed95d99e44588ef83ac6a8b0f207.setContent(html_811a4c258d5ce84f71acfb3f8f4e4d12);
            
        

        marker_999a205180770f8617232a170a2daa71.bindPopup(popup_b0e1ed95d99e44588ef83ac6a8b0f207)
        ;

        
    
    
                marker_999a205180770f8617232a170a2daa71.setIcon(icon_a36be90ab41ca9a3b645ce3fb0917cd6);
            
    
            var marker_c98498da629910ca1bd17e21939babe6 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_e609250199d22d0c82c4015d0be69713 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_a807b0a9ac9481457249ad578754c4ac = L.popup({
  "maxWidth": 300,
});

        
            
                var html_940c4ac6edae44c6509bf5ef1f2b7879 = $(`<div id="html_940c4ac6edae44c6509bf5ef1f2b7879" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 2.79 µg/m³<br>     <b>NO₂:</b> 3.22 µg/m³<br>     <b>SO₂:</b> 3.93 µg/m³<br>     </div>`)[0];
                popup_a807b0a9ac9481457249ad578754c4ac.setContent(html_940c4ac6edae44c6509bf5ef1f2b7879);
            
        

        marker_c98498da629910ca1bd17e21939babe6.bindPopup(popup_a807b0a9ac9481457249ad578754c4ac)
        ;

        
    
    
                marker_c98498da629910ca1bd17e21939babe6.setIcon(icon_e609250199d22d0c82c4015d0be69713);
            
    
            var marker_8d223dba8447fba0e8e0aab7ec5080ce = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_67f78f986817d2950fe6d1ae2a4b8743 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_6ed9995777e96dc7e0d38e6b1bfe68cd = L.popup({
  "maxWidth": 300,
});

        
            
                var html_4a99805620ec141e8224828547568fa4 = $(`<div id="html_4a99805620ec141e8224828547568fa4" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 1.95 µg/m³<br>     <b>NO₂:</b> 2.63 µg/m³<br>     <b>SO₂:</b> 1.37 µg/m³<br>     </div>`)[0];
                popup_6ed9995777e96dc7e0d38e6b1bfe68cd.setContent(html_4a99805620ec141e8224828547568fa4);
            
        

        marker_8d223dba8447fba0e8e0aab7ec5080ce.bindPopup(popup_6ed9995777e96dc7e0d38e6b1bfe68cd)
        ;

        
    
    
                marker_8d223dba8447fba0e8e0aab7ec5080ce.setIcon(icon_67f78f986817d2950fe6d1ae2a4b8743);
            
    
            var marker_c7a50b6d808e7cc405caef1fd6562bfd = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_3c4c43965e9d3f1eb79e0c5347b452de = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_d77afb39457de368b2cc430953a4a650 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_b750cd5090ecebf5e2f96177da63ee87 = $(`<div id="html_b750cd5090ecebf5e2f96177da63ee87" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.23 µg/m³<br>     <b>NO₂:</b> 0.92 µg/m³<br>     <b>SO₂:</b> -0.12 µg/m³<br>     </div>`)[0];
                popup_d77afb39457de368b2cc430953a4a650.setContent(html_b750cd5090ecebf5e2f96177da63ee87);
            
        

        marker_c7a50b6d808e7cc405caef1fd6562bfd.bindPopup(popup_d77afb39457de368b2cc430953a4a650)
        ;

        
    
    
                marker_c7a50b6d808e7cc405caef1fd6562bfd.setIcon(icon_3c4c43965e9d3f1eb79e0c5347b452de);
            
    
            var marker_6a05f2ed63d25ed9ef56dac4b2746d7e = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_3f638088ee046f381071db83c15d2a01 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_95434d3117fe78245a8ecf134d569d96 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_9ec2fc5d9023db6737740cf4b0213fd6 = $(`<div id="html_9ec2fc5d9023db6737740cf4b0213fd6" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.16 µg/m³<br>     <b>NO₂:</b> 2.40 µg/m³<br>     <b>SO₂:</b> 0.51 µg/m³<br>     </div>`)[0];
                popup_95434d3117fe78245a8ecf134d569d96.setContent(html_9ec2fc5d9023db6737740cf4b0213fd6);
            
        

        marker_6a05f2ed63d25ed9ef56dac4b2746d7e.bindPopup(popup_95434d3117fe78245a8ecf134d569d96)
        ;

        
    
    
                marker_6a05f2ed63d25ed9ef56dac4b2746d7e.setIcon(icon_3f638088ee046f381071db83c15d2a01);
            
    
            var marker_bc6a768077aa4108f6dc2a4c4e0fdbeb = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_c8e93c96dc437401e63aa44c2a169a9f = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_378e87235e39e3666f2578f78b7f0873 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_13e7e82a72fac63ef319e2227f8497df = $(`<div id="html_13e7e82a72fac63ef319e2227f8497df" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.62 µg/m³<br>     <b>NO₂:</b> 2.18 µg/m³<br>     <b>SO₂:</b> 2.00 µg/m³<br>     </div>`)[0];
                popup_378e87235e39e3666f2578f78b7f0873.setContent(html_13e7e82a72fac63ef319e2227f8497df);
            
        

        marker_bc6a768077aa4108f6dc2a4c4e0fdbeb.bindPopup(popup_378e87235e39e3666f2578f78b7f0873)
        ;

        
    
    
                marker_bc6a768077aa4108f6dc2a4c4e0fdbeb.setIcon(icon_c8e93c96dc437401e63aa44c2a169a9f);
            
    
            var marker_30bb91a9ab050a312400706c90713204 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_f53bb8b7125f4e6d9660c0427661a274 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_8858aa105dd4b6c2285f63e867a8cb45 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_a86b06ad06e47845a14079e0ea6a6a75 = $(`<div id="html_a86b06ad06e47845a14079e0ea6a6a75" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 0.99 µg/m³<br>     <b>NO₂:</b> 2.48 µg/m³<br>     <b>SO₂:</b> 0.40 µg/m³<br>     </div>`)[0];
                popup_8858aa105dd4b6c2285f63e867a8cb45.setContent(html_a86b06ad06e47845a14079e0ea6a6a75);
            
        

        marker_30bb91a9ab050a312400706c90713204.bindPopup(popup_8858aa105dd4b6c2285f63e867a8cb45)
        ;

        
    
    
                marker_30bb91a9ab050a312400706c90713204.setIcon(icon_f53bb8b7125f4e6d9660c0427661a274);
            
    
            var marker_fbb449291b7f87b70eee76d70337427b = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_d21469a3e89502a629250d074d891a17 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_fcc78f3aedd1737b72812d267bdb8199 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_1418d03343bea4f06c93209fb2413824 = $(`<div id="html_1418d03343bea4f06c93209fb2413824" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.34 µg/m³<br>     <b>NO₂:</b> 0.45 µg/m³<br>     <b>SO₂:</b> -0.26 µg/m³<br>     </div>`)[0];
                popup_fcc78f3aedd1737b72812d267bdb8199.setContent(html_1418d03343bea4f06c93209fb2413824);
            
        

        marker_fbb449291b7f87b70eee76d70337427b.bindPopup(popup_fcc78f3aedd1737b72812d267bdb8199)
        ;

        
    
    
                marker_fbb449291b7f87b70eee76d70337427b.setIcon(icon_d21469a3e89502a629250d074d891a17);
            
    
            var marker_24ad00a399fe15b4c98df10b07329279 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_a69197ba2e013f209fb7da2fb0b81c2c = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_666e4ef708b56e11a7c7f8ed05de2f97 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_d1564af93bdf58c944327193fadc0d98 = $(`<div id="html_d1564af93bdf58c944327193fadc0d98" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 1.00 µg/m³<br>     <b>NO₂:</b> 2.39 µg/m³<br>     <b>SO₂:</b> 0.47 µg/m³<br>     </div>`)[0];
                popup_666e4ef708b56e11a7c7f8ed05de2f97.setContent(html_d1564af93bdf58c944327193fadc0d98);
            
        

        marker_24ad00a399fe15b4c98df10b07329279.bindPopup(popup_666e4ef708b56e11a7c7f8ed05de2f97)
        ;

        
    
    
                marker_24ad00a399fe15b4c98df10b07329279.setIcon(icon_a69197ba2e013f209fb7da2fb0b81c2c);
            
    
            var marker_154e0f877a8d52fad7421079a0a9d7e0 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_a284790701218bef7eaed2b95069c6d3 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_c5f401b950dce879756cf90c47ff0f29 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_96cc1c7fea94079e2448717a1c6d382a = $(`<div id="html_96cc1c7fea94079e2448717a1c6d382a" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.58 µg/m³<br>     <b>NO₂:</b> 0.95 µg/m³<br>     <b>SO₂:</b> 0.88 µg/m³<br>     </div>`)[0];
                popup_c5f401b950dce879756cf90c47ff0f29.setContent(html_96cc1c7fea94079e2448717a1c6d382a);
            
        

        marker_154e0f877a8d52fad7421079a0a9d7e0.bindPopup(popup_c5f401b950dce879756cf90c47ff0f29)
        ;

        
    
    
                marker_154e0f877a8d52fad7421079a0a9d7e0.setIcon(icon_a284790701218bef7eaed2b95069c6d3);
            
    
            var marker_9fc7460ee852e0cdf451b08b0110b125 = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_8c7cf69deeff6a1b1dcb2933dd1dae29 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_4e5049f18c5a62a0850874724faa5b35 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_6eab174f26ba868a33e769f4a43588a9 = $(`<div id="html_6eab174f26ba868a33e769f4a43588a9" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.78 µg/m³<br>     <b>NO₂:</b> -0.18 µg/m³<br>     <b>SO₂:</b> -0.42 µg/m³<br>     </div>`)[0];
                popup_4e5049f18c5a62a0850874724faa5b35.setContent(html_6eab174f26ba868a33e769f4a43588a9);
            
        

        marker_9fc7460ee852e0cdf451b08b0110b125.bindPopup(popup_4e5049f18c5a62a0850874724faa5b35)
        ;

        
    
    
                marker_9fc7460ee852e0cdf451b08b0110b125.setIcon(icon_8c7cf69deeff6a1b1dcb2933dd1dae29);
            
    
            var marker_467055f42f8b4b419e8fc5ff4f2b4f5c = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_4b7862ad5a63258b31fa9bb1da17bbcf = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_4b5d306e6d67d3d640f88aa8bbd3a202 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_d47d004c3859c956f7dfa0c8a9d0186d = $(`<div id="html_d47d004c3859c956f7dfa0c8a9d0186d" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.58 µg/m³<br>     <b>NO₂:</b> 1.64 µg/m³<br>     <b>SO₂:</b> 1.74 µg/m³<br>     </div>`)[0];
                popup_4b5d306e6d67d3d640f88aa8bbd3a202.setContent(html_d47d004c3859c956f7dfa0c8a9d0186d);
            
        

        marker_467055f42f8b4b419e8fc5ff4f2b4f5c.bindPopup(popup_4b5d306e6d67d3d640f88aa8bbd3a202)
        ;

        
    
    
                marker_467055f42f8b4b419e8fc5ff4f2b4f5c.setIcon(icon_4b7862ad5a63258b31fa9bb1da17bbcf);
            
    
            var marker_53db86fbdd46d87d791d366191b81101 = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_3366779987f6d72d81ff80945cb1cfbb = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_f1b4c0469d140a1c52c52a52f202b912 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_ca51cd00102e598cb5f8d8361f84d34b = $(`<div id="html_ca51cd00102e598cb5f8d8361f84d34b" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> 1.31 µg/m³<br>     <b>NO₂:</b> 1.28 µg/m³<br>     <b>SO₂:</b> 2.56 µg/m³<br>     </div>`)[0];
                popup_f1b4c0469d140a1c52c52a52f202b912.setContent(html_ca51cd00102e598cb5f8d8361f84d34b);
            
        

        marker_53db86fbdd46d87d791d366191b81101.bindPopup(popup_f1b4c0469d140a1c52c52a52f202b912)
        ;

        
    
    
                marker_53db86fbdd46d87d791d366191b81101.setIcon(icon_3366779987f6d72d81ff80945cb1cfbb);
            
    
            var marker_ec3967ea365af7819cd551a6c519089e = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_ca9d1a726ad8cc0e0363fb8b5f2f28cc = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_b7a6abfbf9f0a844b314459b938bb3dd = L.popup({
  "maxWidth": 300,
});

        
            
                var html_89789c62c2631f7ce44c8ca9259a8018 = $(`<div id="html_89789c62c2631f7ce44c8ca9259a8018" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.79 µg/m³<br>     <b>NO₂:</b> 3.12 µg/m³<br>     <b>SO₂:</b> 2.24 µg/m³<br>     </div>`)[0];
                popup_b7a6abfbf9f0a844b314459b938bb3dd.setContent(html_89789c62c2631f7ce44c8ca9259a8018);
            
        

        marker_ec3967ea365af7819cd551a6c519089e.bindPopup(popup_b7a6abfbf9f0a844b314459b938bb3dd)
        ;

        
    
    
                marker_ec3967ea365af7819cd551a6c519089e.setIcon(icon_ca9d1a726ad8cc0e0363fb8b5f2f28cc);
            
    
            var marker_8bf32bd6a54b28c38035331419b2703a = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_a2fccab97b6c2af62cc6bc70c06d8c5a = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_a3c05a634c05c84476ee7160231212a3 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_4a96ec718b8b0135f35af8e55a355950 = $(`<div id="html_4a96ec718b8b0135f35af8e55a355950" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 1.94 µg/m³<br>     <b>NO₂:</b> 2.64 µg/m³<br>     <b>SO₂:</b> 1.36 µg/m³<br>     </div>`)[0];
                popup_a3c05a634c05c84476ee7160231212a3.setContent(html_4a96ec718b8b0135f35af8e55a355950);
            
        

        marker_8bf32bd6a54b28c38035331419b2703a.bindPopup(popup_a3c05a634c05c84476ee7160231212a3)
        ;

        
    
    
                marker_8bf32bd6a54b28c38035331419b2703a.setIcon(icon_a2fccab97b6c2af62cc6bc70c06d8c5a);
            
    
            var marker_872d8e075609533e27abb849e9b89693 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_7bd9b90e21d31a1954bcc69a9e9032dc = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_1b2ab69b17975c050e9af6b933687455 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_132f65678480b96c4375c727184c5e08 = $(`<div id="html_132f65678480b96c4375c727184c5e08" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 0.09 µg/m³<br>     <b>NO₂:</b> -0.81 µg/m³<br>     <b>SO₂:</b> -0.81 µg/m³<br>     </div>`)[0];
                popup_1b2ab69b17975c050e9af6b933687455.setContent(html_132f65678480b96c4375c727184c5e08);
            
        

        marker_872d8e075609533e27abb849e9b89693.bindPopup(popup_1b2ab69b17975c050e9af6b933687455)
        ;

        
    
    
                marker_872d8e075609533e27abb849e9b89693.setIcon(icon_7bd9b90e21d31a1954bcc69a9e9032dc);
            
    
            var marker_b4270569f3a840a7a97eb95fb9ebc0bf = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_f4d477f0189a2c907bc537968ad6ee90 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_82a72a79be6f5385935f0c0688624e5b = L.popup({
  "maxWidth": 300,
});

        
            
                var html_f1d87c02d5b0de4428200536767d8529 = $(`<div id="html_f1d87c02d5b0de4428200536767d8529" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.63 µg/m³<br>     <b>NO₂:</b> 1.31 µg/m³<br>     <b>SO₂:</b> 1.91 µg/m³<br>     </div>`)[0];
                popup_82a72a79be6f5385935f0c0688624e5b.setContent(html_f1d87c02d5b0de4428200536767d8529);
            
        

        marker_b4270569f3a840a7a97eb95fb9ebc0bf.bindPopup(popup_82a72a79be6f5385935f0c0688624e5b)
        ;

        
    
    
                marker_b4270569f3a840a7a97eb95fb9ebc0bf.setIcon(icon_f4d477f0189a2c907bc537968ad6ee90);
            
    
            var marker_ba99476cee1c5c878590e11397ea62d0 = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_855dd4b31e9e64259804ae5034ba4ed1 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_15133e8a36a63b58c8669e7e6a987958 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_e21537fdb559ea495739a1d781f330f1 = $(`<div id="html_e21537fdb559ea495739a1d781f330f1" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.84 µg/m³<br>     <b>NO₂:</b> -0.18 µg/m³<br>     <b>SO₂:</b> -0.31 µg/m³<br>     </div>`)[0];
                popup_15133e8a36a63b58c8669e7e6a987958.setContent(html_e21537fdb559ea495739a1d781f330f1);
            
        

        marker_ba99476cee1c5c878590e11397ea62d0.bindPopup(popup_15133e8a36a63b58c8669e7e6a987958)
        ;

        
    
    
                marker_ba99476cee1c5c878590e11397ea62d0.setIcon(icon_855dd4b31e9e64259804ae5034ba4ed1);
            
    
            var marker_4dddf3c3444b0b1c2f240986bcb57883 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_dabb3c60f6ad7e2acfaa997fff108b6c = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_824a1d6131b92f8ce5557e391400a4e4 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_b564daa4890a47e8ea535af93ddd9465 = $(`<div id="html_b564daa4890a47e8ea535af93ddd9465" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> -0.62 µg/m³<br>     <b>NO₂:</b> 0.28 µg/m³<br>     <b>SO₂:</b> -0.51 µg/m³<br>     </div>`)[0];
                popup_824a1d6131b92f8ce5557e391400a4e4.setContent(html_b564daa4890a47e8ea535af93ddd9465);
            
        

        marker_4dddf3c3444b0b1c2f240986bcb57883.bindPopup(popup_824a1d6131b92f8ce5557e391400a4e4)
        ;

        
    
    
                marker_4dddf3c3444b0b1c2f240986bcb57883.setIcon(icon_dabb3c60f6ad7e2acfaa997fff108b6c);
            
    
            var marker_2376150799d85d6840f03ec0b05636c4 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_3d7a1241e87508669d731c85cd4bbd14 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_ae65b263fc1ded29562db684f19cc4f4 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_114800c3e3186d9b833516617063d733 = $(`<div id="html_114800c3e3186d9b833516617063d733" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.75 µg/m³<br>     <b>NO₂:</b> 1.64 µg/m³<br>     <b>SO₂:</b> 2.35 µg/m³<br>     </div>`)[0];
                popup_ae65b263fc1ded29562db684f19cc4f4.setContent(html_114800c3e3186d9b833516617063d733);
            
        

        marker_2376150799d85d6840f03ec0b05636c4.bindPopup(popup_ae65b263fc1ded29562db684f19cc4f4)
        ;

        
    
    
                marker_2376150799d85d6840f03ec0b05636c4.setIcon(icon_3d7a1241e87508669d731c85cd4bbd14);
            
    
            var marker_c4f50404997f26e07c270fca84b08911 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_c559df13123fd4b556198f5b7279683a = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_d27850b9de9fb994586d5417447d42a4 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_9b2347a70ba4baed1669c0451771d13f = $(`<div id="html_9b2347a70ba4baed1669c0451771d13f" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 1.56 µg/m³<br>     <b>NO₂:</b> 2.86 µg/m³<br>     <b>SO₂:</b> 1.20 µg/m³<br>     </div>`)[0];
                popup_d27850b9de9fb994586d5417447d42a4.setContent(html_9b2347a70ba4baed1669c0451771d13f);
            
        

        marker_c4f50404997f26e07c270fca84b08911.bindPopup(popup_d27850b9de9fb994586d5417447d42a4)
        ;

        
    
    
                marker_c4f50404997f26e07c270fca84b08911.setIcon(icon_c559df13123fd4b556198f5b7279683a);
            
    
            var marker_ac43d8f9a97c4533b67195bbb6459a67 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_925e8b777d55b89cdebc266a317cc20e = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_7bd6a589827ed97b6fbfa0a635bf863b = L.popup({
  "maxWidth": 300,
});

        
            
                var html_86785cb2cb1dbf44252ebcdf66a3482a = $(`<div id="html_86785cb2cb1dbf44252ebcdf66a3482a" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.53 µg/m³<br>     <b>NO₂:</b> 1.66 µg/m³<br>     <b>SO₂:</b> 1.78 µg/m³<br>     </div>`)[0];
                popup_7bd6a589827ed97b6fbfa0a635bf863b.setContent(html_86785cb2cb1dbf44252ebcdf66a3482a);
            
        

        marker_ac43d8f9a97c4533b67195bbb6459a67.bindPopup(popup_7bd6a589827ed97b6fbfa0a635bf863b)
        ;

        
    
    
                marker_ac43d8f9a97c4533b67195bbb6459a67.setIcon(icon_925e8b777d55b89cdebc266a317cc20e);
            
    
            var marker_734bd85faa85bee5153ec503b2247b9e = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_244108241b1cdc1f9adf9124102c77c3 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_b82c6e12691a6fafc54dcc52c9f71656 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_7189b5cb70180c7ee16b25e67a30dc7e = $(`<div id="html_7189b5cb70180c7ee16b25e67a30dc7e" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 1.20 µg/m³<br>     <b>NO₂:</b> 2.57 µg/m³<br>     <b>SO₂:</b> 0.72 µg/m³<br>     </div>`)[0];
                popup_b82c6e12691a6fafc54dcc52c9f71656.setContent(html_7189b5cb70180c7ee16b25e67a30dc7e);
            
        

        marker_734bd85faa85bee5153ec503b2247b9e.bindPopup(popup_b82c6e12691a6fafc54dcc52c9f71656)
        ;

        
    
    
                marker_734bd85faa85bee5153ec503b2247b9e.setIcon(icon_244108241b1cdc1f9adf9124102c77c3);
            
    
            var marker_911627649a113cce244f4711263a9966 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_e21d344744b7ca9645419cdb40ef9fca = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_f550ac4b7f8d472d8c0337dff50f01af = L.popup({
  "maxWidth": 300,
});

        
            
                var html_1baed7628d15588a5857b0fd0254e161 = $(`<div id="html_1baed7628d15588a5857b0fd0254e161" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.82 µg/m³<br>     <b>NO₂:</b> 2.29 µg/m³<br>     <b>SO₂:</b> 2.27 µg/m³<br>     </div>`)[0];
                popup_f550ac4b7f8d472d8c0337dff50f01af.setContent(html_1baed7628d15588a5857b0fd0254e161);
            
        

        marker_911627649a113cce244f4711263a9966.bindPopup(popup_f550ac4b7f8d472d8c0337dff50f01af)
        ;

        
    
    
                marker_911627649a113cce244f4711263a9966.setIcon(icon_e21d344744b7ca9645419cdb40ef9fca);
            
    
            var marker_c8aae5b6ebff44fe5e6cb1cc234048e4 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_86bf5c2bb362176fe4cc05a1322a0b36 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_1e459b60762a3dda9fd95d0ae6239903 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_afd80c60d63d68b6de7cdb0b9fc597de = $(`<div id="html_afd80c60d63d68b6de7cdb0b9fc597de" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 0.35 µg/m³<br>     <b>NO₂:</b> 0.09 µg/m³<br>     <b>SO₂:</b> -0.30 µg/m³<br>     </div>`)[0];
                popup_1e459b60762a3dda9fd95d0ae6239903.setContent(html_afd80c60d63d68b6de7cdb0b9fc597de);
            
        

        marker_c8aae5b6ebff44fe5e6cb1cc234048e4.bindPopup(popup_1e459b60762a3dda9fd95d0ae6239903)
        ;

        
    
    
                marker_c8aae5b6ebff44fe5e6cb1cc234048e4.setIcon(icon_86bf5c2bb362176fe4cc05a1322a0b36);
            
    
            var marker_1ba8f267b41a185b447a81a19bca0316 = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_bb91558d594b44e04a9be1dfbcf4b690 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_1072ba6c90f9d62508b0a6be81d0cf11 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_a91dc9fddee95e1beb8d805208621b04 = $(`<div id="html_a91dc9fddee95e1beb8d805208621b04" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.68 µg/m³<br>     <b>NO₂:</b> -0.23 µg/m³<br>     <b>SO₂:</b> 0.07 µg/m³<br>     </div>`)[0];
                popup_1072ba6c90f9d62508b0a6be81d0cf11.setContent(html_a91dc9fddee95e1beb8d805208621b04);
            
        

        marker_1ba8f267b41a185b447a81a19bca0316.bindPopup(popup_1072ba6c90f9d62508b0a6be81d0cf11)
        ;

        
    
    
                marker_1ba8f267b41a185b447a81a19bca0316.setIcon(icon_bb91558d594b44e04a9be1dfbcf4b690);
            
    
            var marker_e8081b6ca6600b2b4331dea2cd76992c = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_43727ab00e02897217dff67c2f08ba7d = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_959ec65586bbc9b7f316a2d5a3c5dabb = L.popup({
  "maxWidth": 300,
});

        
            
                var html_f0c41aa58512fd945302ddc1ef06dea0 = $(`<div id="html_f0c41aa58512fd945302ddc1ef06dea0" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 0.15 µg/m³<br>     <b>NO₂:</b> -0.24 µg/m³<br>     <b>SO₂:</b> -0.55 µg/m³<br>     </div>`)[0];
                popup_959ec65586bbc9b7f316a2d5a3c5dabb.setContent(html_f0c41aa58512fd945302ddc1ef06dea0);
            
        

        marker_e8081b6ca6600b2b4331dea2cd76992c.bindPopup(popup_959ec65586bbc9b7f316a2d5a3c5dabb)
        ;

        
    
    
                marker_e8081b6ca6600b2b4331dea2cd76992c.setIcon(icon_43727ab00e02897217dff67c2f08ba7d);
            
    
            var marker_88702baec21b5ad1add2238fbc5ac578 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_309cad3fb7df918155d423f098b0e62e = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_af1a0f05bdd224483162e5000223a852 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_bfb5bdc565720a3e9b7bbf6d71b84c7d = $(`<div id="html_bfb5bdc565720a3e9b7bbf6d71b84c7d" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 0.21 µg/m³<br>     <b>NO₂:</b> -0.46 µg/m³<br>     <b>SO₂:</b> -0.38 µg/m³<br>     </div>`)[0];
                popup_af1a0f05bdd224483162e5000223a852.setContent(html_bfb5bdc565720a3e9b7bbf6d71b84c7d);
            
        

        marker_88702baec21b5ad1add2238fbc5ac578.bindPopup(popup_af1a0f05bdd224483162e5000223a852)
        ;

        
    
    
                marker_88702baec21b5ad1add2238fbc5ac578.setIcon(icon_309cad3fb7df918155d423f098b0e62e);
            
    
            var marker_b9e9783dcc07dd58ce46ed4c7db0eaf1 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_9b6f9cdc53af589721b8d7e5ff056a79 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_576b7c1286cabbdc31dbc9df624db672 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_069dc3be1266c175e9d093b6f2bdba05 = $(`<div id="html_069dc3be1266c175e9d093b6f2bdba05" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.57 µg/m³<br>     <b>NO₂:</b> 2.52 µg/m³<br>     <b>SO₂:</b> 1.76 µg/m³<br>     </div>`)[0];
                popup_576b7c1286cabbdc31dbc9df624db672.setContent(html_069dc3be1266c175e9d093b6f2bdba05);
            
        

        marker_b9e9783dcc07dd58ce46ed4c7db0eaf1.bindPopup(popup_576b7c1286cabbdc31dbc9df624db672)
        ;

        
    
    
                marker_b9e9783dcc07dd58ce46ed4c7db0eaf1.setIcon(icon_9b6f9cdc53af589721b8d7e5ff056a79);
            
    
            var marker_548c666e26680b834ff1f0a11a8f80ea = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_1a40c81bcde7d3498d909643ec5a6b12 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_900de616f389459d8cd698d26734c47d = L.popup({
  "maxWidth": 300,
});

        
            
                var html_5ee0cdac8ac3422cc570be2d5fadf7ba = $(`<div id="html_5ee0cdac8ac3422cc570be2d5fadf7ba" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.79 µg/m³<br>     <b>NO₂:</b> 1.98 µg/m³<br>     <b>SO₂:</b> 1.74 µg/m³<br>     </div>`)[0];
                popup_900de616f389459d8cd698d26734c47d.setContent(html_5ee0cdac8ac3422cc570be2d5fadf7ba);
            
        

        marker_548c666e26680b834ff1f0a11a8f80ea.bindPopup(popup_900de616f389459d8cd698d26734c47d)
        ;

        
    
    
                marker_548c666e26680b834ff1f0a11a8f80ea.setIcon(icon_1a40c81bcde7d3498d909643ec5a6b12);
            
    
            var marker_a2f268d0329ebc3039c47cd86f732405 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_b7877e85641a4ec3082007337338d83e = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_8b5a9e8a1b3e4b495fedb8f8c4d73ed7 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_862cc178033c7adb6c3df091e17103e5 = $(`<div id="html_862cc178033c7adb6c3df091e17103e5" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.29 µg/m³<br>     <b>NO₂:</b> 2.24 µg/m³<br>     <b>SO₂:</b> 1.14 µg/m³<br>     </div>`)[0];
                popup_8b5a9e8a1b3e4b495fedb8f8c4d73ed7.setContent(html_862cc178033c7adb6c3df091e17103e5);
            
        

        marker_a2f268d0329ebc3039c47cd86f732405.bindPopup(popup_8b5a9e8a1b3e4b495fedb8f8c4d73ed7)
        ;

        
    
    
                marker_a2f268d0329ebc3039c47cd86f732405.setIcon(icon_b7877e85641a4ec3082007337338d83e);
            
    
            var marker_5c92d32d3ecfd62cb1b7059040ea4119 = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_2f32e88b3dd0b7097bd5520a3548c37c = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_e5cce26b4cb49a419b47002494e11832 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_d9a0fb5e133e99ed78c73b985182ad6f = $(`<div id="html_d9a0fb5e133e99ed78c73b985182ad6f" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.64 µg/m³<br>     <b>NO₂:</b> 0.18 µg/m³<br>     <b>SO₂:</b> 0.08 µg/m³<br>     </div>`)[0];
                popup_e5cce26b4cb49a419b47002494e11832.setContent(html_d9a0fb5e133e99ed78c73b985182ad6f);
            
        

        marker_5c92d32d3ecfd62cb1b7059040ea4119.bindPopup(popup_e5cce26b4cb49a419b47002494e11832)
        ;

        
    
    
                marker_5c92d32d3ecfd62cb1b7059040ea4119.setIcon(icon_2f32e88b3dd0b7097bd5520a3548c37c);
            
    
            var marker_5d7871f3ce3f3c9d71ebbd3ef8923dfb = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_0fe7284cf124998365892a8144651756 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_727cc70d7d66b5bb9247795227a3d20d = L.popup({
  "maxWidth": 300,
});

        
            
                var html_06ef52f561117caf7e391811949faade = $(`<div id="html_06ef52f561117caf7e391811949faade" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.41 µg/m³<br>     <b>NO₂:</b> 2.43 µg/m³<br>     <b>SO₂:</b> 3.07 µg/m³<br>     </div>`)[0];
                popup_727cc70d7d66b5bb9247795227a3d20d.setContent(html_06ef52f561117caf7e391811949faade);
            
        

        marker_5d7871f3ce3f3c9d71ebbd3ef8923dfb.bindPopup(popup_727cc70d7d66b5bb9247795227a3d20d)
        ;

        
    
    
                marker_5d7871f3ce3f3c9d71ebbd3ef8923dfb.setIcon(icon_0fe7284cf124998365892a8144651756);
            
    
            var marker_132db5386e987224a8df93c6c8d59609 = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_0554ec0e4f7272a7e76bc354bef5b25f = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_004899abd15544aa623376047b6f5641 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_421f32ba96e81cd772dc2fbf30caf10a = $(`<div id="html_421f32ba96e81cd772dc2fbf30caf10a" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> 0.56 µg/m³<br>     <b>NO₂:</b> 1.37 µg/m³<br>     <b>SO₂:</b> 2.44 µg/m³<br>     </div>`)[0];
                popup_004899abd15544aa623376047b6f5641.setContent(html_421f32ba96e81cd772dc2fbf30caf10a);
            
        

        marker_132db5386e987224a8df93c6c8d59609.bindPopup(popup_004899abd15544aa623376047b6f5641)
        ;

        
    
    
                marker_132db5386e987224a8df93c6c8d59609.setIcon(icon_0554ec0e4f7272a7e76bc354bef5b25f);
            
    
            var marker_375dd479283320940378144048069fbd = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_7277bc6cd97a4a9c2c05e04fb578d367 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_3944fc2955ecfe60f8bee4fdbf6e72e1 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_56c9e0de677510e81f003040fc8a18b8 = $(`<div id="html_56c9e0de677510e81f003040fc8a18b8" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 1.02 µg/m³<br>     <b>NO₂:</b> 2.37 µg/m³<br>     <b>SO₂:</b> 0.52 µg/m³<br>     </div>`)[0];
                popup_3944fc2955ecfe60f8bee4fdbf6e72e1.setContent(html_56c9e0de677510e81f003040fc8a18b8);
            
        

        marker_375dd479283320940378144048069fbd.bindPopup(popup_3944fc2955ecfe60f8bee4fdbf6e72e1)
        ;

        
    
    
                marker_375dd479283320940378144048069fbd.setIcon(icon_7277bc6cd97a4a9c2c05e04fb578d367);
            
    
            var marker_5500ef210adf062a126ed1cff02fcb49 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_30e846e958646203d3b2661fdbeac389 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_7dc47b92a9506b954d53a7de9ff6b746 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_599063270c2e398ef5a3f9dc88c28b4f = $(`<div id="html_599063270c2e398ef5a3f9dc88c28b4f" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.71 µg/m³<br>     <b>NO₂:</b> 1.55 µg/m³<br>     <b>SO₂:</b> 2.19 µg/m³<br>     </div>`)[0];
                popup_7dc47b92a9506b954d53a7de9ff6b746.setContent(html_599063270c2e398ef5a3f9dc88c28b4f);
            
        

        marker_5500ef210adf062a126ed1cff02fcb49.bindPopup(popup_7dc47b92a9506b954d53a7de9ff6b746)
        ;

        
    
    
                marker_5500ef210adf062a126ed1cff02fcb49.setIcon(icon_30e846e958646203d3b2661fdbeac389);
            
    
            var marker_02e06c2ba8b542a68b6598ab7b25d856 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_ebea573a396265697f992122cc3b20c2 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_f0b25bf22cae7a86e729b50f39423592 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_d9b3c56cc3d7980382256cc93b88b924 = $(`<div id="html_d9b3c56cc3d7980382256cc93b88b924" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.80 µg/m³<br>     <b>NO₂:</b> 2.23 µg/m³<br>     <b>SO₂:</b> 0.57 µg/m³<br>     </div>`)[0];
                popup_f0b25bf22cae7a86e729b50f39423592.setContent(html_d9b3c56cc3d7980382256cc93b88b924);
            
        

        marker_02e06c2ba8b542a68b6598ab7b25d856.bindPopup(popup_f0b25bf22cae7a86e729b50f39423592)
        ;

        
    
    
                marker_02e06c2ba8b542a68b6598ab7b25d856.setIcon(icon_ebea573a396265697f992122cc3b20c2);
            
    
            var marker_937dd57c9946a77986299c1da203258d = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_bc5376a37edda85e4aa936a5d82787b4 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_77ebfca4534918f1a0eb86c52921054a = L.popup({
  "maxWidth": 300,
});

        
            
                var html_903fce19bd11272d9d2c1f382e37a576 = $(`<div id="html_903fce19bd11272d9d2c1f382e37a576" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 1.63 µg/m³<br>     <b>NO₂:</b> 3.22 µg/m³<br>     <b>SO₂:</b> 1.15 µg/m³<br>     </div>`)[0];
                popup_77ebfca4534918f1a0eb86c52921054a.setContent(html_903fce19bd11272d9d2c1f382e37a576);
            
        

        marker_937dd57c9946a77986299c1da203258d.bindPopup(popup_77ebfca4534918f1a0eb86c52921054a)
        ;

        
    
    
                marker_937dd57c9946a77986299c1da203258d.setIcon(icon_bc5376a37edda85e4aa936a5d82787b4);
            
    
            var marker_1a087027d3b5cb7d86bde11832a25648 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_3340f56b0b0746a9b4f7b13c2dc258ec = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_a3da2c22402c5819dcde400696457dfe = L.popup({
  "maxWidth": 300,
});

        
            
                var html_6617c8829ddcb5446479c00abd380501 = $(`<div id="html_6617c8829ddcb5446479c00abd380501" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.29 µg/m³<br>     <b>NO₂:</b> 1.91 µg/m³<br>     <b>SO₂:</b> 0.56 µg/m³<br>     </div>`)[0];
                popup_a3da2c22402c5819dcde400696457dfe.setContent(html_6617c8829ddcb5446479c00abd380501);
            
        

        marker_1a087027d3b5cb7d86bde11832a25648.bindPopup(popup_a3da2c22402c5819dcde400696457dfe)
        ;

        
    
    
                marker_1a087027d3b5cb7d86bde11832a25648.setIcon(icon_3340f56b0b0746a9b4f7b13c2dc258ec);
            
    
            var marker_e234c0ab64c1fc6023b9fc25a4b96c2b = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_c63b9522854e417ad51d8b7bbeef6b1d = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_d28e13e9e97662ab765b42932b151326 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_5deb514efeca9bf19c4ed7d4c194bcce = $(`<div id="html_5deb514efeca9bf19c4ed7d4c194bcce" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 0.78 µg/m³<br>     <b>NO₂:</b> 2.03 µg/m³<br>     <b>SO₂:</b> 0.29 µg/m³<br>     </div>`)[0];
                popup_d28e13e9e97662ab765b42932b151326.setContent(html_5deb514efeca9bf19c4ed7d4c194bcce);
            
        

        marker_e234c0ab64c1fc6023b9fc25a4b96c2b.bindPopup(popup_d28e13e9e97662ab765b42932b151326)
        ;

        
    
    
                marker_e234c0ab64c1fc6023b9fc25a4b96c2b.setIcon(icon_c63b9522854e417ad51d8b7bbeef6b1d);
            
    
            var marker_19f0148cb50090b7d120334e89e9740e = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_482f531cdda7ebb7ed4a9d8ceef45600 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_912e93a58d64d8c8af56dc4617fa7dd7 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_5bec312b11a70418f853dab978478a68 = $(`<div id="html_5bec312b11a70418f853dab978478a68" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 2.73 µg/m³<br>     <b>NO₂:</b> 3.11 µg/m³<br>     <b>SO₂:</b> 3.68 µg/m³<br>     </div>`)[0];
                popup_912e93a58d64d8c8af56dc4617fa7dd7.setContent(html_5bec312b11a70418f853dab978478a68);
            
        

        marker_19f0148cb50090b7d120334e89e9740e.bindPopup(popup_912e93a58d64d8c8af56dc4617fa7dd7)
        ;

        
    
    
                marker_19f0148cb50090b7d120334e89e9740e.setIcon(icon_482f531cdda7ebb7ed4a9d8ceef45600);
            
    
            var marker_d97099b036ca6254717ee63a43628582 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_fa15988a0800a160b7b91a64945aa7e1 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_7e9f49a29d3df8fdd40dbf161f7d62b5 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_148809e8ad057d7be295b8317925a954 = $(`<div id="html_148809e8ad057d7be295b8317925a954" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.30 µg/m³<br>     <b>NO₂:</b> 1.91 µg/m³<br>     <b>SO₂:</b> 0.57 µg/m³<br>     </div>`)[0];
                popup_7e9f49a29d3df8fdd40dbf161f7d62b5.setContent(html_148809e8ad057d7be295b8317925a954);
            
        

        marker_d97099b036ca6254717ee63a43628582.bindPopup(popup_7e9f49a29d3df8fdd40dbf161f7d62b5)
        ;

        
    
    
                marker_d97099b036ca6254717ee63a43628582.setIcon(icon_fa15988a0800a160b7b91a64945aa7e1);
            
    
            var marker_3e75b51c5cfa3c18cc187844d7a48814 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_1db53a6c07ebc62461ef1a602a71f598 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_c485dc30f854abef9df7ed13fd60ddf5 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_d64dcf2174de3ad42d336876e953cc4b = $(`<div id="html_d64dcf2174de3ad42d336876e953cc4b" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 1.48 µg/m³<br>     <b>NO₂:</b> 2.79 µg/m³<br>     <b>SO₂:</b> 1.11 µg/m³<br>     </div>`)[0];
                popup_c485dc30f854abef9df7ed13fd60ddf5.setContent(html_d64dcf2174de3ad42d336876e953cc4b);
            
        

        marker_3e75b51c5cfa3c18cc187844d7a48814.bindPopup(popup_c485dc30f854abef9df7ed13fd60ddf5)
        ;

        
    
    
                marker_3e75b51c5cfa3c18cc187844d7a48814.setIcon(icon_1db53a6c07ebc62461ef1a602a71f598);
            
    
            var marker_63817561843272c7231d8008c74d0ad3 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_a1eadce265a0d2723135a98781416f82 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_ff3ddd2cc229ede66498fbe9203106a5 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_9f3626dd9df2eb29e8dac1d2b2324a60 = $(`<div id="html_9f3626dd9df2eb29e8dac1d2b2324a60" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.74 µg/m³<br>     <b>NO₂:</b> 2.23 µg/m³<br>     <b>SO₂:</b> 0.60 µg/m³<br>     </div>`)[0];
                popup_ff3ddd2cc229ede66498fbe9203106a5.setContent(html_9f3626dd9df2eb29e8dac1d2b2324a60);
            
        

        marker_63817561843272c7231d8008c74d0ad3.bindPopup(popup_ff3ddd2cc229ede66498fbe9203106a5)
        ;

        
    
    
                marker_63817561843272c7231d8008c74d0ad3.setIcon(icon_a1eadce265a0d2723135a98781416f82);
            
    
            var marker_7fb1e9d7813f72a6ae841700b42a80f5 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_8a58509be7c5f02b44227d4c775e0f7d = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_03ebf4abb12abcdbd57983a0cdab248e = L.popup({
  "maxWidth": 300,
});

        
            
                var html_f2a15267c0f86e95d70772bb6d899ad7 = $(`<div id="html_f2a15267c0f86e95d70772bb6d899ad7" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> -0.41 µg/m³<br>     <b>NO₂:</b> 0.86 µg/m³<br>     <b>SO₂:</b> 0.76 µg/m³<br>     </div>`)[0];
                popup_03ebf4abb12abcdbd57983a0cdab248e.setContent(html_f2a15267c0f86e95d70772bb6d899ad7);
            
        

        marker_7fb1e9d7813f72a6ae841700b42a80f5.bindPopup(popup_03ebf4abb12abcdbd57983a0cdab248e)
        ;

        
    
    
                marker_7fb1e9d7813f72a6ae841700b42a80f5.setIcon(icon_8a58509be7c5f02b44227d4c775e0f7d);
            
    
            var marker_ee2542fb9bbb3316c51c5ca4f19a290d = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_2becc63efab0e1c9c5e159f65fe787d8 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_0300c5cd1742c17eec0b7178e6578537 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_0696b44bc8e29ffd776d31d1cca25d98 = $(`<div id="html_0696b44bc8e29ffd776d31d1cca25d98" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.70 µg/m³<br>     <b>NO₂:</b> 1.66 µg/m³<br>     <b>SO₂:</b> 2.36 µg/m³<br>     </div>`)[0];
                popup_0300c5cd1742c17eec0b7178e6578537.setContent(html_0696b44bc8e29ffd776d31d1cca25d98);
            
        

        marker_ee2542fb9bbb3316c51c5ca4f19a290d.bindPopup(popup_0300c5cd1742c17eec0b7178e6578537)
        ;

        
    
    
                marker_ee2542fb9bbb3316c51c5ca4f19a290d.setIcon(icon_2becc63efab0e1c9c5e159f65fe787d8);
            
    
            var marker_e03a3c05703d47682348fdf9ce3cf826 = L.marker(
                [19.10540031697516, 85.40699418701392],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_f8cd5809f352bcfcf9ce4ad756887a3f = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_ab0cdd769cedee41678b49539f5e417a = L.popup({
  "maxWidth": 300,
});

        
            
                var html_95ab2190cce0170116124485a8cdd856 = $(`<div id="html_95ab2190cce0170116124485a8cdd856" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (19.1054, 85.4070)<br>     <hr>     <b>PM2.5:</b> 1.30 µg/m³<br>     <b>NO₂:</b> 2.03 µg/m³<br>     <b>SO₂:</b> 1.05 µg/m³<br>     </div>`)[0];
                popup_ab0cdd769cedee41678b49539f5e417a.setContent(html_95ab2190cce0170116124485a8cdd856);
            
        

        marker_e03a3c05703d47682348fdf9ce3cf826.bindPopup(popup_ab0cdd769cedee41678b49539f5e417a)
        ;

        
    
    
                marker_e03a3c05703d47682348fdf9ce3cf826.setIcon(icon_f8cd5809f352bcfcf9ce4ad756887a3f);
            
    
            var marker_f1a7b34d10f4a7af250ca55c649fcf92 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_efc1af332b8bae301a948e76a0dc4ddb = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_d9a6851156e30202db4dd10c05804043 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_e3d18cc11760e27ae54a99d1c3861476 = $(`<div id="html_e3d18cc11760e27ae54a99d1c3861476" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 2.19 µg/m³<br>     <b>NO₂:</b> 2.55 µg/m³<br>     <b>SO₂:</b> 1.51 µg/m³<br>     </div>`)[0];
                popup_d9a6851156e30202db4dd10c05804043.setContent(html_e3d18cc11760e27ae54a99d1c3861476);
            
        

        marker_f1a7b34d10f4a7af250ca55c649fcf92.bindPopup(popup_d9a6851156e30202db4dd10c05804043)
        ;

        
    
    
                marker_f1a7b34d10f4a7af250ca55c649fcf92.setIcon(icon_efc1af332b8bae301a948e76a0dc4ddb);
            
    
            var marker_11cb3e73ed8fadff4921079b19d3465a = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_b785e822cb9222bf067f0a52df538a56 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_c441323a11dacc4d956a4f1a473b221d = L.popup({
  "maxWidth": 300,
});

        
            
                var html_bfa783a66ee5f8c1641a1c90052aa5e2 = $(`<div id="html_bfa783a66ee5f8c1641a1c90052aa5e2" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.08 µg/m³<br>     <b>NO₂:</b> 2.23 µg/m³<br>     <b>SO₂:</b> 0.13 µg/m³<br>     </div>`)[0];
                popup_c441323a11dacc4d956a4f1a473b221d.setContent(html_bfa783a66ee5f8c1641a1c90052aa5e2);
            
        

        marker_11cb3e73ed8fadff4921079b19d3465a.bindPopup(popup_c441323a11dacc4d956a4f1a473b221d)
        ;

        
    
    
                marker_11cb3e73ed8fadff4921079b19d3465a.setIcon(icon_b785e822cb9222bf067f0a52df538a56);
            
    
            var marker_616522d3f57600e3aa5f9694bfeb422b = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_c09ac5f9dd7f969ab3d5e8b3bbbba504 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_a3aa7385aecefdaa82f368d7e8991ecd = L.popup({
  "maxWidth": 300,
});

        
            
                var html_a991ddc95551a7ff8a5f5f99f886cfc4 = $(`<div id="html_a991ddc95551a7ff8a5f5f99f886cfc4" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.27 µg/m³<br>     <b>NO₂:</b> 0.95 µg/m³<br>     <b>SO₂:</b> 1.60 µg/m³<br>     </div>`)[0];
                popup_a3aa7385aecefdaa82f368d7e8991ecd.setContent(html_a991ddc95551a7ff8a5f5f99f886cfc4);
            
        

        marker_616522d3f57600e3aa5f9694bfeb422b.bindPopup(popup_a3aa7385aecefdaa82f368d7e8991ecd)
        ;

        
    
    
                marker_616522d3f57600e3aa5f9694bfeb422b.setIcon(icon_c09ac5f9dd7f969ab3d5e8b3bbbba504);
            
    
            var marker_790131e246d6405f1b94c78e4794f3e4 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_63a37396eb9d3e5cb260c837d33e0491 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_cab525bc21111151f5e66a8bf95e69d4 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_124609fb6aa8c7991b59eb1bc444b8ed = $(`<div id="html_124609fb6aa8c7991b59eb1bc444b8ed" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.60 µg/m³<br>     <b>NO₂:</b> 1.41 µg/m³<br>     <b>SO₂:</b> 2.18 µg/m³<br>     </div>`)[0];
                popup_cab525bc21111151f5e66a8bf95e69d4.setContent(html_124609fb6aa8c7991b59eb1bc444b8ed);
            
        

        marker_790131e246d6405f1b94c78e4794f3e4.bindPopup(popup_cab525bc21111151f5e66a8bf95e69d4)
        ;

        
    
    
                marker_790131e246d6405f1b94c78e4794f3e4.setIcon(icon_63a37396eb9d3e5cb260c837d33e0491);
            
    
            var marker_5f17ed9df711698166b2a5d9ca8494a3 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_32f498638c1f8c2c0a4a58d7ae5749d2 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_7e5a6be7516547265bf0db8acdba9f98 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_d019c9914fb865cf17dff68b98a067cb = $(`<div id="html_d019c9914fb865cf17dff68b98a067cb" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.93 µg/m³<br>     <b>NO₂:</b> 2.97 µg/m³<br>     <b>SO₂:</b> 0.23 µg/m³<br>     </div>`)[0];
                popup_7e5a6be7516547265bf0db8acdba9f98.setContent(html_d019c9914fb865cf17dff68b98a067cb);
            
        

        marker_5f17ed9df711698166b2a5d9ca8494a3.bindPopup(popup_7e5a6be7516547265bf0db8acdba9f98)
        ;

        
    
    
                marker_5f17ed9df711698166b2a5d9ca8494a3.setIcon(icon_32f498638c1f8c2c0a4a58d7ae5749d2);
            
    
            var marker_d7621a8a430b80f5e75eb9b3618346c1 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_0c8bbee7ede09d654cf86ad26b530f28 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_b05316a1e8112f359b33eb8526971993 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_d486900285650851ead0d2974309ebe5 = $(`<div id="html_d486900285650851ead0d2974309ebe5" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.35 µg/m³<br>     <b>NO₂:</b> 1.42 µg/m³<br>     <b>SO₂:</b> 1.75 µg/m³<br>     </div>`)[0];
                popup_b05316a1e8112f359b33eb8526971993.setContent(html_d486900285650851ead0d2974309ebe5);
            
        

        marker_d7621a8a430b80f5e75eb9b3618346c1.bindPopup(popup_b05316a1e8112f359b33eb8526971993)
        ;

        
    
    
                marker_d7621a8a430b80f5e75eb9b3618346c1.setIcon(icon_0c8bbee7ede09d654cf86ad26b530f28);
            
    
            var marker_ff6df0a1bde080a2ba111e88c0e60a3a = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_b9c5d8a8e01281c6eb70c940c785efe0 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_fe2aebc99fa70f01835ba4f17f6a2c4b = L.popup({
  "maxWidth": 300,
});

        
            
                var html_e85d012d735a0ecda9bc9a992d7c4e90 = $(`<div id="html_e85d012d735a0ecda9bc9a992d7c4e90" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.81 µg/m³<br>     <b>NO₂:</b> -0.63 µg/m³<br>     <b>SO₂:</b> -0.54 µg/m³<br>     </div>`)[0];
                popup_fe2aebc99fa70f01835ba4f17f6a2c4b.setContent(html_e85d012d735a0ecda9bc9a992d7c4e90);
            
        

        marker_ff6df0a1bde080a2ba111e88c0e60a3a.bindPopup(popup_fe2aebc99fa70f01835ba4f17f6a2c4b)
        ;

        
    
    
                marker_ff6df0a1bde080a2ba111e88c0e60a3a.setIcon(icon_b9c5d8a8e01281c6eb70c940c785efe0);
            
    
            var marker_4e08072ded8f3e4739ae299242da3cd0 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_1d9a3b18b44afcaecb0b22515719f776 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_4276cbdd73d48b7e3256770f8cb5fb7f = L.popup({
  "maxWidth": 300,
});

        
            
                var html_c000947d9856e9f0e04b2469872b5127 = $(`<div id="html_c000947d9856e9f0e04b2469872b5127" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 1.94 µg/m³<br>     <b>NO₂:</b> 2.62 µg/m³<br>     <b>SO₂:</b> 1.24 µg/m³<br>     </div>`)[0];
                popup_4276cbdd73d48b7e3256770f8cb5fb7f.setContent(html_c000947d9856e9f0e04b2469872b5127);
            
        

        marker_4e08072ded8f3e4739ae299242da3cd0.bindPopup(popup_4276cbdd73d48b7e3256770f8cb5fb7f)
        ;

        
    
    
                marker_4e08072ded8f3e4739ae299242da3cd0.setIcon(icon_1d9a3b18b44afcaecb0b22515719f776);
            
    
            var marker_3474ec54ae7a4ca1b3a75185b3e6403f = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_ee20e82e5d77aaeeef25cf3d9715e373 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_e9dc59bbad1d71211f797039d252148b = L.popup({
  "maxWidth": 300,
});

        
            
                var html_67c4cd490cec7d4a4fd57e0f04f610c1 = $(`<div id="html_67c4cd490cec7d4a4fd57e0f04f610c1" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 3.24 µg/m³<br>     <b>NO₂:</b> 2.43 µg/m³<br>     <b>SO₂:</b> 2.00 µg/m³<br>     </div>`)[0];
                popup_e9dc59bbad1d71211f797039d252148b.setContent(html_67c4cd490cec7d4a4fd57e0f04f610c1);
            
        

        marker_3474ec54ae7a4ca1b3a75185b3e6403f.bindPopup(popup_e9dc59bbad1d71211f797039d252148b)
        ;

        
    
    
                marker_3474ec54ae7a4ca1b3a75185b3e6403f.setIcon(icon_ee20e82e5d77aaeeef25cf3d9715e373);
            
    
            var marker_25eb7d8f3a056d5458a58d5c29f1280c = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_e8ed2426563feb18161eb58bf57195e1 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_abd26d241e36913da65a7bb53585e669 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_5f31a6231ef97ca4e3825fb65dbde08a = $(`<div id="html_5f31a6231ef97ca4e3825fb65dbde08a" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> 1.02 µg/m³<br>     <b>NO₂:</b> 1.65 µg/m³<br>     <b>SO₂:</b> 1.63 µg/m³<br>     </div>`)[0];
                popup_abd26d241e36913da65a7bb53585e669.setContent(html_5f31a6231ef97ca4e3825fb65dbde08a);
            
        

        marker_25eb7d8f3a056d5458a58d5c29f1280c.bindPopup(popup_abd26d241e36913da65a7bb53585e669)
        ;

        
    
    
                marker_25eb7d8f3a056d5458a58d5c29f1280c.setIcon(icon_e8ed2426563feb18161eb58bf57195e1);
            
    
            var marker_cc81c85d412e91a3670574fe94713cf8 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_6f96e3d5177827d89032a9966f085888 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_f00a1232bb4bc5278f63fe4209744e50 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_00a54507091e836184af4e59a28c8551 = $(`<div id="html_00a54507091e836184af4e59a28c8551" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.42 µg/m³<br>     <b>NO₂:</b> 1.18 µg/m³<br>     <b>SO₂:</b> 1.67 µg/m³<br>     </div>`)[0];
                popup_f00a1232bb4bc5278f63fe4209744e50.setContent(html_00a54507091e836184af4e59a28c8551);
            
        

        marker_cc81c85d412e91a3670574fe94713cf8.bindPopup(popup_f00a1232bb4bc5278f63fe4209744e50)
        ;

        
    
    
                marker_cc81c85d412e91a3670574fe94713cf8.setIcon(icon_6f96e3d5177827d89032a9966f085888);
            
    
            var marker_aafe23da807f1749d3f1f9c21896609e = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_998c8408b39a854a8904e220404d03df = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_ee660b7dfe466e900c76521fdb235f47 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_fcdf0fd2854c583c59334439c1b38ad3 = $(`<div id="html_fcdf0fd2854c583c59334439c1b38ad3" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 0.94 µg/m³<br>     <b>NO₂:</b> 2.18 µg/m³<br>     <b>SO₂:</b> 0.55 µg/m³<br>     </div>`)[0];
                popup_ee660b7dfe466e900c76521fdb235f47.setContent(html_fcdf0fd2854c583c59334439c1b38ad3);
            
        

        marker_aafe23da807f1749d3f1f9c21896609e.bindPopup(popup_ee660b7dfe466e900c76521fdb235f47)
        ;

        
    
    
                marker_aafe23da807f1749d3f1f9c21896609e.setIcon(icon_998c8408b39a854a8904e220404d03df);
            
    
            var marker_bc7744b479a44ef09ae86dd639ea79fa = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_9bd683b7d323e987d634321836d092e3 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_00463f53a7dbbd919a6831c77a312604 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_c2abf55b35d57170c998d2bd184a625d = $(`<div id="html_c2abf55b35d57170c998d2bd184a625d" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 1.20 µg/m³<br>     <b>NO₂:</b> 2.57 µg/m³<br>     <b>SO₂:</b> 0.73 µg/m³<br>     </div>`)[0];
                popup_00463f53a7dbbd919a6831c77a312604.setContent(html_c2abf55b35d57170c998d2bd184a625d);
            
        

        marker_bc7744b479a44ef09ae86dd639ea79fa.bindPopup(popup_00463f53a7dbbd919a6831c77a312604)
        ;

        
    
    
                marker_bc7744b479a44ef09ae86dd639ea79fa.setIcon(icon_9bd683b7d323e987d634321836d092e3);
            
    
            var marker_e176c5252105355b14b94df4ce98ad3f = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_dbf602db64171b3898a6cfe3b45c886b = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_435e06e7a785c1d48c2bbfbaf74a6bf7 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_0a67553b63c27b0639f59f39263c2bbf = $(`<div id="html_0a67553b63c27b0639f59f39263c2bbf" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.29 µg/m³<br>     <b>NO₂:</b> 2.23 µg/m³<br>     <b>SO₂:</b> 0.76 µg/m³<br>     </div>`)[0];
                popup_435e06e7a785c1d48c2bbfbaf74a6bf7.setContent(html_0a67553b63c27b0639f59f39263c2bbf);
            
        

        marker_e176c5252105355b14b94df4ce98ad3f.bindPopup(popup_435e06e7a785c1d48c2bbfbaf74a6bf7)
        ;

        
    
    
                marker_e176c5252105355b14b94df4ce98ad3f.setIcon(icon_dbf602db64171b3898a6cfe3b45c886b);
            
    
            var marker_e1fd895e1c8af056cc7b214228407a94 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_9944d9dd789cdaa00d8d1a367db2678a = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_f69b7c663ed628872f6cf86acc1a4c78 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_123ae90486f8647e389131c5dba0205a = $(`<div id="html_123ae90486f8647e389131c5dba0205a" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 0.61 µg/m³<br>     <b>NO₂:</b> -0.28 µg/m³<br>     <b>SO₂:</b> 0.07 µg/m³<br>     </div>`)[0];
                popup_f69b7c663ed628872f6cf86acc1a4c78.setContent(html_123ae90486f8647e389131c5dba0205a);
            
        

        marker_e1fd895e1c8af056cc7b214228407a94.bindPopup(popup_f69b7c663ed628872f6cf86acc1a4c78)
        ;

        
    
    
                marker_e1fd895e1c8af056cc7b214228407a94.setIcon(icon_9944d9dd789cdaa00d8d1a367db2678a);
            
    
            var marker_a3dd886b1b391c0630232d257181b71a = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_48eaf85b90434660a4e744bf709b6e7e = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_de8ce9f202e806cf036f35a9c5498525 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_67f7ae1a54e7be49e95010c801ab9c7d = $(`<div id="html_67f7ae1a54e7be49e95010c801ab9c7d" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 1.34 µg/m³<br>     <b>NO₂:</b> 1.55 µg/m³<br>     <b>SO₂:</b> 0.73 µg/m³<br>     </div>`)[0];
                popup_de8ce9f202e806cf036f35a9c5498525.setContent(html_67f7ae1a54e7be49e95010c801ab9c7d);
            
        

        marker_a3dd886b1b391c0630232d257181b71a.bindPopup(popup_de8ce9f202e806cf036f35a9c5498525)
        ;

        
    
    
                marker_a3dd886b1b391c0630232d257181b71a.setIcon(icon_48eaf85b90434660a4e744bf709b6e7e);
            
    
            var marker_27c73e6bf49405fdab571b1cdb1654bb = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_8cf9a995b6ee709c4fef04153152b0a1 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_e4e2943691bf0f70d40f6b57d9f335f2 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_9575405b5d34a217b7f1a4eeb18b3294 = $(`<div id="html_9575405b5d34a217b7f1a4eeb18b3294" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> 4.04 µg/m³<br>     <b>NO₂:</b> 1.89 µg/m³<br>     <b>SO₂:</b> 5.32 µg/m³<br>     </div>`)[0];
                popup_e4e2943691bf0f70d40f6b57d9f335f2.setContent(html_9575405b5d34a217b7f1a4eeb18b3294);
            
        

        marker_27c73e6bf49405fdab571b1cdb1654bb.bindPopup(popup_e4e2943691bf0f70d40f6b57d9f335f2)
        ;

        
    
    
                marker_27c73e6bf49405fdab571b1cdb1654bb.setIcon(icon_8cf9a995b6ee709c4fef04153152b0a1);
            
    
            var marker_d79d2764cff51e84ea86f7dce1aebb1b = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_dbf3f19e6e67b510c02dbb421b879545 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_59dc971e6f855ab0ccc0b157cc53f08c = L.popup({
  "maxWidth": 300,
});

        
            
                var html_3919d390e960251b379a8009a84ffe68 = $(`<div id="html_3919d390e960251b379a8009a84ffe68" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 2.02 µg/m³<br>     <b>NO₂:</b> 1.19 µg/m³<br>     <b>SO₂:</b> 2.00 µg/m³<br>     </div>`)[0];
                popup_59dc971e6f855ab0ccc0b157cc53f08c.setContent(html_3919d390e960251b379a8009a84ffe68);
            
        

        marker_d79d2764cff51e84ea86f7dce1aebb1b.bindPopup(popup_59dc971e6f855ab0ccc0b157cc53f08c)
        ;

        
    
    
                marker_d79d2764cff51e84ea86f7dce1aebb1b.setIcon(icon_dbf3f19e6e67b510c02dbb421b879545);
            
    
            var marker_2d0b529ce3dcfb1a43d0558e0b072fc8 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_90a4dcfd003b2ce32fccf9e02602ed83 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_95bb59d2f3204946a5876465dc70d397 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_07e1a5489b45092f256573d1d7d8de05 = $(`<div id="html_07e1a5489b45092f256573d1d7d8de05" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.86 µg/m³<br>     <b>NO₂:</b> 3.55 µg/m³<br>     <b>SO₂:</b> 0.89 µg/m³<br>     </div>`)[0];
                popup_95bb59d2f3204946a5876465dc70d397.setContent(html_07e1a5489b45092f256573d1d7d8de05);
            
        

        marker_2d0b529ce3dcfb1a43d0558e0b072fc8.bindPopup(popup_95bb59d2f3204946a5876465dc70d397)
        ;

        
    
    
                marker_2d0b529ce3dcfb1a43d0558e0b072fc8.setIcon(icon_90a4dcfd003b2ce32fccf9e02602ed83);
            
    
            var marker_7243985a951b28ab3b70f292439c4c7f = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_e44f1578776969bfd2d48c500d96cb16 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_3eb401e6d62bc4ae5da609f9657e7d2a = L.popup({
  "maxWidth": 300,
});

        
            
                var html_ee8db7345af637828e01000edcc31f38 = $(`<div id="html_ee8db7345af637828e01000edcc31f38" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.59 µg/m³<br>     <b>NO₂:</b> 1.55 µg/m³<br>     <b>SO₂:</b> 2.21 µg/m³<br>     </div>`)[0];
                popup_3eb401e6d62bc4ae5da609f9657e7d2a.setContent(html_ee8db7345af637828e01000edcc31f38);
            
        

        marker_7243985a951b28ab3b70f292439c4c7f.bindPopup(popup_3eb401e6d62bc4ae5da609f9657e7d2a)
        ;

        
    
    
                marker_7243985a951b28ab3b70f292439c4c7f.setIcon(icon_e44f1578776969bfd2d48c500d96cb16);
            
    
            var marker_3d27e29a831bbdb05ed1aff3e6ebd35b = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_93474dc6d7bacdcc04b4450414626d71 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_141c113cec4cb6606f70e081d6a8dd5e = L.popup({
  "maxWidth": 300,
});

        
            
                var html_8a34dd78b094ab4031a8926945cb6f72 = $(`<div id="html_8a34dd78b094ab4031a8926945cb6f72" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.22 µg/m³<br>     <b>NO₂:</b> 0.46 µg/m³<br>     <b>SO₂:</b> -0.03 µg/m³<br>     </div>`)[0];
                popup_141c113cec4cb6606f70e081d6a8dd5e.setContent(html_8a34dd78b094ab4031a8926945cb6f72);
            
        

        marker_3d27e29a831bbdb05ed1aff3e6ebd35b.bindPopup(popup_141c113cec4cb6606f70e081d6a8dd5e)
        ;

        
    
    
                marker_3d27e29a831bbdb05ed1aff3e6ebd35b.setIcon(icon_93474dc6d7bacdcc04b4450414626d71);
            
    
            var marker_56f76b6186c5501614d138592a0289da = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_7145257c62c3721ccfe5f9b36f28e2dc = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_8f29db82c878cee35427b196c38e27bc = L.popup({
  "maxWidth": 300,
});

        
            
                var html_cca044fe4ebab62099cc36bb980ad124 = $(`<div id="html_cca044fe4ebab62099cc36bb980ad124" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.61 µg/m³<br>     <b>NO₂:</b> 2.71 µg/m³<br>     <b>SO₂:</b> 0.58 µg/m³<br>     </div>`)[0];
                popup_8f29db82c878cee35427b196c38e27bc.setContent(html_cca044fe4ebab62099cc36bb980ad124);
            
        

        marker_56f76b6186c5501614d138592a0289da.bindPopup(popup_8f29db82c878cee35427b196c38e27bc)
        ;

        
    
    
                marker_56f76b6186c5501614d138592a0289da.setIcon(icon_7145257c62c3721ccfe5f9b36f28e2dc);
            
    
            var marker_a3068b8a41922a9abf0c3d2512c04ce4 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_bd3bd63b46dfff4f13953663b57fc90c = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_550a86fb1ac3dbddb965ff5407a5290e = L.popup({
  "maxWidth": 300,
});

        
            
                var html_500038e4d68c675279443cf517d2fc4f = $(`<div id="html_500038e4d68c675279443cf517d2fc4f" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 0.19 µg/m³<br>     <b>NO₂:</b> -0.75 µg/m³<br>     <b>SO₂:</b> -0.77 µg/m³<br>     </div>`)[0];
                popup_550a86fb1ac3dbddb965ff5407a5290e.setContent(html_500038e4d68c675279443cf517d2fc4f);
            
        

        marker_a3068b8a41922a9abf0c3d2512c04ce4.bindPopup(popup_550a86fb1ac3dbddb965ff5407a5290e)
        ;

        
    
    
                marker_a3068b8a41922a9abf0c3d2512c04ce4.setIcon(icon_bd3bd63b46dfff4f13953663b57fc90c);
            
    
            var marker_40fe74580de72e6cb33526de1b32a907 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_4b15e206a0ecda9fef1b63beeecd0d3d = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_a0a2de9b7428b75395a96499ff4786fc = L.popup({
  "maxWidth": 300,
});

        
            
                var html_24428a0acb6354a39c47fddce7abde76 = $(`<div id="html_24428a0acb6354a39c47fddce7abde76" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.45 µg/m³<br>     <b>NO₂:</b> 2.11 µg/m³<br>     <b>SO₂:</b> 2.20 µg/m³<br>     </div>`)[0];
                popup_a0a2de9b7428b75395a96499ff4786fc.setContent(html_24428a0acb6354a39c47fddce7abde76);
            
        

        marker_40fe74580de72e6cb33526de1b32a907.bindPopup(popup_a0a2de9b7428b75395a96499ff4786fc)
        ;

        
    
    
                marker_40fe74580de72e6cb33526de1b32a907.setIcon(icon_4b15e206a0ecda9fef1b63beeecd0d3d);
            
    
            var marker_92b6f4f8aa70f9225995698191bc5e0b = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_1a1ba1cca342dff586cc92c9bc5e763c = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_8c2b341ef47273f0b82885f41b87794e = L.popup({
  "maxWidth": 300,
});

        
            
                var html_bee56745dcfb1410f5138ab420eb167d = $(`<div id="html_bee56745dcfb1410f5138ab420eb167d" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 0.93 µg/m³<br>     <b>NO₂:</b> 2.02 µg/m³<br>     <b>SO₂:</b> 0.62 µg/m³<br>     </div>`)[0];
                popup_8c2b341ef47273f0b82885f41b87794e.setContent(html_bee56745dcfb1410f5138ab420eb167d);
            
        

        marker_92b6f4f8aa70f9225995698191bc5e0b.bindPopup(popup_8c2b341ef47273f0b82885f41b87794e)
        ;

        
    
    
                marker_92b6f4f8aa70f9225995698191bc5e0b.setIcon(icon_1a1ba1cca342dff586cc92c9bc5e763c);
            
    
            var marker_c2e6ddca8ebc5955e940ccde78ca4e62 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_c3dc19c13955ba42d5167d3ed9002a8d = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_85ddd9c9183bffcfc506d75daeed0346 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_208ff0a4401df00429356a34e1cdf356 = $(`<div id="html_208ff0a4401df00429356a34e1cdf356" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.13 µg/m³<br>     <b>NO₂:</b> 2.68 µg/m³<br>     <b>SO₂:</b> 0.18 µg/m³<br>     </div>`)[0];
                popup_85ddd9c9183bffcfc506d75daeed0346.setContent(html_208ff0a4401df00429356a34e1cdf356);
            
        

        marker_c2e6ddca8ebc5955e940ccde78ca4e62.bindPopup(popup_85ddd9c9183bffcfc506d75daeed0346)
        ;

        
    
    
                marker_c2e6ddca8ebc5955e940ccde78ca4e62.setIcon(icon_c3dc19c13955ba42d5167d3ed9002a8d);
            
    
            var marker_906b3e5cfa2acfcc9c746ccb229e9a25 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_26bd86a508790318d9b8907018406f45 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_07ac1791c183aa080d664647732e7f28 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_d3ca0ac34595bc54b46aa2912b497619 = $(`<div id="html_d3ca0ac34595bc54b46aa2912b497619" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.94 µg/m³<br>     <b>NO₂:</b> 2.31 µg/m³<br>     <b>SO₂:</b> 2.29 µg/m³<br>     </div>`)[0];
                popup_07ac1791c183aa080d664647732e7f28.setContent(html_d3ca0ac34595bc54b46aa2912b497619);
            
        

        marker_906b3e5cfa2acfcc9c746ccb229e9a25.bindPopup(popup_07ac1791c183aa080d664647732e7f28)
        ;

        
    
    
                marker_906b3e5cfa2acfcc9c746ccb229e9a25.setIcon(icon_26bd86a508790318d9b8907018406f45);
            
    
            var marker_c5d4237809dfacba3f2cca119244a816 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_65886185bbfbdb3cb9a4c87c6fb460a8 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_af1ecce4e6b1dfc3b225d9b0168a40ce = L.popup({
  "maxWidth": 300,
});

        
            
                var html_fca7557135acd8a79a625fa0d56d05b8 = $(`<div id="html_fca7557135acd8a79a625fa0d56d05b8" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.31 µg/m³<br>     <b>NO₂:</b> 1.07 µg/m³<br>     <b>SO₂:</b> 1.25 µg/m³<br>     </div>`)[0];
                popup_af1ecce4e6b1dfc3b225d9b0168a40ce.setContent(html_fca7557135acd8a79a625fa0d56d05b8);
            
        

        marker_c5d4237809dfacba3f2cca119244a816.bindPopup(popup_af1ecce4e6b1dfc3b225d9b0168a40ce)
        ;

        
    
    
                marker_c5d4237809dfacba3f2cca119244a816.setIcon(icon_65886185bbfbdb3cb9a4c87c6fb460a8);
            
    
            var marker_50f5386535f67eb6a9b5bfe75d5abb50 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_2a25d9aa24d459f665f15a8486d7c135 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_4b44b36a117910808c1fa6836602b398 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_d0fab73a18c7a9a0b4ae17f3d08b7984 = $(`<div id="html_d0fab73a18c7a9a0b4ae17f3d08b7984" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 2.03 µg/m³<br>     <b>NO₂:</b> 2.69 µg/m³<br>     <b>SO₂:</b> 1.43 µg/m³<br>     </div>`)[0];
                popup_4b44b36a117910808c1fa6836602b398.setContent(html_d0fab73a18c7a9a0b4ae17f3d08b7984);
            
        

        marker_50f5386535f67eb6a9b5bfe75d5abb50.bindPopup(popup_4b44b36a117910808c1fa6836602b398)
        ;

        
    
    
                marker_50f5386535f67eb6a9b5bfe75d5abb50.setIcon(icon_2a25d9aa24d459f665f15a8486d7c135);
            
    
            var marker_90bde1363954915934fc5f69aadcc94c = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_6c2ad8db3b6f234eaa264e8b3adba1a0 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_2dcf59de11ff3ac0b09c81f895d4ea9a = L.popup({
  "maxWidth": 300,
});

        
            
                var html_3f319992515407a0a1597e5b2d1b7fb6 = $(`<div id="html_3f319992515407a0a1597e5b2d1b7fb6" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.73 µg/m³<br>     <b>NO₂:</b> 1.24 µg/m³<br>     <b>SO₂:</b> 1.98 µg/m³<br>     </div>`)[0];
                popup_2dcf59de11ff3ac0b09c81f895d4ea9a.setContent(html_3f319992515407a0a1597e5b2d1b7fb6);
            
        

        marker_90bde1363954915934fc5f69aadcc94c.bindPopup(popup_2dcf59de11ff3ac0b09c81f895d4ea9a)
        ;

        
    
    
                marker_90bde1363954915934fc5f69aadcc94c.setIcon(icon_6c2ad8db3b6f234eaa264e8b3adba1a0);
            
    
            var marker_242df3b702135f6ab3e7fc2d60acff81 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_d8a8d86c1897329baedb617c3e0462b4 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_d04c47d9ee94378d0ba910ce6b6488fe = L.popup({
  "maxWidth": 300,
});

        
            
                var html_137b0060c873b38f87258dbd7890a175 = $(`<div id="html_137b0060c873b38f87258dbd7890a175" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 1.39 µg/m³<br>     <b>NO₂:</b> 3.30 µg/m³<br>     <b>SO₂:</b> 0.73 µg/m³<br>     </div>`)[0];
                popup_d04c47d9ee94378d0ba910ce6b6488fe.setContent(html_137b0060c873b38f87258dbd7890a175);
            
        

        marker_242df3b702135f6ab3e7fc2d60acff81.bindPopup(popup_d04c47d9ee94378d0ba910ce6b6488fe)
        ;

        
    
    
                marker_242df3b702135f6ab3e7fc2d60acff81.setIcon(icon_d8a8d86c1897329baedb617c3e0462b4);
            
    
            var marker_0597e2ce8121b19721677674ff2b9a07 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_948f79d4f50135676360554d41627fc9 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_f7b4bd719c4c73e66e4695b091b15f59 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_eb3c3f0202ce0d909157dbfee3ae6d57 = $(`<div id="html_eb3c3f0202ce0d909157dbfee3ae6d57" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 5.13 µg/m³<br>     <b>NO₂:</b> 0.92 µg/m³<br>     <b>SO₂:</b> 3.70 µg/m³<br>     </div>`)[0];
                popup_f7b4bd719c4c73e66e4695b091b15f59.setContent(html_eb3c3f0202ce0d909157dbfee3ae6d57);
            
        

        marker_0597e2ce8121b19721677674ff2b9a07.bindPopup(popup_f7b4bd719c4c73e66e4695b091b15f59)
        ;

        
    
    
                marker_0597e2ce8121b19721677674ff2b9a07.setIcon(icon_948f79d4f50135676360554d41627fc9);
            
    
            var marker_3d5227466fdec60a921f081af7fcdadc = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_25747a1c1bf6b70b12363bfdce8118c6 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_ae1e701aedf3740d412f5d620e2c0ecc = L.popup({
  "maxWidth": 300,
});

        
            
                var html_0e008c1c8754678b9d83e4c27d543184 = $(`<div id="html_0e008c1c8754678b9d83e4c27d543184" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> -0.20 µg/m³<br>     <b>NO₂:</b> 0.48 µg/m³<br>     <b>SO₂:</b> -0.62 µg/m³<br>     </div>`)[0];
                popup_ae1e701aedf3740d412f5d620e2c0ecc.setContent(html_0e008c1c8754678b9d83e4c27d543184);
            
        

        marker_3d5227466fdec60a921f081af7fcdadc.bindPopup(popup_ae1e701aedf3740d412f5d620e2c0ecc)
        ;

        
    
    
                marker_3d5227466fdec60a921f081af7fcdadc.setIcon(icon_25747a1c1bf6b70b12363bfdce8118c6);
            
    
            var marker_4c00cc69d658e5356c624a299f2863f7 = L.marker(
                [21.360837236753746, 87.3304814818381],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_0c51eaae7943802a46f340cd92a41092 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_0984815374a4633baf5405147ecc8037 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_36432eef1970d687a706dcdaf9374e64 = $(`<div id="html_36432eef1970d687a706dcdaf9374e64" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (21.3608, 87.3305)<br>     <hr>     <b>PM2.5:</b> 1.50 µg/m³<br>     <b>NO₂:</b> 2.18 µg/m³<br>     <b>SO₂:</b> 1.42 µg/m³<br>     </div>`)[0];
                popup_0984815374a4633baf5405147ecc8037.setContent(html_36432eef1970d687a706dcdaf9374e64);
            
        

        marker_4c00cc69d658e5356c624a299f2863f7.bindPopup(popup_0984815374a4633baf5405147ecc8037)
        ;

        
    
    
                marker_4c00cc69d658e5356c624a299f2863f7.setIcon(icon_0c51eaae7943802a46f340cd92a41092);
            
    
            var marker_9e3bfbf1f3c644cf1b73662a34ecc0fc = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_d98b26be8b17c0a6d647b6e2bc441708 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_7610b2346ec80b1e09040f2b1fa3a11b = L.popup({
  "maxWidth": 300,
});

        
            
                var html_ee7422abc2b100d95017ac684690440d = $(`<div id="html_ee7422abc2b100d95017ac684690440d" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.83 µg/m³<br>     <b>NO₂:</b> 1.61 µg/m³<br>     <b>SO₂:</b> 2.33 µg/m³<br>     </div>`)[0];
                popup_7610b2346ec80b1e09040f2b1fa3a11b.setContent(html_ee7422abc2b100d95017ac684690440d);
            
        

        marker_9e3bfbf1f3c644cf1b73662a34ecc0fc.bindPopup(popup_7610b2346ec80b1e09040f2b1fa3a11b)
        ;

        
    
    
                marker_9e3bfbf1f3c644cf1b73662a34ecc0fc.setIcon(icon_d98b26be8b17c0a6d647b6e2bc441708);
            
    
            var marker_60e7891c69b1b4e041fbac2c908ef1fe = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_383e310cc7e7e510530c9206ef567443 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_0bbdc20dcaa65707c5579043998957c7 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_0ef56749f30739c21f7cb6e239ccd2e4 = $(`<div id="html_0ef56749f30739c21f7cb6e239ccd2e4" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.29 µg/m³<br>     <b>NO₂:</b> 2.23 µg/m³<br>     <b>SO₂:</b> 1.12 µg/m³<br>     </div>`)[0];
                popup_0bbdc20dcaa65707c5579043998957c7.setContent(html_0ef56749f30739c21f7cb6e239ccd2e4);
            
        

        marker_60e7891c69b1b4e041fbac2c908ef1fe.bindPopup(popup_0bbdc20dcaa65707c5579043998957c7)
        ;

        
    
    
                marker_60e7891c69b1b4e041fbac2c908ef1fe.setIcon(icon_383e310cc7e7e510530c9206ef567443);
            
    
            var marker_7fc1a9153e98eaf5c2026efea58edab8 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_b19398da6af27f1491e0dc428788de8f = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_1962624687139d8d92ed044c2b411cb6 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_602d5ced003e7e397efa4c9972426409 = $(`<div id="html_602d5ced003e7e397efa4c9972426409" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.73 µg/m³<br>     <b>NO₂:</b> 0.83 µg/m³<br>     <b>SO₂:</b> -0.09 µg/m³<br>     </div>`)[0];
                popup_1962624687139d8d92ed044c2b411cb6.setContent(html_602d5ced003e7e397efa4c9972426409);
            
        

        marker_7fc1a9153e98eaf5c2026efea58edab8.bindPopup(popup_1962624687139d8d92ed044c2b411cb6)
        ;

        
    
    
                marker_7fc1a9153e98eaf5c2026efea58edab8.setIcon(icon_b19398da6af27f1491e0dc428788de8f);
            
    
            var marker_d76b19854607d7d25f1b3ab29551b003 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_ce9d9ee1cbb65d0bb8fa7930faa174c6 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_3039154e803c2a60b7e85ea5b84a26f0 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_a302564b31e9f4b870365399b1258594 = $(`<div id="html_a302564b31e9f4b870365399b1258594" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 1.25 µg/m³<br>     <b>NO₂:</b> 0.98 µg/m³<br>     <b>SO₂:</b> -0.08 µg/m³<br>     </div>`)[0];
                popup_3039154e803c2a60b7e85ea5b84a26f0.setContent(html_a302564b31e9f4b870365399b1258594);
            
        

        marker_d76b19854607d7d25f1b3ab29551b003.bindPopup(popup_3039154e803c2a60b7e85ea5b84a26f0)
        ;

        
    
    
                marker_d76b19854607d7d25f1b3ab29551b003.setIcon(icon_ce9d9ee1cbb65d0bb8fa7930faa174c6);
            
    
            var marker_34710378d464245c6c79d24b6b51fdf8 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_a4ce52a6ee0d887420a92afd2d65d422 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_087781784802e0f4085ddc5e6aaea1d1 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_fd1add02266f02ca3c6507521d3da27c = $(`<div id="html_fd1add02266f02ca3c6507521d3da27c" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> -0.19 µg/m³<br>     <b>NO₂:</b> -0.72 µg/m³<br>     <b>SO₂:</b> -0.83 µg/m³<br>     </div>`)[0];
                popup_087781784802e0f4085ddc5e6aaea1d1.setContent(html_fd1add02266f02ca3c6507521d3da27c);
            
        

        marker_34710378d464245c6c79d24b6b51fdf8.bindPopup(popup_087781784802e0f4085ddc5e6aaea1d1)
        ;

        
    
    
                marker_34710378d464245c6c79d24b6b51fdf8.setIcon(icon_a4ce52a6ee0d887420a92afd2d65d422);
            
    
            var marker_79d622be870bc5be00a5772e8b04b0e9 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_eff48ec4623fe1f0a49aab75d8550444 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_5f5ec3f680add5580c48ff598e1165e8 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_1f02140a3c5d16bbecda258d74823a4e = $(`<div id="html_1f02140a3c5d16bbecda258d74823a4e" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.10 µg/m³<br>     <b>NO₂:</b> 1.79 µg/m³<br>     <b>SO₂:</b> 1.05 µg/m³<br>     </div>`)[0];
                popup_5f5ec3f680add5580c48ff598e1165e8.setContent(html_1f02140a3c5d16bbecda258d74823a4e);
            
        

        marker_79d622be870bc5be00a5772e8b04b0e9.bindPopup(popup_5f5ec3f680add5580c48ff598e1165e8)
        ;

        
    
    
                marker_79d622be870bc5be00a5772e8b04b0e9.setIcon(icon_eff48ec4623fe1f0a49aab75d8550444);
            
    
            var marker_710d6811f1e737aefeb9cf7a50fb2232 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_9c7ae599b99f153b8e024b8b85404ea8 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_4285d6ddd55ab2e395559d3816072104 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_ae1d8efbce105e6fd2f514749f776ae6 = $(`<div id="html_ae1d8efbce105e6fd2f514749f776ae6" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 1.29 µg/m³<br>     <b>NO₂:</b> 1.16 µg/m³<br>     <b>SO₂:</b> -0.13 µg/m³<br>     </div>`)[0];
                popup_4285d6ddd55ab2e395559d3816072104.setContent(html_ae1d8efbce105e6fd2f514749f776ae6);
            
        

        marker_710d6811f1e737aefeb9cf7a50fb2232.bindPopup(popup_4285d6ddd55ab2e395559d3816072104)
        ;

        
    
    
                marker_710d6811f1e737aefeb9cf7a50fb2232.setIcon(icon_9c7ae599b99f153b8e024b8b85404ea8);
            
    
            var marker_7e50f30417e7d5ab471e84f07f9e945f = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_048f82cdf0d3433b2567dad73d0f8f2f = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_99355f8571bb91906a0289e6e355ce80 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_c7f7fe95309a2c9750d14fe943766e2e = $(`<div id="html_c7f7fe95309a2c9750d14fe943766e2e" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 1.22 µg/m³<br>     <b>NO₂:</b> 2.69 µg/m³<br>     <b>SO₂:</b> 0.67 µg/m³<br>     </div>`)[0];
                popup_99355f8571bb91906a0289e6e355ce80.setContent(html_c7f7fe95309a2c9750d14fe943766e2e);
            
        

        marker_7e50f30417e7d5ab471e84f07f9e945f.bindPopup(popup_99355f8571bb91906a0289e6e355ce80)
        ;

        
    
    
                marker_7e50f30417e7d5ab471e84f07f9e945f.setIcon(icon_048f82cdf0d3433b2567dad73d0f8f2f);
            
    
            var marker_97f1435bd76b132605187b7f35052488 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_892db86d30bfc4263afa934e46091844 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_5805fdb19e32a0d79d51fd6f91bfcfa1 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_a72c2f092784c56d76fa7724d9d26694 = $(`<div id="html_a72c2f092784c56d76fa7724d9d26694" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.83 µg/m³<br>     <b>NO₂:</b> 1.94 µg/m³<br>     <b>SO₂:</b> 0.44 µg/m³<br>     </div>`)[0];
                popup_5805fdb19e32a0d79d51fd6f91bfcfa1.setContent(html_a72c2f092784c56d76fa7724d9d26694);
            
        

        marker_97f1435bd76b132605187b7f35052488.bindPopup(popup_5805fdb19e32a0d79d51fd6f91bfcfa1)
        ;

        
    
    
                marker_97f1435bd76b132605187b7f35052488.setIcon(icon_892db86d30bfc4263afa934e46091844);
            
    
            var marker_3d2caf672d5b5a1bb7e0f74d3e53d287 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_3e3812ae6223e4a60155ab4bc0deff5c = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_a1ef78274c871c0c98b4adb0ed4a30fe = L.popup({
  "maxWidth": 300,
});

        
            
                var html_707f8da9b3acaef7ffbe3a3bf06fbe86 = $(`<div id="html_707f8da9b3acaef7ffbe3a3bf06fbe86" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.35 µg/m³<br>     <b>NO₂:</b> 2.21 µg/m³<br>     <b>SO₂:</b> 0.80 µg/m³<br>     </div>`)[0];
                popup_a1ef78274c871c0c98b4adb0ed4a30fe.setContent(html_707f8da9b3acaef7ffbe3a3bf06fbe86);
            
        

        marker_3d2caf672d5b5a1bb7e0f74d3e53d287.bindPopup(popup_a1ef78274c871c0c98b4adb0ed4a30fe)
        ;

        
    
    
                marker_3d2caf672d5b5a1bb7e0f74d3e53d287.setIcon(icon_3e3812ae6223e4a60155ab4bc0deff5c);
            
    
            var marker_aa1efeb746d5da747bc18a7a7bf7f99b = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_c316f5c783c52f83f5af59bb91c23f9b = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_5d43155f33d461c0b20b42f9fae9684c = L.popup({
  "maxWidth": 300,
});

        
            
                var html_4fb8ce534fcb0a1d6495c34522822d01 = $(`<div id="html_4fb8ce534fcb0a1d6495c34522822d01" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 2.28 µg/m³<br>     <b>NO₂:</b> 2.43 µg/m³<br>     <b>SO₂:</b> 1.83 µg/m³<br>     </div>`)[0];
                popup_5d43155f33d461c0b20b42f9fae9684c.setContent(html_4fb8ce534fcb0a1d6495c34522822d01);
            
        

        marker_aa1efeb746d5da747bc18a7a7bf7f99b.bindPopup(popup_5d43155f33d461c0b20b42f9fae9684c)
        ;

        
    
    
                marker_aa1efeb746d5da747bc18a7a7bf7f99b.setIcon(icon_c316f5c783c52f83f5af59bb91c23f9b);
            
    
            var marker_d56294a27ec1d66839159070b07d2622 = L.marker(
                [17.17739935924127, 83.76275163955484],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_b36ef78ea41b1ba601095cd8cd0885b0 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_871a43bd8c131dc2450b5dd9980f9ccb = L.popup({
  "maxWidth": 300,
});

        
            
                var html_31363283eac8d3e32c9ef88de149a232 = $(`<div id="html_31363283eac8d3e32c9ef88de149a232" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (17.1774, 83.7628)<br>     <hr>     <b>PM2.5:</b> 1.30 µg/m³<br>     <b>NO₂:</b> 3.11 µg/m³<br>     <b>SO₂:</b> 1.26 µg/m³<br>     </div>`)[0];
                popup_871a43bd8c131dc2450b5dd9980f9ccb.setContent(html_31363283eac8d3e32c9ef88de149a232);
            
        

        marker_d56294a27ec1d66839159070b07d2622.bindPopup(popup_871a43bd8c131dc2450b5dd9980f9ccb)
        ;

        
    
    
                marker_d56294a27ec1d66839159070b07d2622.setIcon(icon_b36ef78ea41b1ba601095cd8cd0885b0);
            
    
            var marker_a5385bad85a4931ee7cb9ed679c4e73b = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_1418d3262ac99ee89962efcf3a9a4471 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_e68dcb24f490afe8770cde156085bfc7 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_58789e452ab390ce6a6dc5f1c6dd439b = $(`<div id="html_58789e452ab390ce6a6dc5f1c6dd439b" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> 0.52 µg/m³<br>     <b>NO₂:</b> 1.46 µg/m³<br>     <b>SO₂:</b> 2.61 µg/m³<br>     </div>`)[0];
                popup_e68dcb24f490afe8770cde156085bfc7.setContent(html_58789e452ab390ce6a6dc5f1c6dd439b);
            
        

        marker_a5385bad85a4931ee7cb9ed679c4e73b.bindPopup(popup_e68dcb24f490afe8770cde156085bfc7)
        ;

        
    
    
                marker_a5385bad85a4931ee7cb9ed679c4e73b.setIcon(icon_1418d3262ac99ee89962efcf3a9a4471);
            
    
            var marker_f86cb6dd2cb2017d67c94d89bf48a4cc = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_5edd23f15badcd9cb289cfb27a7099f3 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_ec1aefb41c2c682cf96c1a492c3533c8 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_300272ada1d671e008e711ebfabcf608 = $(`<div id="html_300272ada1d671e008e711ebfabcf608" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 0.98 µg/m³<br>     <b>NO₂:</b> 2.36 µg/m³<br>     <b>SO₂:</b> 0.43 µg/m³<br>     </div>`)[0];
                popup_ec1aefb41c2c682cf96c1a492c3533c8.setContent(html_300272ada1d671e008e711ebfabcf608);
            
        

        marker_f86cb6dd2cb2017d67c94d89bf48a4cc.bindPopup(popup_ec1aefb41c2c682cf96c1a492c3533c8)
        ;

        
    
    
                marker_f86cb6dd2cb2017d67c94d89bf48a4cc.setIcon(icon_5edd23f15badcd9cb289cfb27a7099f3);
            
    
            var marker_940c2b81f5b845316fd18e705143fc25 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_6c4a377fc2be599c43b29e7d943bff07 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_fcbd586e4ab01ef1f048ce8a5cc32003 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_44ea1191e0a07c4966e4c789b3c582b5 = $(`<div id="html_44ea1191e0a07c4966e4c789b3c582b5" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 2.23 µg/m³<br>     <b>NO₂:</b> 2.63 µg/m³<br>     <b>SO₂:</b> 2.01 µg/m³<br>     </div>`)[0];
                popup_fcbd586e4ab01ef1f048ce8a5cc32003.setContent(html_44ea1191e0a07c4966e4c789b3c582b5);
            
        

        marker_940c2b81f5b845316fd18e705143fc25.bindPopup(popup_fcbd586e4ab01ef1f048ce8a5cc32003)
        ;

        
    
    
                marker_940c2b81f5b845316fd18e705143fc25.setIcon(icon_6c4a377fc2be599c43b29e7d943bff07);
            
    
            var marker_442322b1fbcc527147dee7d570f1e9fd = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_c6a51a05ddeb46e096518c39ca8ac9d8 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_16c5c416c3cc0f76c1044cea72b6b30c = L.popup({
  "maxWidth": 300,
});

        
            
                var html_fae1aac84a1265be125b134bb8083ec5 = $(`<div id="html_fae1aac84a1265be125b134bb8083ec5" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> -0.14 µg/m³<br>     <b>NO₂:</b> -0.14 µg/m³<br>     <b>SO₂:</b> 0.26 µg/m³<br>     </div>`)[0];
                popup_16c5c416c3cc0f76c1044cea72b6b30c.setContent(html_fae1aac84a1265be125b134bb8083ec5);
            
        

        marker_442322b1fbcc527147dee7d570f1e9fd.bindPopup(popup_16c5c416c3cc0f76c1044cea72b6b30c)
        ;

        
    
    
                marker_442322b1fbcc527147dee7d570f1e9fd.setIcon(icon_c6a51a05ddeb46e096518c39ca8ac9d8);
            
    
            var marker_0a55f2835596bf773707fd6befef163b = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_deeed10595a4c3db9bc07a30ff09058b = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_5c77dad6ec051255592b044af524e2a6 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_73d30aa5e069a9e335d037a29b1e76be = $(`<div id="html_73d30aa5e069a9e335d037a29b1e76be" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> -0.16 µg/m³<br>     <b>NO₂:</b> 0.69 µg/m³<br>     <b>SO₂:</b> 0.67 µg/m³<br>     </div>`)[0];
                popup_5c77dad6ec051255592b044af524e2a6.setContent(html_73d30aa5e069a9e335d037a29b1e76be);
            
        

        marker_0a55f2835596bf773707fd6befef163b.bindPopup(popup_5c77dad6ec051255592b044af524e2a6)
        ;

        
    
    
                marker_0a55f2835596bf773707fd6befef163b.setIcon(icon_deeed10595a4c3db9bc07a30ff09058b);
            
    
            var marker_497b9a39644b28269e01b515fb286e27 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_e2939c9b8a3ec58e846e5953543f60c8 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_5b2d4d7bf2fc69ee1eb7c222e7099412 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_bc3c6d21b7758bc4f3ff1f0118303e1d = $(`<div id="html_bc3c6d21b7758bc4f3ff1f0118303e1d" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.27 µg/m³<br>     <b>NO₂:</b> 2.20 µg/m³<br>     <b>SO₂:</b> 2.58 µg/m³<br>     </div>`)[0];
                popup_5b2d4d7bf2fc69ee1eb7c222e7099412.setContent(html_bc3c6d21b7758bc4f3ff1f0118303e1d);
            
        

        marker_497b9a39644b28269e01b515fb286e27.bindPopup(popup_5b2d4d7bf2fc69ee1eb7c222e7099412)
        ;

        
    
    
                marker_497b9a39644b28269e01b515fb286e27.setIcon(icon_e2939c9b8a3ec58e846e5953543f60c8);
            
    
            var marker_ffe6476081b35cce2ad439df36dc7f24 = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_812738420e9aa5e229be146cd3c8cf13 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_9337483619590591e6259923d9b3cec5 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_dfa0ae2682a01717c2fe434944e78360 = $(`<div id="html_dfa0ae2682a01717c2fe434944e78360" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.18 µg/m³<br>     <b>NO₂:</b> 1.07 µg/m³<br>     <b>SO₂:</b> 1.39 µg/m³<br>     </div>`)[0];
                popup_9337483619590591e6259923d9b3cec5.setContent(html_dfa0ae2682a01717c2fe434944e78360);
            
        

        marker_ffe6476081b35cce2ad439df36dc7f24.bindPopup(popup_9337483619590591e6259923d9b3cec5)
        ;

        
    
    
                marker_ffe6476081b35cce2ad439df36dc7f24.setIcon(icon_812738420e9aa5e229be146cd3c8cf13);
            
    
            var marker_119df62566f8e5c71cfa5daedd811274 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_a55e36c6e0e44757a8cb9763853b1eca = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_934fabbb7817008ceb98f6336cb5b2ea = L.popup({
  "maxWidth": 300,
});

        
            
                var html_660a54e160b1c34d3e8b259120c2d39b = $(`<div id="html_660a54e160b1c34d3e8b259120c2d39b" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.47 µg/m³<br>     <b>NO₂:</b> 0.78 µg/m³<br>     <b>SO₂:</b> 1.90 µg/m³<br>     </div>`)[0];
                popup_934fabbb7817008ceb98f6336cb5b2ea.setContent(html_660a54e160b1c34d3e8b259120c2d39b);
            
        

        marker_119df62566f8e5c71cfa5daedd811274.bindPopup(popup_934fabbb7817008ceb98f6336cb5b2ea)
        ;

        
    
    
                marker_119df62566f8e5c71cfa5daedd811274.setIcon(icon_a55e36c6e0e44757a8cb9763853b1eca);
            
    
            var marker_1a5cd10ad7b9b26adc6c2fd83d297fd0 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_61970a0afa057941c22c7621eabded38 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_11547ca5e0b4e5bd883d2a933b9e15e7 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_f729a0eb9ca807ce43d1dcccae982755 = $(`<div id="html_f729a0eb9ca807ce43d1dcccae982755" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 2.19 µg/m³<br>     <b>NO₂:</b> 2.55 µg/m³<br>     <b>SO₂:</b> 1.51 µg/m³<br>     </div>`)[0];
                popup_11547ca5e0b4e5bd883d2a933b9e15e7.setContent(html_f729a0eb9ca807ce43d1dcccae982755);
            
        

        marker_1a5cd10ad7b9b26adc6c2fd83d297fd0.bindPopup(popup_11547ca5e0b4e5bd883d2a933b9e15e7)
        ;

        
    
    
                marker_1a5cd10ad7b9b26adc6c2fd83d297fd0.setIcon(icon_61970a0afa057941c22c7621eabded38);
            
    
            var marker_e44ca08bf669c914a9531ef4f2af8d18 = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_e11b14dc9ee75a10c9ac5fd0a060a1bf = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_fd52faa99160a56e7f37f139c49755e8 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_0f7df57d87090901327a210d0d37972b = $(`<div id="html_0f7df57d87090901327a210d0d37972b" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> 1.10 µg/m³<br>     <b>NO₂:</b> 1.17 µg/m³<br>     <b>SO₂:</b> 2.10 µg/m³<br>     </div>`)[0];
                popup_fd52faa99160a56e7f37f139c49755e8.setContent(html_0f7df57d87090901327a210d0d37972b);
            
        

        marker_e44ca08bf669c914a9531ef4f2af8d18.bindPopup(popup_fd52faa99160a56e7f37f139c49755e8)
        ;

        
    
    
                marker_e44ca08bf669c914a9531ef4f2af8d18.setIcon(icon_e11b14dc9ee75a10c9ac5fd0a060a1bf);
            
    
            var marker_3019345e34bb53c3a5470e5326b9e45a = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_83086a591f63c57370138fd03f09e63e = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_e679f8f220c7722e4a28a40c97fa7293 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_9ef0b0f450691e097c4d8be55e2a6ad3 = $(`<div id="html_9ef0b0f450691e097c4d8be55e2a6ad3" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.10 µg/m³<br>     <b>NO₂:</b> 2.49 µg/m³<br>     <b>SO₂:</b> 0.16 µg/m³<br>     </div>`)[0];
                popup_e679f8f220c7722e4a28a40c97fa7293.setContent(html_9ef0b0f450691e097c4d8be55e2a6ad3);
            
        

        marker_3019345e34bb53c3a5470e5326b9e45a.bindPopup(popup_e679f8f220c7722e4a28a40c97fa7293)
        ;

        
    
    
                marker_3019345e34bb53c3a5470e5326b9e45a.setIcon(icon_83086a591f63c57370138fd03f09e63e);
            
    
            var marker_4a2bb9095633fad92faca5e4001671fc = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_f972626b9fa3347ee02261044e1e527c = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_b9f0ca5b3b71130f8a64302041197c74 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_7cfde273d2baeab62921d0f266915b9f = $(`<div id="html_7cfde273d2baeab62921d0f266915b9f" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> -0.50 µg/m³<br>     <b>NO₂:</b> 0.83 µg/m³<br>     <b>SO₂:</b> 0.90 µg/m³<br>     </div>`)[0];
                popup_b9f0ca5b3b71130f8a64302041197c74.setContent(html_7cfde273d2baeab62921d0f266915b9f);
            
        

        marker_4a2bb9095633fad92faca5e4001671fc.bindPopup(popup_b9f0ca5b3b71130f8a64302041197c74)
        ;

        
    
    
                marker_4a2bb9095633fad92faca5e4001671fc.setIcon(icon_f972626b9fa3347ee02261044e1e527c);
            
    
            var marker_5dc594fff240517cc5a4c5a0e1c3f830 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_4954e8df17178e18b0eefedcc7d6fda8 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_2ee2994d527f08ba0e1da0ef820f0a36 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_bd260ca34d5038cefdbdebd703ebc8cd = $(`<div id="html_bd260ca34d5038cefdbdebd703ebc8cd" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 0.19 µg/m³<br>     <b>NO₂:</b> -0.37 µg/m³<br>     <b>SO₂:</b> -0.44 µg/m³<br>     </div>`)[0];
                popup_2ee2994d527f08ba0e1da0ef820f0a36.setContent(html_bd260ca34d5038cefdbdebd703ebc8cd);
            
        

        marker_5dc594fff240517cc5a4c5a0e1c3f830.bindPopup(popup_2ee2994d527f08ba0e1da0ef820f0a36)
        ;

        
    
    
                marker_5dc594fff240517cc5a4c5a0e1c3f830.setIcon(icon_4954e8df17178e18b0eefedcc7d6fda8);
            
    
            var marker_65251ac0b7b10dd1aa4c013e05ca71d7 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_1b491b8e6054a0f85921a10f8ea40c7c = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_2cf5edec334b2cb7c638eac520644c0f = L.popup({
  "maxWidth": 300,
});

        
            
                var html_bdbe8942854b01405b391451516dcb43 = $(`<div id="html_bdbe8942854b01405b391451516dcb43" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> -0.15 µg/m³<br>     <b>NO₂:</b> -0.09 µg/m³<br>     <b>SO₂:</b> -0.37 µg/m³<br>     </div>`)[0];
                popup_2cf5edec334b2cb7c638eac520644c0f.setContent(html_bdbe8942854b01405b391451516dcb43);
            
        

        marker_65251ac0b7b10dd1aa4c013e05ca71d7.bindPopup(popup_2cf5edec334b2cb7c638eac520644c0f)
        ;

        
    
    
                marker_65251ac0b7b10dd1aa4c013e05ca71d7.setIcon(icon_1b491b8e6054a0f85921a10f8ea40c7c);
            
    
            var marker_87dbe00b52b79010db726cbf868659cb = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_12bd16d36325e515688e20c192a70f5a = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_c31811b25cd9a86f37faa5e1a516782d = L.popup({
  "maxWidth": 300,
});

        
            
                var html_15807fe07fabe81f3b39a5f6d25718af = $(`<div id="html_15807fe07fabe81f3b39a5f6d25718af" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.73 µg/m³<br>     <b>NO₂:</b> 1.92 µg/m³<br>     <b>SO₂:</b> 0.20 µg/m³<br>     </div>`)[0];
                popup_c31811b25cd9a86f37faa5e1a516782d.setContent(html_15807fe07fabe81f3b39a5f6d25718af);
            
        

        marker_87dbe00b52b79010db726cbf868659cb.bindPopup(popup_c31811b25cd9a86f37faa5e1a516782d)
        ;

        
    
    
                marker_87dbe00b52b79010db726cbf868659cb.setIcon(icon_12bd16d36325e515688e20c192a70f5a);
            
    
            var marker_8f278b561970862f4f24fb7605d42d1b = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_f11fe8bcc9819234f1d42f0d385a9c1a = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_06f8c242dfcd83dc7d15b1803bcb37a8 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_ed49f29ed36210ac23307acbaaee4201 = $(`<div id="html_ed49f29ed36210ac23307acbaaee4201" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.78 µg/m³<br>     <b>NO₂:</b> -0.29 µg/m³<br>     <b>SO₂:</b> -0.43 µg/m³<br>     </div>`)[0];
                popup_06f8c242dfcd83dc7d15b1803bcb37a8.setContent(html_ed49f29ed36210ac23307acbaaee4201);
            
        

        marker_8f278b561970862f4f24fb7605d42d1b.bindPopup(popup_06f8c242dfcd83dc7d15b1803bcb37a8)
        ;

        
    
    
                marker_8f278b561970862f4f24fb7605d42d1b.setIcon(icon_f11fe8bcc9819234f1d42f0d385a9c1a);
            
    
            var marker_ec47cce5483fbebf125fabbfda7bebdc = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_150f07dceed8ef1fbbea1e848754380c = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_64204008918f5aeab1a2f17ae1db9e2b = L.popup({
  "maxWidth": 300,
});

        
            
                var html_470d4b59ea179f61e473bae55ed7c324 = $(`<div id="html_470d4b59ea179f61e473bae55ed7c324" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 1.54 µg/m³<br>     <b>NO₂:</b> 1.13 µg/m³<br>     <b>SO₂:</b> 1.02 µg/m³<br>     </div>`)[0];
                popup_64204008918f5aeab1a2f17ae1db9e2b.setContent(html_470d4b59ea179f61e473bae55ed7c324);
            
        

        marker_ec47cce5483fbebf125fabbfda7bebdc.bindPopup(popup_64204008918f5aeab1a2f17ae1db9e2b)
        ;

        
    
    
                marker_ec47cce5483fbebf125fabbfda7bebdc.setIcon(icon_150f07dceed8ef1fbbea1e848754380c);
            
    
            var marker_e64164eca88f78f07346a681d4d78b39 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_6af429c6d1c32f920dc0becde762c6b4 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_4160ed778c67b880288a3d03cb48c798 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_5e9592f283152192c53e5563f1ae6458 = $(`<div id="html_5e9592f283152192c53e5563f1ae6458" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.54 µg/m³<br>     <b>NO₂:</b> 2.56 µg/m³<br>     <b>SO₂:</b> 0.50 µg/m³<br>     </div>`)[0];
                popup_4160ed778c67b880288a3d03cb48c798.setContent(html_5e9592f283152192c53e5563f1ae6458);
            
        

        marker_e64164eca88f78f07346a681d4d78b39.bindPopup(popup_4160ed778c67b880288a3d03cb48c798)
        ;

        
    
    
                marker_e64164eca88f78f07346a681d4d78b39.setIcon(icon_6af429c6d1c32f920dc0becde762c6b4);
            
    
            var marker_86d74d498e79d5a62f5fe043469d3a35 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_2fa2932adca4baf3c188e27045374001 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_75a4e3bedeebeebc8c31ac8db46e7131 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_2b8fa351846445baae3b691f8dc56f6d = $(`<div id="html_2b8fa351846445baae3b691f8dc56f6d" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.19 µg/m³<br>     <b>NO₂:</b> 1.73 µg/m³<br>     <b>SO₂:</b> 2.13 µg/m³<br>     </div>`)[0];
                popup_75a4e3bedeebeebc8c31ac8db46e7131.setContent(html_2b8fa351846445baae3b691f8dc56f6d);
            
        

        marker_86d74d498e79d5a62f5fe043469d3a35.bindPopup(popup_75a4e3bedeebeebc8c31ac8db46e7131)
        ;

        
    
    
                marker_86d74d498e79d5a62f5fe043469d3a35.setIcon(icon_2fa2932adca4baf3c188e27045374001);
            
    
            var marker_5595b897ee31a0d6e7d835ba922340eb = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_0f16b6dbec6930d4f3b64d4414bc159c = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_0c53c4d63986fb365b4735cdaf62e41f = L.popup({
  "maxWidth": 300,
});

        
            
                var html_e32cfccb1381a27df6a8551d97475312 = $(`<div id="html_e32cfccb1381a27df6a8551d97475312" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.33 µg/m³<br>     <b>NO₂:</b> 2.65 µg/m³<br>     <b>SO₂:</b> 0.34 µg/m³<br>     </div>`)[0];
                popup_0c53c4d63986fb365b4735cdaf62e41f.setContent(html_e32cfccb1381a27df6a8551d97475312);
            
        

        marker_5595b897ee31a0d6e7d835ba922340eb.bindPopup(popup_0c53c4d63986fb365b4735cdaf62e41f)
        ;

        
    
    
                marker_5595b897ee31a0d6e7d835ba922340eb.setIcon(icon_0f16b6dbec6930d4f3b64d4414bc159c);
            
    
            var marker_4b775e8a9f35c9ac003c3ebec7753ed3 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_add737770b8a6683adc697e4aba3ed82 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_dc335f57d580b58de944e6497fcd8b04 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_a7c07db50fb4d5b7cf28decba5ac2975 = $(`<div id="html_a7c07db50fb4d5b7cf28decba5ac2975" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 1.82 µg/m³<br>     <b>NO₂:</b> 2.99 µg/m³<br>     <b>SO₂:</b> 1.42 µg/m³<br>     </div>`)[0];
                popup_dc335f57d580b58de944e6497fcd8b04.setContent(html_a7c07db50fb4d5b7cf28decba5ac2975);
            
        

        marker_4b775e8a9f35c9ac003c3ebec7753ed3.bindPopup(popup_dc335f57d580b58de944e6497fcd8b04)
        ;

        
    
    
                marker_4b775e8a9f35c9ac003c3ebec7753ed3.setIcon(icon_add737770b8a6683adc697e4aba3ed82);
            
    
            var marker_bce7b617707e6055f3021b93fef46450 = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_a4adb332eb17584a818bb08b7398620e = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_8dd944041fb55864d1e4604c4a2f2e3f = L.popup({
  "maxWidth": 300,
});

        
            
                var html_6299de9bf4c8e141e7d5036c2ddcc5fd = $(`<div id="html_6299de9bf4c8e141e7d5036c2ddcc5fd" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.77 µg/m³<br>     <b>NO₂:</b> 0.42 µg/m³<br>     <b>SO₂:</b> -0.13 µg/m³<br>     </div>`)[0];
                popup_8dd944041fb55864d1e4604c4a2f2e3f.setContent(html_6299de9bf4c8e141e7d5036c2ddcc5fd);
            
        

        marker_bce7b617707e6055f3021b93fef46450.bindPopup(popup_8dd944041fb55864d1e4604c4a2f2e3f)
        ;

        
    
    
                marker_bce7b617707e6055f3021b93fef46450.setIcon(icon_a4adb332eb17584a818bb08b7398620e);
            
    
            var marker_f5719f3b3361e34f874bcf3027dd3925 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_bfa56fa9eedc04e1af81381d7a761e4d = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_a27765bce533e2dc3d11f10173caff54 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_063985191c17f67dac9f78015939c213 = $(`<div id="html_063985191c17f67dac9f78015939c213" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.48 µg/m³<br>     <b>NO₂:</b> 2.58 µg/m³<br>     <b>SO₂:</b> 0.48 µg/m³<br>     </div>`)[0];
                popup_a27765bce533e2dc3d11f10173caff54.setContent(html_063985191c17f67dac9f78015939c213);
            
        

        marker_f5719f3b3361e34f874bcf3027dd3925.bindPopup(popup_a27765bce533e2dc3d11f10173caff54)
        ;

        
    
    
                marker_f5719f3b3361e34f874bcf3027dd3925.setIcon(icon_bfa56fa9eedc04e1af81381d7a761e4d);
            
    
            var marker_e078d3e58f9cae832a859539db70db7c = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_38cf37b6cc98b337a58eac1b0a5f42d9 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_a890eca7e8b8aa44441d2bb97858faa6 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_bda41770d8dec8843917f41e29170638 = $(`<div id="html_bda41770d8dec8843917f41e29170638" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.48 µg/m³<br>     <b>NO₂:</b> 1.64 µg/m³<br>     <b>SO₂:</b> 1.25 µg/m³<br>     </div>`)[0];
                popup_a890eca7e8b8aa44441d2bb97858faa6.setContent(html_bda41770d8dec8843917f41e29170638);
            
        

        marker_e078d3e58f9cae832a859539db70db7c.bindPopup(popup_a890eca7e8b8aa44441d2bb97858faa6)
        ;

        
    
    
                marker_e078d3e58f9cae832a859539db70db7c.setIcon(icon_38cf37b6cc98b337a58eac1b0a5f42d9);
            
    
            var marker_91e445bcb251898b24664a5793035e51 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_0c2e434877b71ccbf1c0c15830ad8f06 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_04ba3326dbab2deddb7bfa25dcdb172b = L.popup({
  "maxWidth": 300,
});

        
            
                var html_33a9606f11d032753f190f3e814c752a = $(`<div id="html_33a9606f11d032753f190f3e814c752a" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.10 µg/m³<br>     <b>NO₂:</b> 0.07 µg/m³<br>     <b>SO₂:</b> -0.50 µg/m³<br>     </div>`)[0];
                popup_04ba3326dbab2deddb7bfa25dcdb172b.setContent(html_33a9606f11d032753f190f3e814c752a);
            
        

        marker_91e445bcb251898b24664a5793035e51.bindPopup(popup_04ba3326dbab2deddb7bfa25dcdb172b)
        ;

        
    
    
                marker_91e445bcb251898b24664a5793035e51.setIcon(icon_0c2e434877b71ccbf1c0c15830ad8f06);
            
    
            var marker_81e92199ab6bf3e37baac25103e2ef01 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_4d98d66a02bd77584ae915fa1cbb5640 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_a063a70b94faea4cd82a1b615bd08119 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_2bf3b1392d50e98ea8b2a0bb5c54560d = $(`<div id="html_2bf3b1392d50e98ea8b2a0bb5c54560d" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.79 µg/m³<br>     <b>NO₂:</b> 2.24 µg/m³<br>     <b>SO₂:</b> 2.15 µg/m³<br>     </div>`)[0];
                popup_a063a70b94faea4cd82a1b615bd08119.setContent(html_2bf3b1392d50e98ea8b2a0bb5c54560d);
            
        

        marker_81e92199ab6bf3e37baac25103e2ef01.bindPopup(popup_a063a70b94faea4cd82a1b615bd08119)
        ;

        
    
    
                marker_81e92199ab6bf3e37baac25103e2ef01.setIcon(icon_4d98d66a02bd77584ae915fa1cbb5640);
            
    
            var marker_fbc554ea421652ae2c56654efaf1a852 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_c33dc1efd0482ab5a043f75bb96ad154 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_48616f9d89b79c8f5d34318263b1dd82 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_68ea961776ed75d2e806c104df4d1acf = $(`<div id="html_68ea961776ed75d2e806c104df4d1acf" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 2.47 µg/m³<br>     <b>NO₂:</b> 3.28 µg/m³<br>     <b>SO₂:</b> 2.17 µg/m³<br>     </div>`)[0];
                popup_48616f9d89b79c8f5d34318263b1dd82.setContent(html_68ea961776ed75d2e806c104df4d1acf);
            
        

        marker_fbc554ea421652ae2c56654efaf1a852.bindPopup(popup_48616f9d89b79c8f5d34318263b1dd82)
        ;

        
    
    
                marker_fbc554ea421652ae2c56654efaf1a852.setIcon(icon_c33dc1efd0482ab5a043f75bb96ad154);
            
    
            var marker_5009d6d50fed16c4b80b33b6e2afb55a = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_7bba45c513a4fc5ff4f4cf95b6d09165 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_59fa8855d6e4b44b932dc6562b8f42d0 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_0dd94b93e3555ae7caf8aa01b11bd71e = $(`<div id="html_0dd94b93e3555ae7caf8aa01b11bd71e" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.98 µg/m³<br>     <b>NO₂:</b> 1.97 µg/m³<br>     <b>SO₂:</b> 2.09 µg/m³<br>     </div>`)[0];
                popup_59fa8855d6e4b44b932dc6562b8f42d0.setContent(html_0dd94b93e3555ae7caf8aa01b11bd71e);
            
        

        marker_5009d6d50fed16c4b80b33b6e2afb55a.bindPopup(popup_59fa8855d6e4b44b932dc6562b8f42d0)
        ;

        
    
    
                marker_5009d6d50fed16c4b80b33b6e2afb55a.setIcon(icon_7bba45c513a4fc5ff4f4cf95b6d09165);
            
    
            var marker_68302b5af023051f9cbb3c05a5b67738 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_1541d4725ba353652bff8e120794ce66 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_86d1c9ce846206369992493299d94d49 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_af4e5911b3a5267d3382516083ccd69c = $(`<div id="html_af4e5911b3a5267d3382516083ccd69c" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.16 µg/m³<br>     <b>NO₂:</b> 2.25 µg/m³<br>     <b>SO₂:</b> 0.21 µg/m³<br>     </div>`)[0];
                popup_86d1c9ce846206369992493299d94d49.setContent(html_af4e5911b3a5267d3382516083ccd69c);
            
        

        marker_68302b5af023051f9cbb3c05a5b67738.bindPopup(popup_86d1c9ce846206369992493299d94d49)
        ;

        
    
    
                marker_68302b5af023051f9cbb3c05a5b67738.setIcon(icon_1541d4725ba353652bff8e120794ce66);
            
    
            var marker_f9c44a1d8f2069a197b2e6d4220045a1 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_758d741f7665706399bd3fecf9b9e3c5 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_2c486b11323b224647abb7aa65ba1903 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_7b43e5ea1eae2f68f947118787ddef7a = $(`<div id="html_7b43e5ea1eae2f68f947118787ddef7a" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.28 µg/m³<br>     <b>NO₂:</b> 2.31 µg/m³<br>     <b>SO₂:</b> 1.70 µg/m³<br>     </div>`)[0];
                popup_2c486b11323b224647abb7aa65ba1903.setContent(html_7b43e5ea1eae2f68f947118787ddef7a);
            
        

        marker_f9c44a1d8f2069a197b2e6d4220045a1.bindPopup(popup_2c486b11323b224647abb7aa65ba1903)
        ;

        
    
    
                marker_f9c44a1d8f2069a197b2e6d4220045a1.setIcon(icon_758d741f7665706399bd3fecf9b9e3c5);
            
    
            var marker_23f8d8a93eae6299f1cf8a97773af640 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_bbd0cf4aa41f1878962657e2c79728ca = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_ea7ae51277b18691f217f7c1976a17f3 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_ae72eef3499b13a9fe6200b209cb3a1f = $(`<div id="html_ae72eef3499b13a9fe6200b209cb3a1f" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 1.06 µg/m³<br>     <b>NO₂:</b> 2.19 µg/m³<br>     <b>SO₂:</b> 0.45 µg/m³<br>     </div>`)[0];
                popup_ea7ae51277b18691f217f7c1976a17f3.setContent(html_ae72eef3499b13a9fe6200b209cb3a1f);
            
        

        marker_23f8d8a93eae6299f1cf8a97773af640.bindPopup(popup_ea7ae51277b18691f217f7c1976a17f3)
        ;

        
    
    
                marker_23f8d8a93eae6299f1cf8a97773af640.setIcon(icon_bbd0cf4aa41f1878962657e2c79728ca);
            
    
            var marker_d2084f0b5f1c9195a85b21e9d076872a = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_0eaccf67c49c6ddb320f4b1b3e182dac = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_a1eeabfa2dcf80498d0802faa72d9703 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_95af7383b7eaffa60214af91d411ea34 = $(`<div id="html_95af7383b7eaffa60214af91d411ea34" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 8.00 µg/m³<br>     <b>NO₂:</b> 6.36 µg/m³<br>     <b>SO₂:</b> 5.47 µg/m³<br>     </div>`)[0];
                popup_a1eeabfa2dcf80498d0802faa72d9703.setContent(html_95af7383b7eaffa60214af91d411ea34);
            
        

        marker_d2084f0b5f1c9195a85b21e9d076872a.bindPopup(popup_a1eeabfa2dcf80498d0802faa72d9703)
        ;

        
    
    
                marker_d2084f0b5f1c9195a85b21e9d076872a.setIcon(icon_0eaccf67c49c6ddb320f4b1b3e182dac);
            
    
            var marker_27882433fb6c56501bff7ff5aafeae2f = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_85ebddaf2d0d7c30f156d2fb9e22c98e = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_3fe968cb380d1c2d4bf4dade4ec65188 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_4eacf4dabd052f902af2125ee16a3feb = $(`<div id="html_4eacf4dabd052f902af2125ee16a3feb" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 2.46 µg/m³<br>     <b>NO₂:</b> 0.48 µg/m³<br>     <b>SO₂:</b> 1.89 µg/m³<br>     </div>`)[0];
                popup_3fe968cb380d1c2d4bf4dade4ec65188.setContent(html_4eacf4dabd052f902af2125ee16a3feb);
            
        

        marker_27882433fb6c56501bff7ff5aafeae2f.bindPopup(popup_3fe968cb380d1c2d4bf4dade4ec65188)
        ;

        
    
    
                marker_27882433fb6c56501bff7ff5aafeae2f.setIcon(icon_85ebddaf2d0d7c30f156d2fb9e22c98e);
            
    
            var marker_9df926a81d38d27bf6a214bbc1c9fb38 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_639571b96b175edefab4f91560f24585 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_11b25ddcb7b124a8c0d92701491ac277 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_3e01ba01205f075656bc37a16918e7f4 = $(`<div id="html_3e01ba01205f075656bc37a16918e7f4" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 0.23 µg/m³<br>     <b>NO₂:</b> 0.48 µg/m³<br>     <b>SO₂:</b> 0.13 µg/m³<br>     </div>`)[0];
                popup_11b25ddcb7b124a8c0d92701491ac277.setContent(html_3e01ba01205f075656bc37a16918e7f4);
            
        

        marker_9df926a81d38d27bf6a214bbc1c9fb38.bindPopup(popup_11b25ddcb7b124a8c0d92701491ac277)
        ;

        
    
    
                marker_9df926a81d38d27bf6a214bbc1c9fb38.setIcon(icon_639571b96b175edefab4f91560f24585);
            
    
            var marker_5d7759dad7a87fb91ad92f9923ebe07f = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_fa4d80a9be83354ddad7683d6ca70219 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_cdd27ac56f01abc2393d99f93121e7fd = L.popup({
  "maxWidth": 300,
});

        
            
                var html_2b74e6e179d417383215e72c379c5e99 = $(`<div id="html_2b74e6e179d417383215e72c379c5e99" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 7.56 µg/m³<br>     <b>NO₂:</b> 6.28 µg/m³<br>     <b>SO₂:</b> 5.46 µg/m³<br>     </div>`)[0];
                popup_cdd27ac56f01abc2393d99f93121e7fd.setContent(html_2b74e6e179d417383215e72c379c5e99);
            
        

        marker_5d7759dad7a87fb91ad92f9923ebe07f.bindPopup(popup_cdd27ac56f01abc2393d99f93121e7fd)
        ;

        
    
    
                marker_5d7759dad7a87fb91ad92f9923ebe07f.setIcon(icon_fa4d80a9be83354ddad7683d6ca70219);
            
    
            var marker_bb8fa9d689ae8bef793b6106ef07d8b4 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_fc9f94e7841b486d76f35ed3e23a8850 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_49ab4082e784b78d448914a027e444c8 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_38294912564f04394790f74d19a701b1 = $(`<div id="html_38294912564f04394790f74d19a701b1" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.77 µg/m³<br>     <b>NO₂:</b> 3.14 µg/m³<br>     <b>SO₂:</b> 2.25 µg/m³<br>     </div>`)[0];
                popup_49ab4082e784b78d448914a027e444c8.setContent(html_38294912564f04394790f74d19a701b1);
            
        

        marker_bb8fa9d689ae8bef793b6106ef07d8b4.bindPopup(popup_49ab4082e784b78d448914a027e444c8)
        ;

        
    
    
                marker_bb8fa9d689ae8bef793b6106ef07d8b4.setIcon(icon_fc9f94e7841b486d76f35ed3e23a8850);
            
    
            var marker_6516373743db6856df1972575e20331e = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_acca9edf14dfadfc09aab4cc7fb03006 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_dbb2bf53b41311714e7a2a94520a1b90 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_61de2c64adbe99ab5a43f8805e817c71 = $(`<div id="html_61de2c64adbe99ab5a43f8805e817c71" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.61 µg/m³<br>     <b>NO₂:</b> 2.43 µg/m³<br>     <b>SO₂:</b> 2.81 µg/m³<br>     </div>`)[0];
                popup_dbb2bf53b41311714e7a2a94520a1b90.setContent(html_61de2c64adbe99ab5a43f8805e817c71);
            
        

        marker_6516373743db6856df1972575e20331e.bindPopup(popup_dbb2bf53b41311714e7a2a94520a1b90)
        ;

        
    
    
                marker_6516373743db6856df1972575e20331e.setIcon(icon_acca9edf14dfadfc09aab4cc7fb03006);
            
    
            var marker_cf6e21b767ef30c0649ff99f31175cc4 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_6ea1f82bc49147a7ebbe476b042b1efe = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_0caa4af10749e11e15cdecf2a64a0c51 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_2d2578c5f419eaac4753530f8f1e6655 = $(`<div id="html_2d2578c5f419eaac4753530f8f1e6655" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.29 µg/m³<br>     <b>NO₂:</b> 2.27 µg/m³<br>     <b>SO₂:</b> 0.89 µg/m³<br>     </div>`)[0];
                popup_0caa4af10749e11e15cdecf2a64a0c51.setContent(html_2d2578c5f419eaac4753530f8f1e6655);
            
        

        marker_cf6e21b767ef30c0649ff99f31175cc4.bindPopup(popup_0caa4af10749e11e15cdecf2a64a0c51)
        ;

        
    
    
                marker_cf6e21b767ef30c0649ff99f31175cc4.setIcon(icon_6ea1f82bc49147a7ebbe476b042b1efe);
            
    
            var marker_61b2cb1faba138ec63dd5a1026a60c73 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_a737c535f97b067de65a5cebcaad4829 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_200e2d060565c49c98ad7d089c21fbee = L.popup({
  "maxWidth": 300,
});

        
            
                var html_4d9431f3a9304643e3dcf8d043286f79 = $(`<div id="html_4d9431f3a9304643e3dcf8d043286f79" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 1.93 µg/m³<br>     <b>NO₂:</b> 2.62 µg/m³<br>     <b>SO₂:</b> 1.15 µg/m³<br>     </div>`)[0];
                popup_200e2d060565c49c98ad7d089c21fbee.setContent(html_4d9431f3a9304643e3dcf8d043286f79);
            
        

        marker_61b2cb1faba138ec63dd5a1026a60c73.bindPopup(popup_200e2d060565c49c98ad7d089c21fbee)
        ;

        
    
    
                marker_61b2cb1faba138ec63dd5a1026a60c73.setIcon(icon_a737c535f97b067de65a5cebcaad4829);
            
    
            var marker_9049428b861a877f10757e89607d1d9b = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_e5380cc8130b9da8139760a7b8daf1ec = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_9ed7fd8eb7936d1607e02b2a81beb0d4 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_d271ec65b936dce2593a0d6b52a0fc24 = $(`<div id="html_d271ec65b936dce2593a0d6b52a0fc24" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 1.31 µg/m³<br>     <b>NO₂:</b> 3.31 µg/m³<br>     <b>SO₂:</b> 0.72 µg/m³<br>     </div>`)[0];
                popup_9ed7fd8eb7936d1607e02b2a81beb0d4.setContent(html_d271ec65b936dce2593a0d6b52a0fc24);
            
        

        marker_9049428b861a877f10757e89607d1d9b.bindPopup(popup_9ed7fd8eb7936d1607e02b2a81beb0d4)
        ;

        
    
    
                marker_9049428b861a877f10757e89607d1d9b.setIcon(icon_e5380cc8130b9da8139760a7b8daf1ec);
            
    
            var marker_6948e9ca3c81387154104be7676b95f5 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_48000ea426c32ca905023970669ba7bb = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_65bc65e0ffc7841cbac79b11d95c3f79 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_3399531bb7a997b8b98bd555355d3237 = $(`<div id="html_3399531bb7a997b8b98bd555355d3237" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> -0.21 µg/m³<br>     <b>NO₂:</b> 0.51 µg/m³<br>     <b>SO₂:</b> 0.30 µg/m³<br>     </div>`)[0];
                popup_65bc65e0ffc7841cbac79b11d95c3f79.setContent(html_3399531bb7a997b8b98bd555355d3237);
            
        

        marker_6948e9ca3c81387154104be7676b95f5.bindPopup(popup_65bc65e0ffc7841cbac79b11d95c3f79)
        ;

        
    
    
                marker_6948e9ca3c81387154104be7676b95f5.setIcon(icon_48000ea426c32ca905023970669ba7bb);
            
    
            var marker_784626b4818765be052d6a2f80f030af = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_f72f67b05d41216d63aeb8281003408d = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_1565ad6cece79973dc5bebe183d5ba35 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_dcf238544581509dce1e03e40b256cf5 = $(`<div id="html_dcf238544581509dce1e03e40b256cf5" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.35 µg/m³<br>     <b>NO₂:</b> 0.40 µg/m³<br>     <b>SO₂:</b> 0.47 µg/m³<br>     </div>`)[0];
                popup_1565ad6cece79973dc5bebe183d5ba35.setContent(html_dcf238544581509dce1e03e40b256cf5);
            
        

        marker_784626b4818765be052d6a2f80f030af.bindPopup(popup_1565ad6cece79973dc5bebe183d5ba35)
        ;

        
    
    
                marker_784626b4818765be052d6a2f80f030af.setIcon(icon_f72f67b05d41216d63aeb8281003408d);
            
    
            var marker_219847d12a655f4d3f91557afde6878f = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_b0a00fda53ebc42af3d9332a7cd1947b = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_e9227cb5ac2093ccc4cf9f725e0bed66 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_1f32e21ff4bf81263c0d8c41983a449c = $(`<div id="html_1f32e21ff4bf81263c0d8c41983a449c" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 1.91 µg/m³<br>     <b>NO₂:</b> 2.59 µg/m³<br>     <b>SO₂:</b> 1.11 µg/m³<br>     </div>`)[0];
                popup_e9227cb5ac2093ccc4cf9f725e0bed66.setContent(html_1f32e21ff4bf81263c0d8c41983a449c);
            
        

        marker_219847d12a655f4d3f91557afde6878f.bindPopup(popup_e9227cb5ac2093ccc4cf9f725e0bed66)
        ;

        
    
    
                marker_219847d12a655f4d3f91557afde6878f.setIcon(icon_b0a00fda53ebc42af3d9332a7cd1947b);
            
    
            var marker_189a1860670385f28dc23a47eebdd31f = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_2e9dcc4894f818ab0658000318471ad4 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_5fce0a6d0341944e37c255b73162c0bb = L.popup({
  "maxWidth": 300,
});

        
            
                var html_43b39fd9754dc2b337bfa5524e68dd44 = $(`<div id="html_43b39fd9754dc2b337bfa5524e68dd44" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> 0.91 µg/m³<br>     <b>NO₂:</b> 0.95 µg/m³<br>     <b>SO₂:</b> 2.13 µg/m³<br>     </div>`)[0];
                popup_5fce0a6d0341944e37c255b73162c0bb.setContent(html_43b39fd9754dc2b337bfa5524e68dd44);
            
        

        marker_189a1860670385f28dc23a47eebdd31f.bindPopup(popup_5fce0a6d0341944e37c255b73162c0bb)
        ;

        
    
    
                marker_189a1860670385f28dc23a47eebdd31f.setIcon(icon_2e9dcc4894f818ab0658000318471ad4);
            
    
            var marker_a0de9049d40ae97e913f48a9f85363c2 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_67b0a4ef44d427108711b56c94a17249 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_42f8203c70d6b319b2887130f655dad3 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_050b1bb799097a12efa082a29251a8e1 = $(`<div id="html_050b1bb799097a12efa082a29251a8e1" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.28 µg/m³<br>     <b>NO₂:</b> 0.53 µg/m³<br>     <b>SO₂:</b> 0.43 µg/m³<br>     </div>`)[0];
                popup_42f8203c70d6b319b2887130f655dad3.setContent(html_050b1bb799097a12efa082a29251a8e1);
            
        

        marker_a0de9049d40ae97e913f48a9f85363c2.bindPopup(popup_42f8203c70d6b319b2887130f655dad3)
        ;

        
    
    
                marker_a0de9049d40ae97e913f48a9f85363c2.setIcon(icon_67b0a4ef44d427108711b56c94a17249);
            
    
            var marker_4fd5bb04b389a27ce8002f3bf8ee5993 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_683db05c560a79dd34697c0cb0623b4e = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_254de6ac156475a9103b7478729259b7 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_d7aecd244c56c31f7835f0080caea7bb = $(`<div id="html_d7aecd244c56c31f7835f0080caea7bb" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.88 µg/m³<br>     <b>NO₂:</b> 1.97 µg/m³<br>     <b>SO₂:</b> 1.85 µg/m³<br>     </div>`)[0];
                popup_254de6ac156475a9103b7478729259b7.setContent(html_d7aecd244c56c31f7835f0080caea7bb);
            
        

        marker_4fd5bb04b389a27ce8002f3bf8ee5993.bindPopup(popup_254de6ac156475a9103b7478729259b7)
        ;

        
    
    
                marker_4fd5bb04b389a27ce8002f3bf8ee5993.setIcon(icon_683db05c560a79dd34697c0cb0623b4e);
            
    
            var marker_414283ac4d17e76cd2bac697557bae8e = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_8d91eb2854cdf02def469ee2937f1828 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_d2017376f139847773475580344b86b6 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_8a178b1e27521f7c5c77e733dbbed4b8 = $(`<div id="html_8a178b1e27521f7c5c77e733dbbed4b8" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 4.47 µg/m³<br>     <b>NO₂:</b> 4.95 µg/m³<br>     <b>SO₂:</b> 4.15 µg/m³<br>     </div>`)[0];
                popup_d2017376f139847773475580344b86b6.setContent(html_8a178b1e27521f7c5c77e733dbbed4b8);
            
        

        marker_414283ac4d17e76cd2bac697557bae8e.bindPopup(popup_d2017376f139847773475580344b86b6)
        ;

        
    
    
                marker_414283ac4d17e76cd2bac697557bae8e.setIcon(icon_8d91eb2854cdf02def469ee2937f1828);
            
    
            var marker_b7eeec03814c5893d72ca3939c71feba = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_add3dd6b4184add13cfc6f5866754720 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_c2532995a75f320fdd2ef0095c9733a0 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_afa41c4d7688b4e82c99b996b3a3965b = $(`<div id="html_afa41c4d7688b4e82c99b996b3a3965b" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 2.18 µg/m³<br>     <b>NO₂:</b> 2.56 µg/m³<br>     <b>SO₂:</b> 1.50 µg/m³<br>     </div>`)[0];
                popup_c2532995a75f320fdd2ef0095c9733a0.setContent(html_afa41c4d7688b4e82c99b996b3a3965b);
            
        

        marker_b7eeec03814c5893d72ca3939c71feba.bindPopup(popup_c2532995a75f320fdd2ef0095c9733a0)
        ;

        
    
    
                marker_b7eeec03814c5893d72ca3939c71feba.setIcon(icon_add3dd6b4184add13cfc6f5866754720);
            
    
            var marker_a3f484f637ffd8e5260f44bf63604aa8 = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_8120a86bb02375035a2d808a86589f93 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_fec9622e1d7d874b04eb4c29ea354140 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_2524af3949642869c0dcbbe14c01f483 = $(`<div id="html_2524af3949642869c0dcbbe14c01f483" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.70 µg/m³<br>     <b>NO₂:</b> 0.12 µg/m³<br>     <b>SO₂:</b> 0.21 µg/m³<br>     </div>`)[0];
                popup_fec9622e1d7d874b04eb4c29ea354140.setContent(html_2524af3949642869c0dcbbe14c01f483);
            
        

        marker_a3f484f637ffd8e5260f44bf63604aa8.bindPopup(popup_fec9622e1d7d874b04eb4c29ea354140)
        ;

        
    
    
                marker_a3f484f637ffd8e5260f44bf63604aa8.setIcon(icon_8120a86bb02375035a2d808a86589f93);
            
    
            var marker_fe0b76f9587653cf03d219848bfcf3a7 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_3f490e46105b3336dc047bdd91ebbd0c = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_78bb169f4b20b7d0f994775378c517a1 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_394745a0c775170cdd9476aa88f2e2d2 = $(`<div id="html_394745a0c775170cdd9476aa88f2e2d2" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 2.17 µg/m³<br>     <b>NO₂:</b> 0.57 µg/m³<br>     <b>SO₂:</b> 1.69 µg/m³<br>     </div>`)[0];
                popup_78bb169f4b20b7d0f994775378c517a1.setContent(html_394745a0c775170cdd9476aa88f2e2d2);
            
        

        marker_fe0b76f9587653cf03d219848bfcf3a7.bindPopup(popup_78bb169f4b20b7d0f994775378c517a1)
        ;

        
    
    
                marker_fe0b76f9587653cf03d219848bfcf3a7.setIcon(icon_3f490e46105b3336dc047bdd91ebbd0c);
            
    
            var marker_4f216abf666bbde339255989136c33a6 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_235c50e3cee734dc23f46aacd7842f1f = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_d578e13ec914860e23d1305787ef5bd0 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_84ce739abb8ad8ec635d4189a88b30ba = $(`<div id="html_84ce739abb8ad8ec635d4189a88b30ba" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.65 µg/m³<br>     <b>NO₂:</b> 1.13 µg/m³<br>     <b>SO₂:</b> 1.05 µg/m³<br>     </div>`)[0];
                popup_d578e13ec914860e23d1305787ef5bd0.setContent(html_84ce739abb8ad8ec635d4189a88b30ba);
            
        

        marker_4f216abf666bbde339255989136c33a6.bindPopup(popup_d578e13ec914860e23d1305787ef5bd0)
        ;

        
    
    
                marker_4f216abf666bbde339255989136c33a6.setIcon(icon_235c50e3cee734dc23f46aacd7842f1f);
            
    
            var marker_ac2c1668fc7b7d62130b16196e1e615a = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_1152ae6e49ec57f0c0bce27e5e8e38b7 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_7e669470b3ba443cf2c2b1fa7d51bdb9 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_1dc5e808106f88bc73a0a765062b1efc = $(`<div id="html_1dc5e808106f88bc73a0a765062b1efc" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 2.07 µg/m³<br>     <b>NO₂:</b> 2.53 µg/m³<br>     <b>SO₂:</b> 1.32 µg/m³<br>     </div>`)[0];
                popup_7e669470b3ba443cf2c2b1fa7d51bdb9.setContent(html_1dc5e808106f88bc73a0a765062b1efc);
            
        

        marker_ac2c1668fc7b7d62130b16196e1e615a.bindPopup(popup_7e669470b3ba443cf2c2b1fa7d51bdb9)
        ;

        
    
    
                marker_ac2c1668fc7b7d62130b16196e1e615a.setIcon(icon_1152ae6e49ec57f0c0bce27e5e8e38b7);
            
    
            var marker_7646d0484b687f1aa98bcc05fac5f487 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_f4e0df7e8c277aaa10c97fa7f3bc5685 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_ef1afbdf012eca76c3b9fbda3d7a0e41 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_cee40d3b96436f4bb5486c1ee25017a8 = $(`<div id="html_cee40d3b96436f4bb5486c1ee25017a8" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 0.75 µg/m³<br>     <b>NO₂:</b> 2.15 µg/m³<br>     <b>SO₂:</b> 0.37 µg/m³<br>     </div>`)[0];
                popup_ef1afbdf012eca76c3b9fbda3d7a0e41.setContent(html_cee40d3b96436f4bb5486c1ee25017a8);
            
        

        marker_7646d0484b687f1aa98bcc05fac5f487.bindPopup(popup_ef1afbdf012eca76c3b9fbda3d7a0e41)
        ;

        
    
    
                marker_7646d0484b687f1aa98bcc05fac5f487.setIcon(icon_f4e0df7e8c277aaa10c97fa7f3bc5685);
            
    
            var marker_b6abadc9ad5b0b7c7e6a0790ab113c64 = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_7858b4208c73643b81b8e336e8f0fd3b = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_cdeb17c5b54384890f5ae1cf81094bb8 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_1ff860ee1f04f42a050b908b54b40c84 = $(`<div id="html_1ff860ee1f04f42a050b908b54b40c84" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> 0.14 µg/m³<br>     <b>NO₂:</b> 0.74 µg/m³<br>     <b>SO₂:</b> 0.05 µg/m³<br>     </div>`)[0];
                popup_cdeb17c5b54384890f5ae1cf81094bb8.setContent(html_1ff860ee1f04f42a050b908b54b40c84);
            
        

        marker_b6abadc9ad5b0b7c7e6a0790ab113c64.bindPopup(popup_cdeb17c5b54384890f5ae1cf81094bb8)
        ;

        
    
    
                marker_b6abadc9ad5b0b7c7e6a0790ab113c64.setIcon(icon_7858b4208c73643b81b8e336e8f0fd3b);
            
    
            var marker_3b0fa93599a54a5b39705614eca7ef0b = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_0c61baef826318cafef899d6ef153f9d = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_72ffbd322a18514e365c0ed77460c99f = L.popup({
  "maxWidth": 300,
});

        
            
                var html_8dc4202cb6496d296fe235f98e2ab30c = $(`<div id="html_8dc4202cb6496d296fe235f98e2ab30c" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.99 µg/m³<br>     <b>NO₂:</b> 2.59 µg/m³<br>     <b>SO₂:</b> 0.24 µg/m³<br>     </div>`)[0];
                popup_72ffbd322a18514e365c0ed77460c99f.setContent(html_8dc4202cb6496d296fe235f98e2ab30c);
            
        

        marker_3b0fa93599a54a5b39705614eca7ef0b.bindPopup(popup_72ffbd322a18514e365c0ed77460c99f)
        ;

        
    
    
                marker_3b0fa93599a54a5b39705614eca7ef0b.setIcon(icon_0c61baef826318cafef899d6ef153f9d);
            
    
            var marker_70e8a76e51a1beb0da404483ba76f55d = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_230023232c3841db13ea6656f261f1f9 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_05a168412259f3a6d9680529b2060e50 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_e8ee6779eead09082bb51c9bbd08e9b8 = $(`<div id="html_e8ee6779eead09082bb51c9bbd08e9b8" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.81 µg/m³<br>     <b>NO₂:</b> 1.31 µg/m³<br>     <b>SO₂:</b> 1.19 µg/m³<br>     </div>`)[0];
                popup_05a168412259f3a6d9680529b2060e50.setContent(html_e8ee6779eead09082bb51c9bbd08e9b8);
            
        

        marker_70e8a76e51a1beb0da404483ba76f55d.bindPopup(popup_05a168412259f3a6d9680529b2060e50)
        ;

        
    
    
                marker_70e8a76e51a1beb0da404483ba76f55d.setIcon(icon_230023232c3841db13ea6656f261f1f9);
            
    
            var marker_a378d9bc821a2ed205367cbf01ba74b9 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_6e58a257ac388de0d4fb4af800753e17 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_88a9f39860c4d5ab75f2b90831196845 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_b8995307a814984bc6045c75d55e2b8d = $(`<div id="html_b8995307a814984bc6045c75d55e2b8d" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 5.06 µg/m³<br>     <b>NO₂:</b> 1.61 µg/m³<br>     <b>SO₂:</b> 4.13 µg/m³<br>     </div>`)[0];
                popup_88a9f39860c4d5ab75f2b90831196845.setContent(html_b8995307a814984bc6045c75d55e2b8d);
            
        

        marker_a378d9bc821a2ed205367cbf01ba74b9.bindPopup(popup_88a9f39860c4d5ab75f2b90831196845)
        ;

        
    
    
                marker_a378d9bc821a2ed205367cbf01ba74b9.setIcon(icon_6e58a257ac388de0d4fb4af800753e17);
            
    
            var marker_c9b5700507eee982fd31b47e450ef03d = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_98ae3ec21c97b13e27e2a61ca42c4a3d = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_2834340f269338606d228c93fd23a123 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_1f41656244057d679454bb45eea3f56b = $(`<div id="html_1f41656244057d679454bb45eea3f56b" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 0.04 µg/m³<br>     <b>NO₂:</b> -0.89 µg/m³<br>     <b>SO₂:</b> -0.85 µg/m³<br>     </div>`)[0];
                popup_2834340f269338606d228c93fd23a123.setContent(html_1f41656244057d679454bb45eea3f56b);
            
        

        marker_c9b5700507eee982fd31b47e450ef03d.bindPopup(popup_2834340f269338606d228c93fd23a123)
        ;

        
    
    
                marker_c9b5700507eee982fd31b47e450ef03d.setIcon(icon_98ae3ec21c97b13e27e2a61ca42c4a3d);
            
    
            var marker_4bb4412fa9bafe6d4d7a76baf678fa5f = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_a53beaee9cfd62f589eb0286a366ef1e = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_de70053d4a6c4b7bf0e2bbd1ddd28ba7 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_08477dbe77fa210a964abf12f635387b = $(`<div id="html_08477dbe77fa210a964abf12f635387b" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 2.59 µg/m³<br>     <b>NO₂:</b> 2.29 µg/m³<br>     <b>SO₂:</b> 1.93 µg/m³<br>     </div>`)[0];
                popup_de70053d4a6c4b7bf0e2bbd1ddd28ba7.setContent(html_08477dbe77fa210a964abf12f635387b);
            
        

        marker_4bb4412fa9bafe6d4d7a76baf678fa5f.bindPopup(popup_de70053d4a6c4b7bf0e2bbd1ddd28ba7)
        ;

        
    
    
                marker_4bb4412fa9bafe6d4d7a76baf678fa5f.setIcon(icon_a53beaee9cfd62f589eb0286a366ef1e);
            
    
            var marker_98b1fdbb8b817f3a39b54f718ec1e416 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_d6e9045630b47840f42f2f7b54f0259c = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_f4abae6166e38c88d07966b9a8873f3c = L.popup({
  "maxWidth": 300,
});

        
            
                var html_6626077b0e09759fa03190d0613603f2 = $(`<div id="html_6626077b0e09759fa03190d0613603f2" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 1.48 µg/m³<br>     <b>NO₂:</b> 2.81 µg/m³<br>     <b>SO₂:</b> 1.10 µg/m³<br>     </div>`)[0];
                popup_f4abae6166e38c88d07966b9a8873f3c.setContent(html_6626077b0e09759fa03190d0613603f2);
            
        

        marker_98b1fdbb8b817f3a39b54f718ec1e416.bindPopup(popup_f4abae6166e38c88d07966b9a8873f3c)
        ;

        
    
    
                marker_98b1fdbb8b817f3a39b54f718ec1e416.setIcon(icon_d6e9045630b47840f42f2f7b54f0259c);
            
    
            var marker_8b15b36e4cf03aa08a92e63927caf28c = L.marker(
                [15.999482273175882, 76.67272036514287],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_d432161efb70d9ec51c9679c07ccf015 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_4dab547f9f50cb0d48d6b661939a8a11 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_bd27a92cbd15e29b677039899e19d37b = $(`<div id="html_bd27a92cbd15e29b677039899e19d37b" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (15.9995, 76.6727)<br>     <hr>     <b>PM2.5:</b> 0.13 µg/m³<br>     <b>NO₂:</b> 1.99 µg/m³<br>     <b>SO₂:</b> 0.78 µg/m³<br>     </div>`)[0];
                popup_4dab547f9f50cb0d48d6b661939a8a11.setContent(html_bd27a92cbd15e29b677039899e19d37b);
            
        

        marker_8b15b36e4cf03aa08a92e63927caf28c.bindPopup(popup_4dab547f9f50cb0d48d6b661939a8a11)
        ;

        
    
    
                marker_8b15b36e4cf03aa08a92e63927caf28c.setIcon(icon_d432161efb70d9ec51c9679c07ccf015);
            
    
            var marker_9505694a366a95aa715c05acb1a8c86e = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_7bf745ca74f650d1437c6ff22a1ed1ce = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_58ee7d221c06dc725ca6329f363788cc = L.popup({
  "maxWidth": 300,
});

        
            
                var html_1efc3211d1ad999c042d8fdfa81a9f67 = $(`<div id="html_1efc3211d1ad999c042d8fdfa81a9f67" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> -0.15 µg/m³<br>     <b>NO₂:</b> -0.78 µg/m³<br>     <b>SO₂:</b> -0.72 µg/m³<br>     </div>`)[0];
                popup_58ee7d221c06dc725ca6329f363788cc.setContent(html_1efc3211d1ad999c042d8fdfa81a9f67);
            
        

        marker_9505694a366a95aa715c05acb1a8c86e.bindPopup(popup_58ee7d221c06dc725ca6329f363788cc)
        ;

        
    
    
                marker_9505694a366a95aa715c05acb1a8c86e.setIcon(icon_7bf745ca74f650d1437c6ff22a1ed1ce);
            
    
            var marker_04221f95ccdf455d0cb2148cb39dd94a = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_197d12b6cbb272ce9b10000058d37666 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_78958a2c853e12865c21a9207b999982 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_c9d77498045d887919956bd8d1bc9159 = $(`<div id="html_c9d77498045d887919956bd8d1bc9159" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.55 µg/m³<br>     <b>NO₂:</b> 0.07 µg/m³<br>     <b>SO₂:</b> 0.40 µg/m³<br>     </div>`)[0];
                popup_78958a2c853e12865c21a9207b999982.setContent(html_c9d77498045d887919956bd8d1bc9159);
            
        

        marker_04221f95ccdf455d0cb2148cb39dd94a.bindPopup(popup_78958a2c853e12865c21a9207b999982)
        ;

        
    
    
                marker_04221f95ccdf455d0cb2148cb39dd94a.setIcon(icon_197d12b6cbb272ce9b10000058d37666);
            
    
            var marker_f9db20eff7fb360587b6201f44cc5f1b = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_35715fd41fb0dc27f0991b360ac87359 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_eae6a956443349321019c1e3df6fb6f4 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_f66df992ff8a76841af019b89dc4f44a = $(`<div id="html_f66df992ff8a76841af019b89dc4f44a" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 2.31 µg/m³<br>     <b>NO₂:</b> 0.45 µg/m³<br>     <b>SO₂:</b> 1.70 µg/m³<br>     </div>`)[0];
                popup_eae6a956443349321019c1e3df6fb6f4.setContent(html_f66df992ff8a76841af019b89dc4f44a);
            
        

        marker_f9db20eff7fb360587b6201f44cc5f1b.bindPopup(popup_eae6a956443349321019c1e3df6fb6f4)
        ;

        
    
    
                marker_f9db20eff7fb360587b6201f44cc5f1b.setIcon(icon_35715fd41fb0dc27f0991b360ac87359);
            
    
            var marker_13bf1502c746c722f9b96e4313bdf9e7 = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_4fe5484555172a0aa259cc2d7f1ba8b8 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_2b0bd2c9907ef06a21059dbc68af391a = L.popup({
  "maxWidth": 300,
});

        
            
                var html_5760dcb746b2dd9dd3c616ee6ef23cf5 = $(`<div id="html_5760dcb746b2dd9dd3c616ee6ef23cf5" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.53 µg/m³<br>     <b>NO₂:</b> 0.12 µg/m³<br>     <b>SO₂:</b> -0.26 µg/m³<br>     </div>`)[0];
                popup_2b0bd2c9907ef06a21059dbc68af391a.setContent(html_5760dcb746b2dd9dd3c616ee6ef23cf5);
            
        

        marker_13bf1502c746c722f9b96e4313bdf9e7.bindPopup(popup_2b0bd2c9907ef06a21059dbc68af391a)
        ;

        
    
    
                marker_13bf1502c746c722f9b96e4313bdf9e7.setIcon(icon_4fe5484555172a0aa259cc2d7f1ba8b8);
            
    
            var marker_8e95753697949862fb4996cf67c8e7a6 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_69f8a7150f6d43155a62ece82669453d = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_916372c7b05b4b624a77640e48a4c735 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_4e9af95d33f60e3a04e912d9bbb324c9 = $(`<div id="html_4e9af95d33f60e3a04e912d9bbb324c9" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 0.82 µg/m³<br>     <b>NO₂:</b> 2.04 µg/m³<br>     <b>SO₂:</b> 0.50 µg/m³<br>     </div>`)[0];
                popup_916372c7b05b4b624a77640e48a4c735.setContent(html_4e9af95d33f60e3a04e912d9bbb324c9);
            
        

        marker_8e95753697949862fb4996cf67c8e7a6.bindPopup(popup_916372c7b05b4b624a77640e48a4c735)
        ;

        
    
    
                marker_8e95753697949862fb4996cf67c8e7a6.setIcon(icon_69f8a7150f6d43155a62ece82669453d);
            
    
            var marker_b5183b222a5754c71a948d907068578a = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_9c2717c1f2087557e115b7539e8a68f1 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_ab3258ed00f1a123fcf3edd119731e52 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_c5c04830df07652663557c9f51f68cba = $(`<div id="html_c5c04830df07652663557c9f51f68cba" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.16 µg/m³<br>     <b>NO₂:</b> 2.79 µg/m³<br>     <b>SO₂:</b> 0.23 µg/m³<br>     </div>`)[0];
                popup_ab3258ed00f1a123fcf3edd119731e52.setContent(html_c5c04830df07652663557c9f51f68cba);
            
        

        marker_b5183b222a5754c71a948d907068578a.bindPopup(popup_ab3258ed00f1a123fcf3edd119731e52)
        ;

        
    
    
                marker_b5183b222a5754c71a948d907068578a.setIcon(icon_9c2717c1f2087557e115b7539e8a68f1);
            
    
            var marker_10ad8aba66c9c5c5c9a419de5302d1f1 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_16af035ca02b5e2aad018de5366df9aa = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_11828f4a8155c157215821fe20fe79b7 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_2ac1c7f84fe50b1a038ba0fa1de96b24 = $(`<div id="html_2ac1c7f84fe50b1a038ba0fa1de96b24" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.76 µg/m³<br>     <b>NO₂:</b> 1.98 µg/m³<br>     <b>SO₂:</b> 0.46 µg/m³<br>     </div>`)[0];
                popup_11828f4a8155c157215821fe20fe79b7.setContent(html_2ac1c7f84fe50b1a038ba0fa1de96b24);
            
        

        marker_10ad8aba66c9c5c5c9a419de5302d1f1.bindPopup(popup_11828f4a8155c157215821fe20fe79b7)
        ;

        
    
    
                marker_10ad8aba66c9c5c5c9a419de5302d1f1.setIcon(icon_16af035ca02b5e2aad018de5366df9aa);
            
    
            var marker_ffb95bba6dcbf80314983ea4b785ffaf = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_af5291e570c8849420537643426c1b31 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_0b08ddeffcfa10e5b2362bdd9a6630c3 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_4269ede02999e644bbbdc36e4c73d10c = $(`<div id="html_4269ede02999e644bbbdc36e4c73d10c" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 2.11 µg/m³<br>     <b>NO₂:</b> 0.61 µg/m³<br>     <b>SO₂:</b> 1.68 µg/m³<br>     </div>`)[0];
                popup_0b08ddeffcfa10e5b2362bdd9a6630c3.setContent(html_4269ede02999e644bbbdc36e4c73d10c);
            
        

        marker_ffb95bba6dcbf80314983ea4b785ffaf.bindPopup(popup_0b08ddeffcfa10e5b2362bdd9a6630c3)
        ;

        
    
    
                marker_ffb95bba6dcbf80314983ea4b785ffaf.setIcon(icon_af5291e570c8849420537643426c1b31);
            
    
            var marker_6d3d88c3961020214ec708a1d8075970 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_68ef3b4c02c0bf550adbbf61eb61c647 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_7f21ae0a2ad815f337e595fe724a6149 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_17ad81a994a3a38226bd604e263e0817 = $(`<div id="html_17ad81a994a3a38226bd604e263e0817" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 1.39 µg/m³<br>     <b>NO₂:</b> 3.45 µg/m³<br>     <b>SO₂:</b> 0.81 µg/m³<br>     </div>`)[0];
                popup_7f21ae0a2ad815f337e595fe724a6149.setContent(html_17ad81a994a3a38226bd604e263e0817);
            
        

        marker_6d3d88c3961020214ec708a1d8075970.bindPopup(popup_7f21ae0a2ad815f337e595fe724a6149)
        ;

        
    
    
                marker_6d3d88c3961020214ec708a1d8075970.setIcon(icon_68ef3b4c02c0bf550adbbf61eb61c647);
            
    
            var marker_794d2ed3747ffd3b800e7dc31b2b421e = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_1dde94adf538b9ccb7daef8d20cc32b0 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_5f184cf0a513cf60154faa72ec6ed4e4 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_9ef1c1ee8609ab33e159e3df6e236b96 = $(`<div id="html_9ef1c1ee8609ab33e159e3df6e236b96" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> 0.85 µg/m³<br>     <b>NO₂:</b> 0.62 µg/m³<br>     <b>SO₂:</b> 2.08 µg/m³<br>     </div>`)[0];
                popup_5f184cf0a513cf60154faa72ec6ed4e4.setContent(html_9ef1c1ee8609ab33e159e3df6e236b96);
            
        

        marker_794d2ed3747ffd3b800e7dc31b2b421e.bindPopup(popup_5f184cf0a513cf60154faa72ec6ed4e4)
        ;

        
    
    
                marker_794d2ed3747ffd3b800e7dc31b2b421e.setIcon(icon_1dde94adf538b9ccb7daef8d20cc32b0);
            
    
            var marker_f2775f485b7a1b18ac47ddaaa689864a = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_59f85d435b27922d38dec504512b6fd5 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_49c047f33908f7395a07f6deb1326d92 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_508ee179e66dc501947034c90bfce46e = $(`<div id="html_508ee179e66dc501947034c90bfce46e" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.39 µg/m³<br>     <b>NO₂:</b> 2.18 µg/m³<br>     <b>SO₂:</b> 0.81 µg/m³<br>     </div>`)[0];
                popup_49c047f33908f7395a07f6deb1326d92.setContent(html_508ee179e66dc501947034c90bfce46e);
            
        

        marker_f2775f485b7a1b18ac47ddaaa689864a.bindPopup(popup_49c047f33908f7395a07f6deb1326d92)
        ;

        
    
    
                marker_f2775f485b7a1b18ac47ddaaa689864a.setIcon(icon_59f85d435b27922d38dec504512b6fd5);
            
    
            var marker_b7121046852289cb1683d53082cc105a = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_5adc6b90500fe41db5dd9679e3cfc418 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_86ecf11f93c531cfa37ad53d47543817 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_56e9e85b8adcf541d3c67608fa0b75cc = $(`<div id="html_56e9e85b8adcf541d3c67608fa0b75cc" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.81 µg/m³<br>     <b>NO₂:</b> 2.34 µg/m³<br>     <b>SO₂:</b> 2.75 µg/m³<br>     </div>`)[0];
                popup_86ecf11f93c531cfa37ad53d47543817.setContent(html_56e9e85b8adcf541d3c67608fa0b75cc);
            
        

        marker_b7121046852289cb1683d53082cc105a.bindPopup(popup_86ecf11f93c531cfa37ad53d47543817)
        ;

        
    
    
                marker_b7121046852289cb1683d53082cc105a.setIcon(icon_5adc6b90500fe41db5dd9679e3cfc418);
            
    
            var marker_be5a6f8357ebaaf0534bf8a22d9699a6 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_47aaf22b188243c818ce9a63dc6c92ba = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_6904880279f765d0380e3cd79883cbdb = L.popup({
  "maxWidth": 300,
});

        
            
                var html_f6e0fb96b0b998b6e5509bc6bdd9b96b = $(`<div id="html_f6e0fb96b0b998b6e5509bc6bdd9b96b" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.35 µg/m³<br>     <b>NO₂:</b> 2.49 µg/m³<br>     <b>SO₂:</b> 0.45 µg/m³<br>     </div>`)[0];
                popup_6904880279f765d0380e3cd79883cbdb.setContent(html_f6e0fb96b0b998b6e5509bc6bdd9b96b);
            
        

        marker_be5a6f8357ebaaf0534bf8a22d9699a6.bindPopup(popup_6904880279f765d0380e3cd79883cbdb)
        ;

        
    
    
                marker_be5a6f8357ebaaf0534bf8a22d9699a6.setIcon(icon_47aaf22b188243c818ce9a63dc6c92ba);
            
    
            var marker_00de1e2d0851cb87623e3eb02005bc03 = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_60273ac94562cb326d79f72391230c9d = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_7f70e85b18220034d6bb29395b4759f2 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_90b5021022802be4722c05d6846095d1 = $(`<div id="html_90b5021022802be4722c05d6846095d1" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.77 µg/m³<br>     <b>NO₂:</b> -0.31 µg/m³<br>     <b>SO₂:</b> -0.12 µg/m³<br>     </div>`)[0];
                popup_7f70e85b18220034d6bb29395b4759f2.setContent(html_90b5021022802be4722c05d6846095d1);
            
        

        marker_00de1e2d0851cb87623e3eb02005bc03.bindPopup(popup_7f70e85b18220034d6bb29395b4759f2)
        ;

        
    
    
                marker_00de1e2d0851cb87623e3eb02005bc03.setIcon(icon_60273ac94562cb326d79f72391230c9d);
            
    
            var marker_24876e4f53225728fda93dbc22577202 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_237a29c0a75379c3dd12eaeb0808744b = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_c09c8582d3fc38b5d4a94bb063512108 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_3e7252731f13f6b282ac8635825e0f78 = $(`<div id="html_3e7252731f13f6b282ac8635825e0f78" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 8.68 µg/m³<br>     <b>NO₂:</b> 6.53 µg/m³<br>     <b>SO₂:</b> 5.45 µg/m³<br>     </div>`)[0];
                popup_c09c8582d3fc38b5d4a94bb063512108.setContent(html_3e7252731f13f6b282ac8635825e0f78);
            
        

        marker_24876e4f53225728fda93dbc22577202.bindPopup(popup_c09c8582d3fc38b5d4a94bb063512108)
        ;

        
    
    
                marker_24876e4f53225728fda93dbc22577202.setIcon(icon_237a29c0a75379c3dd12eaeb0808744b);
            
    
            var marker_3dd799dd9d7ace9696815899d0f0bfcc = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_5d334b72198e91142bdba4cbac8d7786 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_6a99720421371d93904ebed8cd5eb607 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_97bc2cf73dab7e0e4c049698bbb84661 = $(`<div id="html_97bc2cf73dab7e0e4c049698bbb84661" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.64 µg/m³<br>     <b>NO₂:</b> 2.50 µg/m³<br>     <b>SO₂:</b> 2.04 µg/m³<br>     </div>`)[0];
                popup_6a99720421371d93904ebed8cd5eb607.setContent(html_97bc2cf73dab7e0e4c049698bbb84661);
            
        

        marker_3dd799dd9d7ace9696815899d0f0bfcc.bindPopup(popup_6a99720421371d93904ebed8cd5eb607)
        ;

        
    
    
                marker_3dd799dd9d7ace9696815899d0f0bfcc.setIcon(icon_5d334b72198e91142bdba4cbac8d7786);
            
    
            var marker_5d2a3678de220f1f40d4b802b4a9882e = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_e70ef43ab4831b1c431ff1fb7f7f09dd = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_a10d1ba228ed0dca0f8de4f9bd0c052c = L.popup({
  "maxWidth": 300,
});

        
            
                var html_4cb47ee2179935f1a56c44bae1066478 = $(`<div id="html_4cb47ee2179935f1a56c44bae1066478" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.69 µg/m³<br>     <b>NO₂:</b> -0.05 µg/m³<br>     <b>SO₂:</b> -0.43 µg/m³<br>     </div>`)[0];
                popup_a10d1ba228ed0dca0f8de4f9bd0c052c.setContent(html_4cb47ee2179935f1a56c44bae1066478);
            
        

        marker_5d2a3678de220f1f40d4b802b4a9882e.bindPopup(popup_a10d1ba228ed0dca0f8de4f9bd0c052c)
        ;

        
    
    
                marker_5d2a3678de220f1f40d4b802b4a9882e.setIcon(icon_e70ef43ab4831b1c431ff1fb7f7f09dd);
            
    
            var marker_0124fbe2cf99af164689af48e347f7a3 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_9f8582a766dfaf486da9f234282fc0dd = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_cbb91e0ccdcbceae3bfc7a5a25167572 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_2a00ca80c6a9b1780f1ee6cea0f8ee64 = $(`<div id="html_2a00ca80c6a9b1780f1ee6cea0f8ee64" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.66 µg/m³<br>     <b>NO₂:</b> 0.39 µg/m³<br>     <b>SO₂:</b> -0.26 µg/m³<br>     </div>`)[0];
                popup_cbb91e0ccdcbceae3bfc7a5a25167572.setContent(html_2a00ca80c6a9b1780f1ee6cea0f8ee64);
            
        

        marker_0124fbe2cf99af164689af48e347f7a3.bindPopup(popup_cbb91e0ccdcbceae3bfc7a5a25167572)
        ;

        
    
    
                marker_0124fbe2cf99af164689af48e347f7a3.setIcon(icon_9f8582a766dfaf486da9f234282fc0dd);
            
    
            var marker_133c4e338a5d03c8442a29119637f69f = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_a8c9b7417a0b456f5e095d525bc25a33 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_1ded4944911979094e6a79fc5532d9d2 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_c2df82b7a871b18c62ddb4c34d0ed925 = $(`<div id="html_c2df82b7a871b18c62ddb4c34d0ed925" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.49 µg/m³<br>     <b>NO₂:</b> 1.54 µg/m³<br>     <b>SO₂:</b> 1.91 µg/m³<br>     </div>`)[0];
                popup_1ded4944911979094e6a79fc5532d9d2.setContent(html_c2df82b7a871b18c62ddb4c34d0ed925);
            
        

        marker_133c4e338a5d03c8442a29119637f69f.bindPopup(popup_1ded4944911979094e6a79fc5532d9d2)
        ;

        
    
    
                marker_133c4e338a5d03c8442a29119637f69f.setIcon(icon_a8c9b7417a0b456f5e095d525bc25a33);
            
    
            var marker_a744972554fd602c3d13bd7dbabcde87 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_6ad92d15532a58afecd468c81fe5284b = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_7ea9fe0c5382147284a0acfd16a4cc57 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_d62aef93ba823a689aa4bf9cf80af678 = $(`<div id="html_d62aef93ba823a689aa4bf9cf80af678" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.69 µg/m³<br>     <b>NO₂:</b> 2.01 µg/m³<br>     <b>SO₂:</b> 0.56 µg/m³<br>     </div>`)[0];
                popup_7ea9fe0c5382147284a0acfd16a4cc57.setContent(html_d62aef93ba823a689aa4bf9cf80af678);
            
        

        marker_a744972554fd602c3d13bd7dbabcde87.bindPopup(popup_7ea9fe0c5382147284a0acfd16a4cc57)
        ;

        
    
    
                marker_a744972554fd602c3d13bd7dbabcde87.setIcon(icon_6ad92d15532a58afecd468c81fe5284b);
            
    
            var marker_2e3c654e17721202a3533ca46ae4b7e7 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_b69060fc8a02c6cea13b39fc4f9f789e = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_4a1f5832ac2b1141057ad5bcac3472cf = L.popup({
  "maxWidth": 300,
});

        
            
                var html_09d6e2dca0d94815d0e1e3ab61ad0b3f = $(`<div id="html_09d6e2dca0d94815d0e1e3ab61ad0b3f" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.51 µg/m³<br>     <b>NO₂:</b> 0.77 µg/m³<br>     <b>SO₂:</b> 1.93 µg/m³<br>     </div>`)[0];
                popup_4a1f5832ac2b1141057ad5bcac3472cf.setContent(html_09d6e2dca0d94815d0e1e3ab61ad0b3f);
            
        

        marker_2e3c654e17721202a3533ca46ae4b7e7.bindPopup(popup_4a1f5832ac2b1141057ad5bcac3472cf)
        ;

        
    
    
                marker_2e3c654e17721202a3533ca46ae4b7e7.setIcon(icon_b69060fc8a02c6cea13b39fc4f9f789e);
            
    
            var marker_2de82ac71db8ac2b3cbd159078b02da1 = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_34cd9850976db7d25b4aea086471eedc = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_be205c99dd7cda946b94383e7eb1eb78 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_4857ea70a0c8c7372835140c92abc7c5 = $(`<div id="html_4857ea70a0c8c7372835140c92abc7c5" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.59 µg/m³<br>     <b>NO₂:</b> -0.08 µg/m³<br>     <b>SO₂:</b> -0.34 µg/m³<br>     </div>`)[0];
                popup_be205c99dd7cda946b94383e7eb1eb78.setContent(html_4857ea70a0c8c7372835140c92abc7c5);
            
        

        marker_2de82ac71db8ac2b3cbd159078b02da1.bindPopup(popup_be205c99dd7cda946b94383e7eb1eb78)
        ;

        
    
    
                marker_2de82ac71db8ac2b3cbd159078b02da1.setIcon(icon_34cd9850976db7d25b4aea086471eedc);
            
    
            var marker_12e41bfe2d60a11547ed19902bbc1526 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_e60b0b3006ac4f9d7f962a621c93d075 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_23604ca7e24de4ff3a7210b3bfb745db = L.popup({
  "maxWidth": 300,
});

        
            
                var html_ea6946debd213fb8c4c489c4cccad9cc = $(`<div id="html_ea6946debd213fb8c4c489c4cccad9cc" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.08 µg/m³<br>     <b>NO₂:</b> 1.87 µg/m³<br>     <b>SO₂:</b> 1.73 µg/m³<br>     </div>`)[0];
                popup_23604ca7e24de4ff3a7210b3bfb745db.setContent(html_ea6946debd213fb8c4c489c4cccad9cc);
            
        

        marker_12e41bfe2d60a11547ed19902bbc1526.bindPopup(popup_23604ca7e24de4ff3a7210b3bfb745db)
        ;

        
    
    
                marker_12e41bfe2d60a11547ed19902bbc1526.setIcon(icon_e60b0b3006ac4f9d7f962a621c93d075);
            
    
            var marker_e3aadb2ae2aa9bd99e92e6762972aeee = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_8312fb5303dbd6dfd970884dfa0ee011 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_e07cf0fffffb088b15ccc516644ce3b0 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_0b76ffb47ad4b9ac2b8231dad9cb6d37 = $(`<div id="html_0b76ffb47ad4b9ac2b8231dad9cb6d37" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.79 µg/m³<br>     <b>NO₂:</b> 2.24 µg/m³<br>     <b>SO₂:</b> 0.21 µg/m³<br>     </div>`)[0];
                popup_e07cf0fffffb088b15ccc516644ce3b0.setContent(html_0b76ffb47ad4b9ac2b8231dad9cb6d37);
            
        

        marker_e3aadb2ae2aa9bd99e92e6762972aeee.bindPopup(popup_e07cf0fffffb088b15ccc516644ce3b0)
        ;

        
    
    
                marker_e3aadb2ae2aa9bd99e92e6762972aeee.setIcon(icon_8312fb5303dbd6dfd970884dfa0ee011);
            
    
            var marker_adff630e4d7f61b4e9674a3187543b53 = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_c077aa6b787ad11da0b58d72babac992 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_99d7192ed7182de352b1ec91ed001123 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_2e2aa23db5436ccb5e0eef3783086294 = $(`<div id="html_2e2aa23db5436ccb5e0eef3783086294" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> 0.52 µg/m³<br>     <b>NO₂:</b> 0.98 µg/m³<br>     <b>SO₂:</b> 1.45 µg/m³<br>     </div>`)[0];
                popup_99d7192ed7182de352b1ec91ed001123.setContent(html_2e2aa23db5436ccb5e0eef3783086294);
            
        

        marker_adff630e4d7f61b4e9674a3187543b53.bindPopup(popup_99d7192ed7182de352b1ec91ed001123)
        ;

        
    
    
                marker_adff630e4d7f61b4e9674a3187543b53.setIcon(icon_c077aa6b787ad11da0b58d72babac992);
            
    
            var marker_e84bf1b91086c0055b30eb9dde4641f0 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_ae277e0a52ff841b4cc960caa186f24d = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_1e5c95a28d2395aaef7980d37a003551 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_f0a3af81ec1a5b269366017fc8284b2a = $(`<div id="html_f0a3af81ec1a5b269366017fc8284b2a" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.69 µg/m³<br>     <b>NO₂:</b> 2.27 µg/m³<br>     <b>SO₂:</b> 0.31 µg/m³<br>     </div>`)[0];
                popup_1e5c95a28d2395aaef7980d37a003551.setContent(html_f0a3af81ec1a5b269366017fc8284b2a);
            
        

        marker_e84bf1b91086c0055b30eb9dde4641f0.bindPopup(popup_1e5c95a28d2395aaef7980d37a003551)
        ;

        
    
    
                marker_e84bf1b91086c0055b30eb9dde4641f0.setIcon(icon_ae277e0a52ff841b4cc960caa186f24d);
            
    
            var marker_e0470c122cb24aaebe6eb3489874f338 = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_75c47f6623d8b347f3cbac2cac01ef19 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_05bb4287672d8c781c2ea6f7f36eb98a = L.popup({
  "maxWidth": 300,
});

        
            
                var html_3743473c2b097a8f7d177d2cb078417a = $(`<div id="html_3743473c2b097a8f7d177d2cb078417a" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> 2.21 µg/m³<br>     <b>NO₂:</b> 1.75 µg/m³<br>     <b>SO₂:</b> 4.60 µg/m³<br>     </div>`)[0];
                popup_05bb4287672d8c781c2ea6f7f36eb98a.setContent(html_3743473c2b097a8f7d177d2cb078417a);
            
        

        marker_e0470c122cb24aaebe6eb3489874f338.bindPopup(popup_05bb4287672d8c781c2ea6f7f36eb98a)
        ;

        
    
    
                marker_e0470c122cb24aaebe6eb3489874f338.setIcon(icon_75c47f6623d8b347f3cbac2cac01ef19);
            
    
            var marker_bac7ee49178282e44026bc34eb1d174c = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_392e89f32a7c907580db075c01883aa2 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_499b0034f2455d0abe71e6d85e458834 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_b0385e48642b6050548915fe8246da7a = $(`<div id="html_b0385e48642b6050548915fe8246da7a" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 1.18 µg/m³<br>     <b>NO₂:</b> 2.24 µg/m³<br>     <b>SO₂:</b> 0.51 µg/m³<br>     </div>`)[0];
                popup_499b0034f2455d0abe71e6d85e458834.setContent(html_b0385e48642b6050548915fe8246da7a);
            
        

        marker_bac7ee49178282e44026bc34eb1d174c.bindPopup(popup_499b0034f2455d0abe71e6d85e458834)
        ;

        
    
    
                marker_bac7ee49178282e44026bc34eb1d174c.setIcon(icon_392e89f32a7c907580db075c01883aa2);
            
    
            var marker_9032d7f7a4589e8d04118baa4e09057f = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_5b11e6e044e9d7c9f4f66caeaf0d7d3b = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_d2c699998264ff0e0c22b488384186de = L.popup({
  "maxWidth": 300,
});

        
            
                var html_59794dfc5e5c68c27082640a78ec28af = $(`<div id="html_59794dfc5e5c68c27082640a78ec28af" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 1.03 µg/m³<br>     <b>NO₂:</b> 1.28 µg/m³<br>     <b>SO₂:</b> 2.14 µg/m³<br>     </div>`)[0];
                popup_d2c699998264ff0e0c22b488384186de.setContent(html_59794dfc5e5c68c27082640a78ec28af);
            
        

        marker_9032d7f7a4589e8d04118baa4e09057f.bindPopup(popup_d2c699998264ff0e0c22b488384186de)
        ;

        
    
    
                marker_9032d7f7a4589e8d04118baa4e09057f.setIcon(icon_5b11e6e044e9d7c9f4f66caeaf0d7d3b);
            
    
            var marker_e9a2f40380eb106faf80e204a2c6ed7c = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_48fafc565ec741fe731d7726a8d6d8df = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_53027ad314a51561f41ddfa7e2be4107 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_d8eacc6e3269a428dc7014687620b7b4 = $(`<div id="html_d8eacc6e3269a428dc7014687620b7b4" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.77 µg/m³<br>     <b>NO₂:</b> 0.04 µg/m³<br>     <b>SO₂:</b> -0.30 µg/m³<br>     </div>`)[0];
                popup_53027ad314a51561f41ddfa7e2be4107.setContent(html_d8eacc6e3269a428dc7014687620b7b4);
            
        

        marker_e9a2f40380eb106faf80e204a2c6ed7c.bindPopup(popup_53027ad314a51561f41ddfa7e2be4107)
        ;

        
    
    
                marker_e9a2f40380eb106faf80e204a2c6ed7c.setIcon(icon_48fafc565ec741fe731d7726a8d6d8df);
            
    
            var marker_124d3252b18dade905c621eda1feb4eb = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_6ee2ff90d2cf24f4fdfa962444e47951 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_9747900b812b54641fb04e9934753cc0 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_08fd19248d9111df2ff1634399d2103d = $(`<div id="html_08fd19248d9111df2ff1634399d2103d" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 2.01 µg/m³<br>     <b>NO₂:</b> 2.51 µg/m³<br>     <b>SO₂:</b> 3.35 µg/m³<br>     </div>`)[0];
                popup_9747900b812b54641fb04e9934753cc0.setContent(html_08fd19248d9111df2ff1634399d2103d);
            
        

        marker_124d3252b18dade905c621eda1feb4eb.bindPopup(popup_9747900b812b54641fb04e9934753cc0)
        ;

        
    
    
                marker_124d3252b18dade905c621eda1feb4eb.setIcon(icon_6ee2ff90d2cf24f4fdfa962444e47951);
            
    
            var marker_03cc1b788e338556dc7afb3bb547a605 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_675424070ad841b305862a4bcc4f91f4 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_5f1f1e724d5ed9ae1414c2b0c4c1951d = L.popup({
  "maxWidth": 300,
});

        
            
                var html_7ac09033e11dbe80be5c0bcd767a1915 = $(`<div id="html_7ac09033e11dbe80be5c0bcd767a1915" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.25 µg/m³<br>     <b>NO₂:</b> 0.33 µg/m³<br>     <b>SO₂:</b> -0.39 µg/m³<br>     </div>`)[0];
                popup_5f1f1e724d5ed9ae1414c2b0c4c1951d.setContent(html_7ac09033e11dbe80be5c0bcd767a1915);
            
        

        marker_03cc1b788e338556dc7afb3bb547a605.bindPopup(popup_5f1f1e724d5ed9ae1414c2b0c4c1951d)
        ;

        
    
    
                marker_03cc1b788e338556dc7afb3bb547a605.setIcon(icon_675424070ad841b305862a4bcc4f91f4);
            
    
            var marker_a390be000493f73d68fa9b271cf644d6 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_dd9a9062b8351beed67111bbb0b5bb9e = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_e0298145e6775dcb062fafe820db8f71 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_98e110a9de0167ccaf221b03f2244630 = $(`<div id="html_98e110a9de0167ccaf221b03f2244630" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.08 µg/m³<br>     <b>NO₂:</b> 1.31 µg/m³<br>     <b>SO₂:</b> 1.08 µg/m³<br>     </div>`)[0];
                popup_e0298145e6775dcb062fafe820db8f71.setContent(html_98e110a9de0167ccaf221b03f2244630);
            
        

        marker_a390be000493f73d68fa9b271cf644d6.bindPopup(popup_e0298145e6775dcb062fafe820db8f71)
        ;

        
    
    
                marker_a390be000493f73d68fa9b271cf644d6.setIcon(icon_dd9a9062b8351beed67111bbb0b5bb9e);
            
    
            var marker_32362c086c49791b6360a1ec5e912ab9 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_bc97bcb5d9ac1b36657fc133e929ae58 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_7172ffa360b3e6901ce7acf092f3e00e = L.popup({
  "maxWidth": 300,
});

        
            
                var html_1959c4a65ed686e79792b6004d4e84dc = $(`<div id="html_1959c4a65ed686e79792b6004d4e84dc" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.50 µg/m³<br>     <b>NO₂:</b> 1.59 µg/m³<br>     <b>SO₂:</b> 2.35 µg/m³<br>     </div>`)[0];
                popup_7172ffa360b3e6901ce7acf092f3e00e.setContent(html_1959c4a65ed686e79792b6004d4e84dc);
            
        

        marker_32362c086c49791b6360a1ec5e912ab9.bindPopup(popup_7172ffa360b3e6901ce7acf092f3e00e)
        ;

        
    
    
                marker_32362c086c49791b6360a1ec5e912ab9.setIcon(icon_bc97bcb5d9ac1b36657fc133e929ae58);
            
    
            var marker_ed5e3d510cb8aff5b38985e797848045 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_b40d95850c54cd7cf239ca2585b3f2c3 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_d326c4e5444af91f8ace0b443059edfa = L.popup({
  "maxWidth": 300,
});

        
            
                var html_43c3fd458d47c8d25cd635b206a7f84b = $(`<div id="html_43c3fd458d47c8d25cd635b206a7f84b" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.28 µg/m³<br>     <b>NO₂:</b> 2.34 µg/m³<br>     <b>SO₂:</b> 1.31 µg/m³<br>     </div>`)[0];
                popup_d326c4e5444af91f8ace0b443059edfa.setContent(html_43c3fd458d47c8d25cd635b206a7f84b);
            
        

        marker_ed5e3d510cb8aff5b38985e797848045.bindPopup(popup_d326c4e5444af91f8ace0b443059edfa)
        ;

        
    
    
                marker_ed5e3d510cb8aff5b38985e797848045.setIcon(icon_b40d95850c54cd7cf239ca2585b3f2c3);
            
    
            var marker_7a1edd191d95f4b9a68ddbd29a7e3312 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_27d1b3b2843c629649ece252ad2db884 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_11e4c2beddfcf669ba455abd4733cb21 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_66d305e5aaaaea000d280f0d3256539e = $(`<div id="html_66d305e5aaaaea000d280f0d3256539e" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> -0.22 µg/m³<br>     <b>NO₂:</b> -0.08 µg/m³<br>     <b>SO₂:</b> -0.25 µg/m³<br>     </div>`)[0];
                popup_11e4c2beddfcf669ba455abd4733cb21.setContent(html_66d305e5aaaaea000d280f0d3256539e);
            
        

        marker_7a1edd191d95f4b9a68ddbd29a7e3312.bindPopup(popup_11e4c2beddfcf669ba455abd4733cb21)
        ;

        
    
    
                marker_7a1edd191d95f4b9a68ddbd29a7e3312.setIcon(icon_27d1b3b2843c629649ece252ad2db884);
            
    
            var marker_3da0844778d6fff1acb5db91d525f6bf = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_ea2797329300ec18e8c97388e6864c05 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_198d9b5e47ce9cab2a569d1939e30034 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_d761d7f42c56667a70b5dcbe973d8a22 = $(`<div id="html_d761d7f42c56667a70b5dcbe973d8a22" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.84 µg/m³<br>     <b>NO₂:</b> 2.31 µg/m³<br>     <b>SO₂:</b> 2.29 µg/m³<br>     </div>`)[0];
                popup_198d9b5e47ce9cab2a569d1939e30034.setContent(html_d761d7f42c56667a70b5dcbe973d8a22);
            
        

        marker_3da0844778d6fff1acb5db91d525f6bf.bindPopup(popup_198d9b5e47ce9cab2a569d1939e30034)
        ;

        
    
    
                marker_3da0844778d6fff1acb5db91d525f6bf.setIcon(icon_ea2797329300ec18e8c97388e6864c05);
            
    
            var marker_18e3a6c3af5bdb0577c545ba532d9951 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_b44a1b5401a548d4d6083680b7bded6b = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_3b579bc1cb0fb1720ebebfac40142b70 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_e97f547cd533e4696b5969d92c64ae7e = $(`<div id="html_e97f547cd533e4696b5969d92c64ae7e" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> -0.17 µg/m³<br>     <b>NO₂:</b> 0.98 µg/m³<br>     <b>SO₂:</b> -0.16 µg/m³<br>     </div>`)[0];
                popup_3b579bc1cb0fb1720ebebfac40142b70.setContent(html_e97f547cd533e4696b5969d92c64ae7e);
            
        

        marker_18e3a6c3af5bdb0577c545ba532d9951.bindPopup(popup_3b579bc1cb0fb1720ebebfac40142b70)
        ;

        
    
    
                marker_18e3a6c3af5bdb0577c545ba532d9951.setIcon(icon_b44a1b5401a548d4d6083680b7bded6b);
            
    
            var marker_0e9894676c56d685071c52e9ba4a21f1 = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_3b6dd446204bfd08e166d6fa5d900271 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_1754654443c9c64232948c5dec56539b = L.popup({
  "maxWidth": 300,
});

        
            
                var html_39b515fc3c612d0c8f85793639389dea = $(`<div id="html_39b515fc3c612d0c8f85793639389dea" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.53 µg/m³<br>     <b>NO₂:</b> -0.06 µg/m³<br>     <b>SO₂:</b> 0.26 µg/m³<br>     </div>`)[0];
                popup_1754654443c9c64232948c5dec56539b.setContent(html_39b515fc3c612d0c8f85793639389dea);
            
        

        marker_0e9894676c56d685071c52e9ba4a21f1.bindPopup(popup_1754654443c9c64232948c5dec56539b)
        ;

        
    
    
                marker_0e9894676c56d685071c52e9ba4a21f1.setIcon(icon_3b6dd446204bfd08e166d6fa5d900271);
            
    
            var marker_3943d4496fba05bc6b0893bfba4af47d = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_f96b1b1dbbe058a5889a9b379534c10b = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_dd29d9963da3e0469c961345b4cec796 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_7ad0f0f8c837f084819aa4973845669d = $(`<div id="html_7ad0f0f8c837f084819aa4973845669d" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 0.16 µg/m³<br>     <b>NO₂:</b> -0.42 µg/m³<br>     <b>SO₂:</b> -0.56 µg/m³<br>     </div>`)[0];
                popup_dd29d9963da3e0469c961345b4cec796.setContent(html_7ad0f0f8c837f084819aa4973845669d);
            
        

        marker_3943d4496fba05bc6b0893bfba4af47d.bindPopup(popup_dd29d9963da3e0469c961345b4cec796)
        ;

        
    
    
                marker_3943d4496fba05bc6b0893bfba4af47d.setIcon(icon_f96b1b1dbbe058a5889a9b379534c10b);
            
    
            var marker_0c0d4595fec7ea45d742fbea7af40b10 = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_1ae3706f93d0d6126c739371b053d460 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_fc393e2448711e82eae9f111b47f8cd4 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_0d23c8304f869afa1927fb00f2196c40 = $(`<div id="html_0d23c8304f869afa1927fb00f2196c40" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.64 µg/m³<br>     <b>NO₂:</b> -0.28 µg/m³<br>     <b>SO₂:</b> -0.11 µg/m³<br>     </div>`)[0];
                popup_fc393e2448711e82eae9f111b47f8cd4.setContent(html_0d23c8304f869afa1927fb00f2196c40);
            
        

        marker_0c0d4595fec7ea45d742fbea7af40b10.bindPopup(popup_fc393e2448711e82eae9f111b47f8cd4)
        ;

        
    
    
                marker_0c0d4595fec7ea45d742fbea7af40b10.setIcon(icon_1ae3706f93d0d6126c739371b053d460);
            
    
            var marker_a82fcb2e8b58e9c95c0d7513cb8c5f8a = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_308595f2fb6557e91b8c267cc17c309d = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_268b39dba92b1861c87011c3ef06abc2 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_8df7f1a708d8a97bf084eb13f84194d1 = $(`<div id="html_8df7f1a708d8a97bf084eb13f84194d1" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 1.10 µg/m³<br>     <b>NO₂:</b> 1.16 µg/m³<br>     <b>SO₂:</b> 0.10 µg/m³<br>     </div>`)[0];
                popup_268b39dba92b1861c87011c3ef06abc2.setContent(html_8df7f1a708d8a97bf084eb13f84194d1);
            
        

        marker_a82fcb2e8b58e9c95c0d7513cb8c5f8a.bindPopup(popup_268b39dba92b1861c87011c3ef06abc2)
        ;

        
    
    
                marker_a82fcb2e8b58e9c95c0d7513cb8c5f8a.setIcon(icon_308595f2fb6557e91b8c267cc17c309d);
            
    
            var marker_b2dadd53231ce0c67a535b481a68f448 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_ab53ae086ea51d44c5fff5638169c5e1 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_87652f93f02a73969c746172c2f08c15 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_3e6f3e16551478e085f80e588417f63c = $(`<div id="html_3e6f3e16551478e085f80e588417f63c" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 2.10 µg/m³<br>     <b>NO₂:</b> 2.63 µg/m³<br>     <b>SO₂:</b> 1.46 µg/m³<br>     </div>`)[0];
                popup_87652f93f02a73969c746172c2f08c15.setContent(html_3e6f3e16551478e085f80e588417f63c);
            
        

        marker_b2dadd53231ce0c67a535b481a68f448.bindPopup(popup_87652f93f02a73969c746172c2f08c15)
        ;

        
    
    
                marker_b2dadd53231ce0c67a535b481a68f448.setIcon(icon_ab53ae086ea51d44c5fff5638169c5e1);
            
    
            var marker_6cae40f08a0402154bc01d89867a6079 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_56671a5661669b11f81e4a37c79c8794 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_832dcc61c575c72274e8e8aeadf30954 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_a949f0d6fe54d2597474f5944cf14ec2 = $(`<div id="html_a949f0d6fe54d2597474f5944cf14ec2" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 2.70 µg/m³<br>     <b>NO₂:</b> 2.59 µg/m³<br>     <b>SO₂:</b> 3.42 µg/m³<br>     </div>`)[0];
                popup_832dcc61c575c72274e8e8aeadf30954.setContent(html_a949f0d6fe54d2597474f5944cf14ec2);
            
        

        marker_6cae40f08a0402154bc01d89867a6079.bindPopup(popup_832dcc61c575c72274e8e8aeadf30954)
        ;

        
    
    
                marker_6cae40f08a0402154bc01d89867a6079.setIcon(icon_56671a5661669b11f81e4a37c79c8794);
            
    
            var marker_ef9f276668510d84e8fe1c1784d47e49 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_7beb795e30e18562ebc4f222b0e2f4a7 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_abbd922b902d5ace29886de8fce38b89 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_ee3136e6aeb09a1b394742ad35a9afe6 = $(`<div id="html_ee3136e6aeb09a1b394742ad35a9afe6" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.54 µg/m³<br>     <b>NO₂:</b> 2.33 µg/m³<br>     <b>SO₂:</b> 0.28 µg/m³<br>     </div>`)[0];
                popup_abbd922b902d5ace29886de8fce38b89.setContent(html_ee3136e6aeb09a1b394742ad35a9afe6);
            
        

        marker_ef9f276668510d84e8fe1c1784d47e49.bindPopup(popup_abbd922b902d5ace29886de8fce38b89)
        ;

        
    
    
                marker_ef9f276668510d84e8fe1c1784d47e49.setIcon(icon_7beb795e30e18562ebc4f222b0e2f4a7);
            
    
            var marker_4772c5c547b3840264d8be46786bf6f3 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_359303fbeee4ea21b65afb25c3f68ed8 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_a01a3e3ab36b9aad8ddcd5b166a89d9a = L.popup({
  "maxWidth": 300,
});

        
            
                var html_b8e5e6e73db5c0b90db505ea13be68c2 = $(`<div id="html_b8e5e6e73db5c0b90db505ea13be68c2" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 1.47 µg/m³<br>     <b>NO₂:</b> 3.54 µg/m³<br>     <b>SO₂:</b> 0.87 µg/m³<br>     </div>`)[0];
                popup_a01a3e3ab36b9aad8ddcd5b166a89d9a.setContent(html_b8e5e6e73db5c0b90db505ea13be68c2);
            
        

        marker_4772c5c547b3840264d8be46786bf6f3.bindPopup(popup_a01a3e3ab36b9aad8ddcd5b166a89d9a)
        ;

        
    
    
                marker_4772c5c547b3840264d8be46786bf6f3.setIcon(icon_359303fbeee4ea21b65afb25c3f68ed8);
            
    
            var marker_4204336cb72113e610a23cfe01a28732 = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_94c6e57ad80e858108d4bfa2efaffa39 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_76c87478e6a97be9158e99f24d8d7319 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_1bacb97bd3482756c3e965565c14fd3a = $(`<div id="html_1bacb97bd3482756c3e965565c14fd3a" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> 0.74 µg/m³<br>     <b>NO₂:</b> 0.53 µg/m³<br>     <b>SO₂:</b> 1.97 µg/m³<br>     </div>`)[0];
                popup_76c87478e6a97be9158e99f24d8d7319.setContent(html_1bacb97bd3482756c3e965565c14fd3a);
            
        

        marker_4204336cb72113e610a23cfe01a28732.bindPopup(popup_76c87478e6a97be9158e99f24d8d7319)
        ;

        
    
    
                marker_4204336cb72113e610a23cfe01a28732.setIcon(icon_94c6e57ad80e858108d4bfa2efaffa39);
            
    
            var marker_59b986f5fd98677196e342bee60eec3c = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_8b76bffaec2763944e04768eaa108b9e = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_35da1f21317b28f761e9233aa6074c2e = L.popup({
  "maxWidth": 300,
});

        
            
                var html_9750d06ea2d332a25e55172c27fae286 = $(`<div id="html_9750d06ea2d332a25e55172c27fae286" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 2.10 µg/m³<br>     <b>NO₂:</b> 1.51 µg/m³<br>     <b>SO₂:</b> 2.10 µg/m³<br>     </div>`)[0];
                popup_35da1f21317b28f761e9233aa6074c2e.setContent(html_9750d06ea2d332a25e55172c27fae286);
            
        

        marker_59b986f5fd98677196e342bee60eec3c.bindPopup(popup_35da1f21317b28f761e9233aa6074c2e)
        ;

        
    
    
                marker_59b986f5fd98677196e342bee60eec3c.setIcon(icon_8b76bffaec2763944e04768eaa108b9e);
            
    
            var marker_6d6e76fc432b169ac801888c0e645d66 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_1526ce7d525a287900018d060e5cb00a = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_981aeb20d226ab1efc54bc412cd5deb0 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_88ee1a99b67054ffbf0a5841029fa2b4 = $(`<div id="html_88ee1a99b67054ffbf0a5841029fa2b4" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 0.39 µg/m³<br>     <b>NO₂:</b> 0.28 µg/m³<br>     <b>SO₂:</b> -0.31 µg/m³<br>     </div>`)[0];
                popup_981aeb20d226ab1efc54bc412cd5deb0.setContent(html_88ee1a99b67054ffbf0a5841029fa2b4);
            
        

        marker_6d6e76fc432b169ac801888c0e645d66.bindPopup(popup_981aeb20d226ab1efc54bc412cd5deb0)
        ;

        
    
    
                marker_6d6e76fc432b169ac801888c0e645d66.setIcon(icon_1526ce7d525a287900018d060e5cb00a);
            
    
            var marker_dcc6cf02faae6b88d3c4094f8e850fe3 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_dd704f3cfd2364e55451504bcf62ca91 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_bcf76af03ee040561ee09b000703aa93 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_66f803a1e9e70e2463db43a87f57378b = $(`<div id="html_66f803a1e9e70e2463db43a87f57378b" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 1.18 µg/m³<br>     <b>NO₂:</b> 2.17 µg/m³<br>     <b>SO₂:</b> 0.51 µg/m³<br>     </div>`)[0];
                popup_bcf76af03ee040561ee09b000703aa93.setContent(html_66f803a1e9e70e2463db43a87f57378b);
            
        

        marker_dcc6cf02faae6b88d3c4094f8e850fe3.bindPopup(popup_bcf76af03ee040561ee09b000703aa93)
        ;

        
    
    
                marker_dcc6cf02faae6b88d3c4094f8e850fe3.setIcon(icon_dd704f3cfd2364e55451504bcf62ca91);
            
    
            var marker_50a3721ec167316c2eab372c6788b367 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_a5a664af0ba82a3960283bedf2c1016f = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_653921ba23aa45715b260ed12986f830 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_d4164b613a60a76f4080d7f8f50996a2 = $(`<div id="html_d4164b613a60a76f4080d7f8f50996a2" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.10 µg/m³<br>     <b>NO₂:</b> 2.12 µg/m³<br>     <b>SO₂:</b> 0.13 µg/m³<br>     </div>`)[0];
                popup_653921ba23aa45715b260ed12986f830.setContent(html_d4164b613a60a76f4080d7f8f50996a2);
            
        

        marker_50a3721ec167316c2eab372c6788b367.bindPopup(popup_653921ba23aa45715b260ed12986f830)
        ;

        
    
    
                marker_50a3721ec167316c2eab372c6788b367.setIcon(icon_a5a664af0ba82a3960283bedf2c1016f);
            
    
            var marker_fc11c5185615ca37e9a3f842f3a31fa1 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_5b9c9bbf4829e6e67ca423948be3a332 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_11c30e9276b39e0da16ed84fa06c5f6f = L.popup({
  "maxWidth": 300,
});

        
            
                var html_5f2e1f753c6ad8145d076acda3038693 = $(`<div id="html_5f2e1f753c6ad8145d076acda3038693" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 1.19 µg/m³<br>     <b>NO₂:</b> 1.16 µg/m³<br>     <b>SO₂:</b> -0.15 µg/m³<br>     </div>`)[0];
                popup_11c30e9276b39e0da16ed84fa06c5f6f.setContent(html_5f2e1f753c6ad8145d076acda3038693);
            
        

        marker_fc11c5185615ca37e9a3f842f3a31fa1.bindPopup(popup_11c30e9276b39e0da16ed84fa06c5f6f)
        ;

        
    
    
                marker_fc11c5185615ca37e9a3f842f3a31fa1.setIcon(icon_5b9c9bbf4829e6e67ca423948be3a332);
            
    
            var marker_ca638529273e91e95ba977c706c1417b = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_35a4b366dc41091e7a6c9d7c70d4a243 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_f4b469f8a138b9afff32ce42c7363f0e = L.popup({
  "maxWidth": 300,
});

        
            
                var html_44f55b3beb47dbde76ef9047b17bb9a8 = $(`<div id="html_44f55b3beb47dbde76ef9047b17bb9a8" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.61 µg/m³<br>     <b>NO₂:</b> -0.05 µg/m³<br>     <b>SO₂:</b> 0.21 µg/m³<br>     </div>`)[0];
                popup_f4b469f8a138b9afff32ce42c7363f0e.setContent(html_44f55b3beb47dbde76ef9047b17bb9a8);
            
        

        marker_ca638529273e91e95ba977c706c1417b.bindPopup(popup_f4b469f8a138b9afff32ce42c7363f0e)
        ;

        
    
    
                marker_ca638529273e91e95ba977c706c1417b.setIcon(icon_35a4b366dc41091e7a6c9d7c70d4a243);
            
    
            var marker_0ab07bec9a1e1fb3ed41ab1388f8d80b = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_2d4298d03f05336c07ee2ad783350327 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_568dc9fe1e01be76bb682d1ed897df0e = L.popup({
  "maxWidth": 300,
});

        
            
                var html_60b58b7488aabd83a630659d0d35b68f = $(`<div id="html_60b58b7488aabd83a630659d0d35b68f" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 2.53 µg/m³<br>     <b>NO₂:</b> 2.80 µg/m³<br>     <b>SO₂:</b> 3.41 µg/m³<br>     </div>`)[0];
                popup_568dc9fe1e01be76bb682d1ed897df0e.setContent(html_60b58b7488aabd83a630659d0d35b68f);
            
        

        marker_0ab07bec9a1e1fb3ed41ab1388f8d80b.bindPopup(popup_568dc9fe1e01be76bb682d1ed897df0e)
        ;

        
    
    
                marker_0ab07bec9a1e1fb3ed41ab1388f8d80b.setIcon(icon_2d4298d03f05336c07ee2ad783350327);
            
    
            var marker_c5bfd68e3f5020ebb2ac06d2ade594a7 = L.marker(
                [19.076, 72.8777],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_53488ca0250d3892cc607a89e1735230 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_10d8d8dff8d594693a51d524ed8f2556 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_ccdf69d31490674592023969358a2d59 = $(`<div id="html_ccdf69d31490674592023969358a2d59" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (19.0760, 72.8777)<br>     <hr>     <b>PM2.5:</b> -0.89 µg/m³<br>     <b>NO₂:</b> -0.26 µg/m³<br>     <b>SO₂:</b> -0.37 µg/m³<br>     </div>`)[0];
                popup_10d8d8dff8d594693a51d524ed8f2556.setContent(html_ccdf69d31490674592023969358a2d59);
            
        

        marker_c5bfd68e3f5020ebb2ac06d2ade594a7.bindPopup(popup_10d8d8dff8d594693a51d524ed8f2556)
        ;

        
    
    
                marker_c5bfd68e3f5020ebb2ac06d2ade594a7.setIcon(icon_53488ca0250d3892cc607a89e1735230);
            
    
            var marker_9686f635a69760d7fed287a065087d9b = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_e8ed83e02b4e2cd38e1617b8d300c8f5 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_fc39bdf0c780b039ce8b1a4cc66ab7ef = L.popup({
  "maxWidth": 300,
});

        
            
                var html_22e7a70f78db19856faf58895f5cc7eb = $(`<div id="html_22e7a70f78db19856faf58895f5cc7eb" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.29 µg/m³<br>     <b>NO₂:</b> 2.25 µg/m³<br>     <b>SO₂:</b> 0.79 µg/m³<br>     </div>`)[0];
                popup_fc39bdf0c780b039ce8b1a4cc66ab7ef.setContent(html_22e7a70f78db19856faf58895f5cc7eb);
            
        

        marker_9686f635a69760d7fed287a065087d9b.bindPopup(popup_fc39bdf0c780b039ce8b1a4cc66ab7ef)
        ;

        
    
    
                marker_9686f635a69760d7fed287a065087d9b.setIcon(icon_e8ed83e02b4e2cd38e1617b8d300c8f5);
            
    
            var marker_872dd983c7196d6f44346c9fc96dc0a3 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_35fca18525ea380d05dfbad80bd88056 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_989506647913d1e60798fb3ab0bff94c = L.popup({
  "maxWidth": 300,
});

        
            
                var html_6c912d1e69b30f626e782c3afeeda055 = $(`<div id="html_6c912d1e69b30f626e782c3afeeda055" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 4.01 µg/m³<br>     <b>NO₂:</b> 0.78 µg/m³<br>     <b>SO₂:</b> 2.89 µg/m³<br>     </div>`)[0];
                popup_989506647913d1e60798fb3ab0bff94c.setContent(html_6c912d1e69b30f626e782c3afeeda055);
            
        

        marker_872dd983c7196d6f44346c9fc96dc0a3.bindPopup(popup_989506647913d1e60798fb3ab0bff94c)
        ;

        
    
    
                marker_872dd983c7196d6f44346c9fc96dc0a3.setIcon(icon_35fca18525ea380d05dfbad80bd88056);
            
    
            var marker_483a41abd216c1c37b63ba52aa286f63 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_bd13ad2abcaeaeb3abac0ecc44d5028f = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_4288d10116fefabd1227e772281f85b9 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_bcb35112841975fd50a2f5410e35d29f = $(`<div id="html_bcb35112841975fd50a2f5410e35d29f" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 3.95 µg/m³<br>     <b>NO₂:</b> 1.04 µg/m³<br>     <b>SO₂:</b> 3.04 µg/m³<br>     </div>`)[0];
                popup_4288d10116fefabd1227e772281f85b9.setContent(html_bcb35112841975fd50a2f5410e35d29f);
            
        

        marker_483a41abd216c1c37b63ba52aa286f63.bindPopup(popup_4288d10116fefabd1227e772281f85b9)
        ;

        
    
    
                marker_483a41abd216c1c37b63ba52aa286f63.setIcon(icon_bd13ad2abcaeaeb3abac0ecc44d5028f);
            
    
            var marker_bd1d05443ef9c882a1f3d2cb3f3ab268 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_367de38ff0e8dd958c489c64e9770e67 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_8514e8be8b07c81a4f960ad6c7fa3f92 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_7ed1da10ed87165651adba24f56ceac7 = $(`<div id="html_7ed1da10ed87165651adba24f56ceac7" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> -0.21 µg/m³<br>     <b>NO₂:</b> 0.45 µg/m³<br>     <b>SO₂:</b> 0.47 µg/m³<br>     </div>`)[0];
                popup_8514e8be8b07c81a4f960ad6c7fa3f92.setContent(html_7ed1da10ed87165651adba24f56ceac7);
            
        

        marker_bd1d05443ef9c882a1f3d2cb3f3ab268.bindPopup(popup_8514e8be8b07c81a4f960ad6c7fa3f92)
        ;

        
    
    
                marker_bd1d05443ef9c882a1f3d2cb3f3ab268.setIcon(icon_367de38ff0e8dd958c489c64e9770e67);
            
    
            var marker_5aaafc3cae62bdcee4b9fde7d071647d = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_1020ba7671dee189fc0fc41af39f5561 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_a92f494fa721681adf3d03ce2d375922 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_90184ff7de7a3c4578a8fb3514399642 = $(`<div id="html_90184ff7de7a3c4578a8fb3514399642" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 1.49 µg/m³<br>     <b>NO₂:</b> 3.45 µg/m³<br>     <b>SO₂:</b> 0.83 µg/m³<br>     </div>`)[0];
                popup_a92f494fa721681adf3d03ce2d375922.setContent(html_90184ff7de7a3c4578a8fb3514399642);
            
        

        marker_5aaafc3cae62bdcee4b9fde7d071647d.bindPopup(popup_a92f494fa721681adf3d03ce2d375922)
        ;

        
    
    
                marker_5aaafc3cae62bdcee4b9fde7d071647d.setIcon(icon_1020ba7671dee189fc0fc41af39f5561);
            
    
            var marker_e65734ce717210f2195cbb36bc6ab3c1 = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_5c0966a5a59e36ec73a0fcb54afa4c65 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_667fec16a19f9285a9342bfc01cb20f8 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_33a5c46a1cec6767e1a6dedb5a4b8074 = $(`<div id="html_33a5c46a1cec6767e1a6dedb5a4b8074" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 2.44 µg/m³<br>     <b>NO₂:</b> 0.48 µg/m³<br>     <b>SO₂:</b> 1.88 µg/m³<br>     </div>`)[0];
                popup_667fec16a19f9285a9342bfc01cb20f8.setContent(html_33a5c46a1cec6767e1a6dedb5a4b8074);
            
        

        marker_e65734ce717210f2195cbb36bc6ab3c1.bindPopup(popup_667fec16a19f9285a9342bfc01cb20f8)
        ;

        
    
    
                marker_e65734ce717210f2195cbb36bc6ab3c1.setIcon(icon_5c0966a5a59e36ec73a0fcb54afa4c65);
            
    
            var marker_ec809a3de079d7dcfc0234df2756a6a7 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_a2a030af0d51e106a1468d25469a98d0 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_5107554aad8d3d9eb8d6e8b2e58637ff = L.popup({
  "maxWidth": 300,
});

        
            
                var html_7b8996022875d98a9a90085501ddd458 = $(`<div id="html_7b8996022875d98a9a90085501ddd458" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> -0.00 µg/m³<br>     <b>NO₂:</b> 1.83 µg/m³<br>     <b>SO₂:</b> 1.42 µg/m³<br>     </div>`)[0];
                popup_5107554aad8d3d9eb8d6e8b2e58637ff.setContent(html_7b8996022875d98a9a90085501ddd458);
            
        

        marker_ec809a3de079d7dcfc0234df2756a6a7.bindPopup(popup_5107554aad8d3d9eb8d6e8b2e58637ff)
        ;

        
    
    
                marker_ec809a3de079d7dcfc0234df2756a6a7.setIcon(icon_a2a030af0d51e106a1468d25469a98d0);
            
    
            var marker_f526c8b4dc3417b62a3b1040f6b7142e = L.marker(
                [22.5726, 88.3639],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_1120fe5492ca4e9a5f34524750c10dcb = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_20a63dbe580e23e53b32adeeec7e29c2 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_12d411f5d82e4b67a79285c82da65dfc = $(`<div id="html_12d411f5d82e4b67a79285c82da65dfc" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (22.5726, 88.3639)<br>     <hr>     <b>PM2.5:</b> 0.14 µg/m³<br>     <b>NO₂:</b> 0.10 µg/m³<br>     <b>SO₂:</b> 0.13 µg/m³<br>     </div>`)[0];
                popup_20a63dbe580e23e53b32adeeec7e29c2.setContent(html_12d411f5d82e4b67a79285c82da65dfc);
            
        

        marker_f526c8b4dc3417b62a3b1040f6b7142e.bindPopup(popup_20a63dbe580e23e53b32adeeec7e29c2)
        ;

        
    
    
                marker_f526c8b4dc3417b62a3b1040f6b7142e.setIcon(icon_1120fe5492ca4e9a5f34524750c10dcb);
            
    
            var marker_db90595121a19eb58ef5da991d792b34 = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_89491e336e61f721ee389b0c2b6e5ec3 = L.AwesomeMarkers.icon(
                {
  "markerColor": "green",
  "iconColor": "white",
  "icon": "leaf",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_d32a93aa2b017cf0ca7d4f115b1be578 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_e717b376dfe9868f7af8362c85c50ce3 = $(`<div id="html_e717b376dfe9868f7af8362c85c50ce3" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Background_Mixed<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> -0.09 µg/m³<br>     <b>NO₂:</b> -0.67 µg/m³<br>     <b>SO₂:</b> -0.72 µg/m³<br>     </div>`)[0];
                popup_d32a93aa2b017cf0ca7d4f115b1be578.setContent(html_e717b376dfe9868f7af8362c85c50ce3);
            
        

        marker_db90595121a19eb58ef5da991d792b34.bindPopup(popup_d32a93aa2b017cf0ca7d4f115b1be578)
        ;

        
    
    
                marker_db90595121a19eb58ef5da991d792b34.setIcon(icon_89491e336e61f721ee389b0c2b6e5ec3);
            
    
            var marker_245054a53bc80a7c0e5e6a85dc41204a = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_56d266d4355330abb183e0125884bf93 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_dad141e0bb2b0a984d3bad27452685ab = L.popup({
  "maxWidth": 300,
});

        
            
                var html_7f98789588dcc34367fc310c3fdbbd67 = $(`<div id="html_7f98789588dcc34367fc310c3fdbbd67" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.09 µg/m³<br>     <b>NO₂:</b> 2.17 µg/m³<br>     <b>SO₂:</b> 0.15 µg/m³<br>     </div>`)[0];
                popup_dad141e0bb2b0a984d3bad27452685ab.setContent(html_7f98789588dcc34367fc310c3fdbbd67);
            
        

        marker_245054a53bc80a7c0e5e6a85dc41204a.bindPopup(popup_dad141e0bb2b0a984d3bad27452685ab)
        ;

        
    
    
                marker_245054a53bc80a7c0e5e6a85dc41204a.setIcon(icon_56d266d4355330abb183e0125884bf93);
            
    
            var marker_df8b6b37f579ac0fa12a72780c726c81 = L.marker(
                [13.0827, 80.2707],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_44511417418f4b7f45779cd728075c02 = L.AwesomeMarkers.icon(
                {
  "markerColor": "blue",
  "iconColor": "white",
  "icon": "car",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_eebbdd41441f144d8b1ea6f125318a42 = L.popup({
  "maxWidth": 300,
});

        
            
                var html_844f6be7c13b04218b5d45326a3bcc45 = $(`<div id="html_844f6be7c13b04218b5d45326a3bcc45" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Vehicular<br>     <b>Coordinates:</b> (13.0827, 80.2707)<br>     <hr>     <b>PM2.5:</b> 0.98 µg/m³<br>     <b>NO₂:</b> 4.18 µg/m³<br>     <b>SO₂:</b> 0.82 µg/m³<br>     </div>`)[0];
                popup_eebbdd41441f144d8b1ea6f125318a42.setContent(html_844f6be7c13b04218b5d45326a3bcc45);
            
        

        marker_df8b6b37f579ac0fa12a72780c726c81.bindPopup(popup_eebbdd41441f144d8b1ea6f125318a42)
        ;

        
    
    
                marker_df8b6b37f579ac0fa12a72780c726c81.setIcon(icon_44511417418f4b7f45779cd728075c02);
            
    
            var marker_8d45df8a28dd5c745fcf2f352287503c = L.marker(
                [28.7041, 77.1025],
                {
}
            ).addTo(marker_cluster_9b7d6938b36e29597c33f6ca42a737bf);
        
    
            var icon_c99da52d2ff36d91ce5f048336a1e369 = L.AwesomeMarkers.icon(
                {
  "markerColor": "gray",
  "iconColor": "white",
  "icon": "industry",
  "prefix": "fa",
  "extraClasses": "fa-rotate-0",
}
            );
        
    
        var popup_6d57aa553205930b2bba943c82de220f = L.popup({
  "maxWidth": 300,
});

        
            
                var html_717481290d7cd7fda0c0724bc5d423be = $(`<div id="html_717481290d7cd7fda0c0724bc5d423be" style="width: 100.0%; height: 100.0%;">     <b>Predicted Source:</b> Industrial<br>     <b>Coordinates:</b> (28.7041, 77.1025)<br>     <hr>     <b>PM2.5:</b> 8.16 µg/m³<br>     <b>NO₂:</b> 6.72 µg/m³<br>     <b>SO₂:</b> 5.72 µg/m³<br>     </div>`)[0];
                popup_6d57aa553205930b2bba943c82de220f.setContent(html_717481290d7cd7fda0c0724bc5d423be);
            
        

        marker_8d45df8a28dd5c745fcf2f352287503c.bindPopup(popup_6d57aa553205930b2bba943c82de220f)
        ;

        
    
    
                marker_8d45df8a28dd5c745fcf2f352287503c.setIcon(icon_c99da52d2ff36d91ce5f048336a1e369);
            
    
            marker_cluster_9b7d6938b36e29597c33f6ca42a737bf.addTo(map_bc1c6fb8e56ad8fb3a3ad9158b452dfd);
        
    
            var heat_map_26c32bd6b80fb95c2be76600086e0285 = L.heatLayer(
                [[22.5726, 88.3639, 1.7645786629918685], [28.7041, 77.1025, 2.0630687340602827], [13.0827, 80.2707, 0.126502623904579], [13.0827, 80.2707, 0.09323984105578853], [22.5726, 88.3639, 4.08810506854224], [13.0827, 80.2707, 0.35489408219705987], [13.0827, 80.2707, 0.7200763172988294], [19.076, 72.8777, 0.4902163978276905], [22.5726, 88.3639, 2.904887379569919], [28.7041, 77.1025, -0.21243902598195125], [22.5726, 88.3639, 1.1339598395220802], [13.0827, 80.2707, 0.9189786988123517], [22.5726, 88.3639, 1.9148882137581311], [22.5726, 88.3639, 0.5254829328790501], [13.0827, 80.2707, 0.7341279183619644], [19.076, 72.8777, -0.78131596599251], [22.5726, 88.3639, 0.0025930508932971996], [28.7041, 77.1025, 0.686583337221767], [22.5726, 88.3639, 1.5955276384135075], [22.5726, 88.3639, 2.79460360152895], [28.7041, 77.1025, 1.9500886662170238], [13.0827, 80.2707, 0.23125092273885856], [13.0827, 80.2707, 0.1601413052375389], [22.5726, 88.3639, 1.6189414063854606], [28.7041, 77.1025, 0.9899810464706436], [19.076, 72.8777, -0.3376260172717], [28.7041, 77.1025, 1.000364712046603], [22.5726, 88.3639, 0.5816893371315903], [19.076, 72.8777, -0.7834449964566212], [22.5726, 88.3639, 1.5810562369854682], [19.076, 72.8777, 1.3096270642994186], [22.5726, 88.3639, 1.7882608031497387], [28.7041, 77.1025, 1.936902931804911], [28.7041, 77.1025, 0.08732846336492994], [13.0827, 80.2707, 0.6334941979955014], [19.076, 72.8777, -0.8400772068019835], [13.0827, 80.2707, -0.6241935177410904], [22.5726, 88.3639, 0.7539430050963768], [28.7041, 77.1025, 1.5591140101243028], [22.5726, 88.3639, 0.5261342264242802], [28.7041, 77.1025, 1.2029996620148882], [22.5726, 88.3639, 0.8207649360962052], [28.7041, 77.1025, 0.34707017998651735], [19.076, 72.8777, -0.6757160549725858], [28.7041, 77.1025, 0.154180019938027], [28.7041, 77.1025, 0.21294126074750086], [22.5726, 88.3639, 0.5703556507137404], [22.5726, 88.3639, 1.786720579818627], [13.0827, 80.2707, 0.28837395285491774], [19.076, 72.8777, -0.6420773736396264], [22.5726, 88.3639, 1.4111596059493807], [19.076, 72.8777, 0.5631508433923249], [28.7041, 77.1025, 1.0170070365194903], [22.5726, 88.3639, 0.7124362986802117], [13.0827, 80.2707, 0.7984395201997496], [28.7041, 77.1025, 1.6335544088314344], [13.0827, 80.2707, 0.2932815089178856], [28.7041, 77.1025, 0.7833001342618995], [22.5726, 88.3639, 2.7291807853665033], [13.0827, 80.2707, 0.2989394882716381], [28.7041, 77.1025, 1.4801401929865894], [13.0827, 80.2707, 0.7403999190551436], [13.0827, 80.2707, -0.41214208351559795], [22.5726, 88.3639, 0.6979102264288041], [19.10540031697516, 85.40699418701392, 1.3001721713459067], [28.7041, 77.1025, 2.194217010649543], [13.0827, 80.2707, 0.08228735169033347], [22.5726, 88.3639, 1.26681134048263], [13.0827, 80.2707, 0.6047081334565318], [13.0827, 80.2707, 0.9306414234680582], [13.0827, 80.2707, 0.3473863469000217], [19.076, 72.8777, -0.8081417498403132], [28.7041, 77.1025, 1.9400266956181733], [22.5726, 88.3639, 3.2383523798362353], [19.076, 72.8777, 1.0224240588673157], [22.5726, 88.3639, 1.423660959339666], [28.7041, 77.1025, 0.943736147808441], [28.7041, 77.1025, 1.2039171709295162], [13.0827, 80.2707, 0.2893690294876762], [28.7041, 77.1025, 0.60596028442246], [13.0827, 80.2707, 1.3434564371906392], [19.076, 72.8777, 4.036679974291524], [22.5726, 88.3639, 2.024320379613456], [13.0827, 80.2707, 0.8626015221211077], [22.5726, 88.3639, 0.5934969356024627], [19.076, 72.8777, -0.2154196686317072], [13.0827, 80.2707, 0.6054304025482466], [28.7041, 77.1025, 0.18526386471405298], [13.0827, 80.2707, 0.44504415557300153], [28.7041, 77.1025, 0.9275339586241442], [13.0827, 80.2707, 0.12638109553184668], [22.5726, 88.3639, 1.9366043244920672], [22.5726, 88.3639, 1.3149274289715467], [28.7041, 77.1025, 2.027797111072465], [13.0827, 80.2707, 0.7316390902643084], [28.7041, 77.1025, 1.3941932031879267], [22.5726, 88.3639, 5.131952062939929], [13.0827, 80.2707, -0.19540678226906033], [21.360837236753746, 87.3304814818381, 1.50246025726329], [22.5726, 88.3639, 0.827792144006111], [13.0827, 80.2707, 0.28918320758249605], [13.0827, 80.2707, 0.7307214696193864], [13.0827, 80.2707, 1.2493532906769165], [28.7041, 77.1025, -0.188593884783904], [13.0827, 80.2707, 0.10265748270653174], [13.0827, 80.2707, 1.2851210024739879], [28.7041, 77.1025, 1.2162210011597996], [13.0827, 80.2707, 0.8252594858150983], [13.0827, 80.2707, 0.34952326497295966], [22.5726, 88.3639, 2.2793782292139984], [17.17739935924127, 83.76275163955484, 1.3036425527892486], [19.076, 72.8777, 0.523779708507761], [28.7041, 77.1025, 0.9764715017196656], [22.5726, 88.3639, 2.2343271529239264], [22.5726, 88.3639, -0.14218102066627597], [22.5726, 88.3639, -0.16389713140021195], [13.0827, 80.2707, 0.27147641768414205], [19.076, 72.8777, -0.18391001776285892], [22.5726, 88.3639, 1.473228324734905], [28.7041, 77.1025, 2.192843910581949], [19.076, 72.8777, 1.0958666167919235], [13.0827, 80.2707, 0.09711069896246727], [13.0827, 80.2707, -0.49560007770876363], [28.7041, 77.1025, 0.1933541804776761], [28.7041, 77.1025, -0.15240036689401065], [13.0827, 80.2707, 0.7264634086911635], [19.076, 72.8777, -0.7830191903637989], [13.0827, 80.2707, 1.5444369130027527], [13.0827, 80.2707, 0.5378457969808988], [13.0827, 80.2707, 0.19469510024512188], [13.0827, 80.2707, 0.32742449317301475], [28.7041, 77.1025, 1.8176058833946174], [19.076, 72.8777, -0.7702450075791307], [13.0827, 80.2707, 0.48298311399675203], [22.5726, 88.3639, 0.48077329313271155], [13.0827, 80.2707, 0.10265748270653174], [22.5726, 88.3639, 1.7861109131902109], [28.7041, 77.1025, 2.474823225819422], [22.5726, 88.3639, 0.9823792280082376], [13.0827, 80.2707, 0.16195548694679263], [22.5726, 88.3639, 0.27983008812287535], [13.0827, 80.2707, 1.0610108073838302], [28.7041, 77.1025, 8.001685628048884], [22.5726, 88.3639, 2.458490751431052], [28.7041, 77.1025, 0.22656705571781355], [28.7041, 77.1025, 7.556062591043875], [22.5726, 88.3639, 1.7680336664983667], [22.5726, 88.3639, 1.605387114708513], [13.0827, 80.2707, 0.28630628015996534], [28.7041, 77.1025, 1.9281684873573446], [28.7041, 77.1025, 1.3143721891122702], [22.5726, 88.3639, -0.21030999551783996], [22.5726, 88.3639, 0.3496250165434508], [28.7041, 77.1025, 1.9076087327549398], [19.076, 72.8777, 0.9055959967118832], [22.5726, 88.3639, 0.27723798076366424], [22.5726, 88.3639, 1.8809542457925346], [28.7041, 77.1025, 4.467571585986657], [28.7041, 77.1025, 2.1776323338626353], [19.076, 72.8777, -0.7025418388203892], [22.5726, 88.3639, 2.1723505672964762], [22.5726, 88.3639, 0.6455602510549314], [28.7041, 77.1025, 2.0696616536331343], [28.7041, 77.1025, 0.7510073860219304], [19.076, 72.8777, 0.1405542249677142], [13.0827, 80.2707, 0.9947660462319534], [22.5726, 88.3639, 1.8054560479028068], [22.5726, 88.3639, 5.0593140112112875], [28.7041, 77.1025, 0.04261882361859104], [22.5726, 88.3639, 2.5894556655306813], [28.7041, 77.1025, 1.4801401929865894], [15.999482273175882, 76.67272036514287, 0.1277999939653499], [28.7041, 77.1025, -0.15112294861554382], [19.076, 72.8777, -0.5496774514971927], [22.5726, 88.3639, 2.3137843721369715], [19.076, 72.8777, -0.5300903712273681], [28.7041, 77.1025, 0.8231954491415396], [13.0827, 80.2707, 0.16268260114437588], [13.0827, 80.2707, 0.7614196206192876], [22.5726, 88.3639, 2.1130900866421602], [28.7041, 77.1025, 1.3934997525283723], [19.076, 72.8777, 0.8461119635499763], [13.0827, 80.2707, 0.38565876514824704], [22.5726, 88.3639, 1.8084460473020587], [13.0827, 80.2707, 0.3461257499373165], [19.076, 72.8777, -0.7693933953934864], [28.7041, 77.1025, 8.683968898169178], [22.5726, 88.3639, 1.640503556737612], [19.076, 72.8777, -0.6893418499428987], [13.0827, 80.2707, 0.657057015561133], [22.5726, 88.3639, 0.49404327922889446], [13.0827, 80.2707, 0.692505846894072], [22.5726, 88.3639, 1.5133014936953575], [19.076, 72.8777, -0.5901290303153086], [22.5726, 88.3639, 0.08316767379395212], [13.0827, 80.2707, 0.7931064491348949], [19.076, 72.8777, 0.5195216475795382], [13.0827, 80.2707, 0.6935077741001932], [19.076, 72.8777, 2.2142594418663246], [13.0827, 80.2707, 1.177566602693568], [22.5726, 88.3639, 1.0262308980380446], [19.076, 72.8777, -0.7745030685073533], [22.5726, 88.3639, 2.010749503179236], [13.0827, 80.2707, 0.25296703347279464], [22.5726, 88.3639, 0.08264459634388482], [13.0827, 80.2707, 0.4980027597452709], [13.0827, 80.2707, 0.28149604169188713], [28.7041, 77.1025, -0.2154196686317072], [22.5726, 88.3639, 0.8407754964957532], [13.0827, 80.2707, -0.17326486544230219], [19.076, 72.8777, -0.528387146856079], [28.7041, 77.1025, 0.1601413052375389], [19.076, 72.8777, -0.6386709248970479], [13.0827, 80.2707, 1.1011727703747651], [28.7041, 77.1025, 2.098793109810824], [22.5726, 88.3639, 2.702746879555831], [13.0827, 80.2707, 0.5429887884530984], [28.7041, 77.1025, 1.4698501944540645], [19.076, 72.8777, 0.7447730706825213], [22.5726, 88.3639, 2.098049818930532], [28.7041, 77.1025, 0.38794756489745574], [13.0827, 80.2707, 1.1786703796768807], [13.0827, 80.2707, 0.10392031679533342], [13.0827, 80.2707, 1.186759795032042], [19.076, 72.8777, -0.6071612740281997], [22.5726, 88.3639, 2.5336816284321055], [19.076, 72.8777, -0.8907481318478345], [13.0827, 80.2707, 0.287457326991399], [22.5726, 88.3639, 4.007299353886788], [22.5726, 88.3639, 3.954784708681376], [22.5726, 88.3639, -0.2056261284967949], [28.7041, 77.1025, 1.4862614591006662], [22.5726, 88.3639, 2.4413213830487956], [13.0827, 80.2707, -0.004645652684681367], [22.5726, 88.3639, 0.13842519450360274], [28.7041, 77.1025, -0.08767784078502477], [13.0827, 80.2707, 0.08736802706356572], [13.0827, 80.2707, 0.9793922278275946], [28.7041, 77.1025, 8.158057146718319]],
                {
  "minOpacity": 0.5,
  "maxZoom": 18,
  "radius": 15,
  "blur": 15,
}
            );
        
    
            heat_map_26c32bd6b80fb95c2be76600086e0285.addTo(map_bc1c6fb8e56ad8fb3a3ad9158b452dfd);
        
    
            var layer_control_835f5397bdc1a9e3031dfd52cd321046_layers = {
                base_layers : {
                    "cartodbpositron" : tile_layer_ede8aa38bb0f7dc56111c0084a6fce0c,
                },
                overlays :  {
                    "Pollution Source Predictions" : marker_cluster_9b7d6938b36e29597c33f6ca42a737bf,
                    "PM2.5 Heatmap" : heat_map_26c32bd6b80fb95c2be76600086e0285,
                },
            };
            let layer_control_835f5397bdc1a9e3031dfd52cd321046 = L.control.layers(
                layer_control_835f5397bdc1a9e3031dfd52cd321046_layers.base_layers,
                layer_control_835f5397bdc1a9e3031dfd52cd321046_layers.overlays,
                {
  "position": "topright",
  "collapsed": true,
  "autoZIndex": true,
}
            ).addTo(map_bc1c6fb8e56ad8fb3a3ad9158b452dfd);

        
</script>
</html>
```

`requirements.txt`

```
pandas
requests
osmnx
geopandas
```

`scripts/config.py`

```python
# scripts/config.py

# --- API Keys and Configuration ---
OPENWEATHER_API_KEY = "f893c37eda21476de86bad7c65e10e10"
OPENAQ_API_KEY = "88b256c5e7a68bcec0984abee0d22e43c517ab67b7dc1b3cb8839ffba7ad6632"

# --- Directory Configuration ---
RESULTS_DIR = "../data/"

# --- Data Collection Parameters ---
# UPDATED LOCATIONS: Focusing only on major cities in India.
TARGET_LOCATIONS = {
    "Delhi_India":    {"latitude": 28.7041, "longitude": 77.1025},
    "Mumbai_India":   {"latitude": 19.0760, "longitude": 72.8777},
    "Kolkata_India":  {"latitude": 22.5726, "longitude": 88.3639},
    "Chennai_India":  {"latitude": 13.0827, "longitude": 80.2707}
}

# Define the pollutants to be collected from OpenAQ.
POLLUTANTS = ["pm25", "pm10", "no2", "co", "so2", "o3"]

# --- HARDCODED DATE RANGE ---
# Using a fixed, recent historical date range to ensure data is available.
DATE_FROM = "2024-06-01"
DATE_TO = "2024-06-08"

# --- Geospatial Analysis Parameters ---
# Radius in meters around the target coordinates to search for features.
GEOSPATIAL_RADIUS_METERS = 5000  # 5 kilometers

# OpenStreetMap feature tags to extract.
OSM_TAGS = {
    "industrial": {"landuse": "industrial"},
    "major_roads": {"highway": ["primary", "secondary", "motorway"]},
    "dump_site": {"landuse": "landfill"},
    "agricultural": {"landuse": ["farmland", "farmyard"]}
}
```

`scripts/data_collector.py`

```python
# scripts/data_collector.py

import pandas as pd
import requests
import osmnx as ox
import geopandas as gpd
from shapely.geometry import Point
import time
from datetime import datetime
import calendar

# Import configuration and utility functions
import config
from utils import save_to_csv, save_to_json

def convert_date_to_unix(date_str):
    """Converts a YYYY-MM-DD string to a Unix timestamp."""
    return calendar.timegm(datetime.strptime(date_str, "%Y-%m-%d").timetuple())

def fetch_air_quality_data(location_name, lat, lon, date_from, date_to):
    """
    Fetches historical air quality data from the OpenWeatherMap Air Pollution API.
    """
    print(f"Fetching air quality data for {location_name} from OpenWeatherMap...")
    
    start_unix = convert_date_to_unix(date_from)
    end_unix = convert_date_to_unix(date_to)
    
    url = "http://api.openweathermap.org/data/2.5/air_pollution/history"
    params = {
        "lat": lat,
        "lon": lon,
        "start": start_unix,
        "end": end_unix,
        "appid": config.OPENWEATHER_API_KEY
    }
    
    all_pollutant_records = []
    
    try:
        response = requests.get(url, params=params)
        response.raise_for_status()
        data = response.json().get('list', [])
        
        for hourly_data in data:
            timestamp = datetime.utcfromtimestamp(hourly_data['dt']).isoformat() + 'Z'
            components = hourly_data.get('components', {})
            
            pollutant_mapping = {
                "pm2_5": {"name": "pm25", "unit": "µg/m³"},
                "pm10": {"name": "pm10", "unit": "µg/m³"},
                "no2": {"name": "no2", "unit": "µg/m³"},
                "co": {"name": "co", "unit": "µg/m³"},
                "so2": {"name": "so2", "unit": "µg/m³"},
                "o3": {"name": "o3", "unit": "µg/m³"}
            }
            
            for key, value in components.items():
                if key in pollutant_mapping:
                    pollutant_info = pollutant_mapping[key]
                    all_pollutant_records.append({
                        "location_name": location_name,
                        "latitude": lat,
                        "longitude": lon,
                        "timestamp": timestamp,
                        "pollutant": pollutant_info["name"],
                        "value": value,
                        "unit": pollutant_info["unit"]
                    })
        
        print(f"  Successfully processed {len(data)} hourly records for {location_name}.")
        
    except requests.exceptions.RequestException as e:
        print(f"  Error fetching air quality data for {location_name}: {e}")

    df = pd.DataFrame(all_pollutant_records)
    # --- CHANGE: ADDING SOURCE API COLUMN ---
    if not df.empty:
        df['aq_source_api'] = 'OpenWeatherMap'
    # --- END OF CHANGE ---
    return df

def fetch_weather_data(df):
    """Fetches weather data from OpenWeatherMap for each unique location and hour."""
    print("\nFetching weather data...")
    if df.empty:
        print("  Air quality DataFrame is empty. Skipping weather data collection.")
        return pd.DataFrame()

    df['timestamp_dt'] = pd.to_datetime(df['timestamp'])
    df['hour_timestamp'] = df['timestamp_dt'].dt.floor('H')
    
    unique_points = df.drop_duplicates(subset=['latitude', 'longitude', 'hour_timestamp'])
    weather_records = []

    for _, row in unique_points.iterrows():
        lat, lon = row['latitude'], row['longitude']
        url = "https://api.openweathermap.org/data/2.5/weather"
        params = {
            "lat": lat,
            "lon": lon,
            "appid": config.OPENWEATHER_API_KEY,
            "units": "metric"
        }
        try:
            response = requests.get(url, params=params)
            response.raise_for_status()
            data = response.json()
            
            weather_records.append({
                "latitude": lat,
                "longitude": lon,
                "hour_timestamp": row['hour_timestamp'],
                "temperature": data['main']['temp'],
                "humidity": data['main']['humidity'],
                "wind_speed": data['wind']['speed'],
                "wind_direction": data['wind'].get('deg', None)
            })
            time.sleep(0.2)
        except requests.exceptions.RequestException as e:
            print(f"  Could not fetch weather for ({lat}, {lon}) at {row['hour_timestamp']}: {e}")
            
    weather_df = pd.DataFrame(weather_records)
    # --- CHANGE: ADDING SOURCE API COLUMN ---
    if not weather_df.empty:
        weather_df['weather_source_api'] = 'OpenWeatherMap'
    # --- END OF CHANGE ---
    print(f"  Collected {len(weather_df)} unique weather records.")
    return weather_df

def extract_geospatial_features(lat, lon, radius, tags):
    """Extracts distances to nearest OSM features."""
    print("\nExtracting geospatial features...")
    point = Point(lon, lat)
    features = {}
    # --- CHANGE: ADDING SOURCE API TO THE DICTIONARY ---
    features['geo_source_api'] = 'OpenStreetMap'
    # --- END OF CHANGE ---

    for feature_name, tag in tags.items():
        try:
            gdf = ox.features_from_point((lat, lon), tags=tag, dist=radius)
            if not gdf.empty:
                gdf_proj = gdf.to_crs(gdf.estimate_utm_crs())
                point_proj = gpd.GeoSeries([point], crs="EPSG:4326").to_crs(gdf_proj.crs).iloc[0]
                distance = gdf_proj.distance(point_proj).min()
                features[f"distance_to_nearest_{feature_name}_m"] = distance
            else:
                features[f"distance_to_nearest_{feature_name}_m"] = None
            print(f"  Successfully extracted features for '{feature_name}'.")
        except Exception as e:
            print(f"  Could not extract features for '{feature_name}': {e}")
            features[f"distance_to_nearest_{feature_name}_m"] = None
            
    return features

def run_pipeline():
    """Main function to run the entire data collection and processing pipeline."""
    final_df_list = []

    for name, coords in config.TARGET_LOCATIONS.items():
        lat, lon = coords['latitude'], coords['longitude']
        
        aq_df = fetch_air_quality_data(
            location_name=name,
            lat=lat,
            lon=lon,
            date_from=config.DATE_FROM,
            date_to=config.DATE_TO
        )

        if aq_df.empty:
            print(f"No air quality data found for {name}. Skipping this location.")
            continue

        weather_df = fetch_weather_data(aq_df)
        geo_features = extract_geospatial_features(lat, lon, config.GEOSPATIAL_RADIUS_METERS, config.OSM_TAGS)
        
        print("\nMerging datasets...")
        if not weather_df.empty:
            aq_df['hour_timestamp'] = pd.to_datetime(aq_df['timestamp']).dt.floor('H')
            # The merge will now correctly carry over the new source columns
            merged_df = pd.merge(aq_df, weather_df, on=['latitude', 'longitude', 'hour_timestamp'], how='left')
        else:
            merged_df = aq_df

        # This loop will now also add the 'geo_source_api' column
        for key, value in geo_features.items():
            merged_df[key] = value
            
        final_df_list.append(merged_df)
        print(f"\nFinished processing for {name}.\n{'='*40}")

    if not final_df_list:
        print("No data was collected for any location. Exiting.")
        return

    final_dataset = pd.concat(final_df_list, ignore_index=True)
    
    final_dataset = final_dataset.drop(columns=[col for col in ['hour_timestamp', 'timestamp_dt'] if col in final_dataset.columns])

    print(f"\nTotal records collected: {len(final_dataset)}")
    print("Final DataFrame columns:", final_dataset.columns.tolist())
    
    save_to_csv(final_dataset, config.RESULTS_DIR, "consolidated_enviro_data.csv")
    save_to_json(final_dataset, config.RESULTS_DIR, "consolidated_enviro_data.json")

if __name__ == "__main__":
    run_pipeline()
```

`scripts/test_model.py`

```python
# scripts/test_model.py

import pandas as pd
import joblib
import numpy as np
from sklearn.preprocessing import StandardScaler
import warnings
import os

# Suppress warnings for cleaner output
warnings.filterwarnings('ignore')

# --- 1. DEFINE FILE PATHS (ROBUST METHOD) ---
script_dir = os.path.dirname(os.path.abspath(__file__))
MODEL_PATH = os.path.join(script_dir, '..', 'models', 'pollution_source_model.joblib')
TEST_DATA_PATH = os.path.join(script_dir, '..', 'data', 'test.csv')
TRAIN_DATA_PATH = os.path.join(script_dir, '..', 'data', 'train.csv')


# --- 2. LOAD THE TRAINED MODEL AND SUPPORTING DATA ---
try:
    model = joblib.load(MODEL_PATH)
    print(f"✅ Model loaded successfully from {os.path.abspath(MODEL_PATH)}")

    test_df = pd.read_csv(TEST_DATA_PATH)
    X_test = test_df.drop('pollution_source', axis=1)
    
    train_df = pd.read_csv(TRAIN_DATA_PATH)
    y_train_labels = train_df['pollution_source']
    
    unique_labels = sorted(np.unique(y_train_labels))
    class_mapping = {label: i for i, label in enumerate(unique_labels)}
    inverse_class_mapping = {i: label for label, i in class_mapping.items()}
    print("\n✅ Class mapping created:")
    print(inverse_class_mapping)

except FileNotFoundError as e:
    print(f"❌ ERROR: Could not load a required file. Please check the path.")
    print(f"Attempted to load: {os.path.abspath(e.filename if hasattr(e, 'filename') else MODEL_PATH)}")
    exit()


# --- 3. METHOD 1: QUICK TEST WITH A SAMPLE FROM THE TEST SET ---
def test_with_sample_row():
    print("\n--- [ Method 1: Quick Test with a Sample Row ] ---")
    sample_row = X_test.iloc[[0]]
    prediction_encoded = model.predict(sample_row)
    prediction_label = inverse_class_mapping[prediction_encoded[0]]
    print(f"\nSample Data (first row of test set):")
    print(sample_row)
    print(f"\n🤖 Model Prediction: '{prediction_label}' (Encoded: {prediction_encoded[0]})")


# --- 4. METHOD 2: "REAL-WORLD" SIMULATION WITH CUSTOM DATA ---
def test_with_custom_data():
    print("\n--- [ Method 2: 'Real-World' Simulation ] ---")
    print("Simulating a high-traffic scenario: High NO2, near a major road.")

    custom_scenario = {
        'latitude': 28.7041, 'longitude': 77.1025,
        'co': 2500, 'no2': 95, 'o3': 20, 'pm10': 150, 'pm25': 80, 'so2': 15,
        'temperature': 35, 'humidity': 60, 'wind_speed': 2, 'wind_direction': 270,
        'distance_to_nearest_industrial_m': 4000,
        'distance_to_nearest_major_roads_m': 150,
        'distance_to_nearest_dump_site_m': 8000,
        'distance_to_nearest_agricultural_m': 10000,
        'is_weekend': 0,
        'hour_sin': np.sin(2 * np.pi * 9 / 24.0),
        'hour_cos': np.cos(2 * np.pi * 9 / 24.0),
        'month_sin': np.sin(2 * np.pi * 6 / 12.0),
        'month_cos': np.cos(2 * np.pi * 6 / 12.0),
        'location_Delhi_India': True,
        'location_Kolkata_India': False,
        'location_Mumbai_India': False
    }
    custom_df = pd.DataFrame([custom_scenario])

    # --- Preprocessing the custom data ---
    # 1. Define the numerical columns that need to be scaled.
    numerical_cols_for_scaling = [
        'co', 'no2', 'o3', 'pm10', 'pm25', 'so2', 'temperature', 'humidity',
        'wind_speed', 'wind_direction', 'distance_to_nearest_industrial_m',
        'distance_to_nearest_major_roads_m', 'distance_to_nearest_dump_site_m',
        'distance_to_nearest_agricultural_m'
    ]
    
    # 2. Load the TRAINING data to fit the scaler. This is crucial.
    #    We must scale our new data using the same scale as the data the model was trained on.
    X_train_for_scaler = train_df.drop('pollution_source', axis=1)
    scaler = StandardScaler()
    scaler.fit(X_train_for_scaler[numerical_cols_for_scaling])

    # 3. Scale the numerical features of our custom data point
    custom_df[numerical_cols_for_scaling] = scaler.transform(custom_df[numerical_cols_for_scaling])

    # 4. Ensure the column order is exactly the same as the training data
    custom_df = custom_df[X_test.columns]

    print("\nProcessed Custom Data (Scaled):")
    print(custom_df)

    # Make a prediction
    prediction_encoded = model.predict(custom_df)
    prediction_label = inverse_class_mapping[prediction_encoded[0]]

    print(f"\n🤖 Model Prediction for Custom Scenario: '{prediction_label}' (Encoded: {prediction_encoded[0]})")


# --- 5. RUN THE TESTS ---
if __name__ == "__main__":
    test_with_sample_row()
    print("\n" + "="*60 + "\n")
    test_with_custom_data()
```

`scripts/utils.py`

```python
# scripts/utils.py

import pandas as pd
import os

def save_to_csv(dataframe, directory, filename):
    """
    Saves a pandas DataFrame to a CSV file.

    Args:
        dataframe (pd.DataFrame): The DataFrame to save.
        directory (str): The directory where the file will be saved.
        filename (str): The name of the output CSV file.
    """
    # Ensure the directory exists
    if not os.path.exists(directory):
        os.makedirs(directory)

    filepath = os.path.join(directory, filename)
    try:
        dataframe.to_csv(filepath, index=False)
        print(f"Successfully saved data to {filepath}")
    except Exception as e:
        print(f"Error saving data to {filepath}: {e}")

def save_to_json(dataframe, directory, filename):
    """
    Saves a pandas DataFrame to a JSON file.

    Args:
        dataframe (pd.DataFrame): The DataFrame to save.
        directory (str): The directory where the file will be saved.
        filename (str): The name of the output JSON file.
    """
    # Ensure the directory exists
    if not os.path.exists(directory):
        os.makedirs(directory)

    filepath = os.path.join(directory, filename)
    try:
        dataframe.to_json(filepath, orient='records', indent=4)
        print(f"Successfully saved data to {filepath}")
    except Exception as e:
        print(f"Error saving data to {filepath}: {e}")
```

`structure.txt`

```
EnviroScan_Project/
│
├── data/
│   ├── raw/
│   │   ├── air_quality.csv
│   │   └── weather.csv
│   ├── processed/
│   │   └── consolidated_data.csv
│   └── consolidated_data.json
│
├── notebooks/
│   └── 1_Data_Collection_Exploration.ipynb
│
├── scripts/
│   ├── config.py
│   ├── data_collector.py
│   └── utils.py
│
├── README.md
└── requirements.txt
```

